!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t() : typeof define === 'function' && define.amd ? define(t) : (e = typeof globalThis !== 'undefined' ? globalThis : e || self).mocha = t() }(this, function () { 'use strict'; const O = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}; function e (e, t, r) { return e(r = { path: t, exports: {}, require: function (e, t) { return m(t == null && r.path) } }, r.exports), r.exports } function t (e) { return e && e.default || e } function m () { throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs') } function y (e) { try { return !!e() } catch (e) { return !0 } } function D (e, t) { return { enumerable: !(1 & e), configurable: !(2 & e), writable: !(4 & e), value: t } } function l (e) { return a.call(e).slice(8, -1) } function f (e) { if (e == null) { throw TypeError("Can't call method on " + e) } return e } function c (e) { return w(f(e)) } function L (e) { return typeof e === 'object' ? e !== null : typeof e === 'function' } function h (e, t) { if (!L(e)) { return e } let r, n; if (t && typeof (r = e.toString) === 'function' && !L(n = r.call(e))) { return n } if (typeof (r = e.valueOf) === 'function' && !L(n = r.call(e))) { return n } if (!t && typeof (r = e.toString) === 'function' && !L(n = r.call(e))) { return n } throw TypeError("Can't convert object to primitive value") } function k (e, t) { return u.call(e, t) } function r (e) { return v ? g.createElement(e) : {} } function S (e) { if (!L(e)) { throw TypeError(String(e) + ' is not an object') } return e } function p (t, r) { try { U(C, t, r) } catch (e) { C[t] = r } return r } var n = function (e) { return e && e.Math == Math && e }; var C = n(typeof globalThis === 'object' && globalThis) || n(typeof window === 'object' && window) || n(typeof self === 'object' && self) || n(typeof O === 'object' && O) || (function () { return this }()) || Function('return this')(); const I = !y(function () { return Object.defineProperty({}, 1, { get: function () { return 7 } })[1] != 7 }); var i = {}.propertyIsEnumerable; const o = Object.getOwnPropertyDescriptor; const d = { f: o && !i.call({ 1: 2 }, 1) ? function (e) { e = o(this, e); return !!e && e.enumerable } : i }; var a = {}.toString; const s = ''.split; var w = y(function () { return !Object('z').propertyIsEnumerable(0) }) ? function (e) { return l(e) == 'String' ? s.call(e, '') : Object(e) } : Object; var u = {}.hasOwnProperty; var g = C.document; var v = L(g) && L(g.createElement); const b = !I && !y(function () { return Object.defineProperty(r('div'), 'a', { get: function () { return 7 } }).a != 7 }); const E = Object.getOwnPropertyDescriptor; const P = { f: I ? E : function (e, t) { if (e = c(e), t = h(t, !0), b) { try { return E(e, t) } catch (e) {} } if (k(e, t)) { return D(!d.f.call(e, t), e[t]) } } }; const T = Object.defineProperty; const q = { f: I ? T : function (e, t, r) { if (S(e), t = h(t, !0), S(r), b) { try { return T(e, t, r) } catch (e) {} } if ('get' in r || 'set' in r) { throw TypeError('Accessors not supported') } return 'value' in r && (e[t] = r.value), e } }; var U = I ? function (e, t, r) { return q.f(e, t, D(1, r)) } : function (e, t, r) { return e[t] = r, e }; var A = '__core-js_shared__'; const _ = C[A] || p(A, {}); const x = Function.toString; typeof _.inspectSource !== 'function' && (_.inspectSource = function (e) { return x.call(e) }); function R (e) { return 'Symbol(' + String(void 0 === e ? '' : e) + ')_' + (++J + K).toString(36) } let N; let F; let B; let j; let M; let V; let G; let H; const z = _.inspectSource; var Y = C.WeakMap; var W = typeof Y === 'function' && /native code/.test(z(Y)); var $ = e(function (e) { (e.exports = function (e, t) { return _[e] || (_[e] = void 0 !== t ? t : {}) })('versions', []).push({ version: '3.8.3', mode: 'global', copyright: 'Â© 2021 Denis Pushkarev (zloirock.ru)' }) }); var J = 0; var K = Math.random(); const Q = $('keys'); var Z = function (e) { return Q[e] || (Q[e] = R(e)) }; const X = {}; var ee = C.WeakMap; G = W ? (N = _.state || (_.state = new ee()), F = N.get, B = N.has, j = N.set, M = function (e, t) { return t.facade = e, j.call(N, e, t), t }, V = function (e) { return F.call(N, e) || {} }, function (e) { return B.call(N, e) }) : (H = Z('state'), X[H] = !0, M = function (e, t) { return t.facade = e, U(e, H, t), t }, V = function (e) { return k(e, H) ? e[H] : {} }, function (e) { return k(e, H) }); function te (e) { return typeof e === 'function' ? e : void 0 } function re (e, t) { return arguments.length < 2 ? te(ye[e]) || te(C[e]) : ye[e] && ye[e][t] || C[e] && C[e][t] } function ne (e) { return isNaN(e = +e) ? 0 : (e > 0 ? ve : me)(e) } function ie (e) { return e > 0 ? be(ne(e), 9007199254740991) : 0 } function oe (e, t) { return (e = ne(e)) < 0 ? we(e + t, 0) : Ee(e, t) } function ae (e, t) { let r; const n = c(e); let i = 0; const o = []; for (r in n) { !k(X, r) && k(n, r) && o.push(r) } for (;t.length > i;) { k(n, r = t[i++]) && (~_e(o, r) || o.push(r)) } return o } function se (e, t) { for (let r = De(t), n = q.f, i = P.f, o = 0; o < r.length; o++) { const a = r[o]; k(e, a) || n(e, a, i(t, a)) } } function ue (e, t) { let r; let n; let i; const o = e.target; const a = e.global; const s = e.stat; const u = a ? C : s ? C[o] || p(o, {}) : (C[o] || {}).prototype; if (u) { for (r in t) { if (n = t[r], i = e.noTargetGet ? (i = Ue(u, r)) && i.value : u[r], !qe(a ? r : o + (s ? '.' : '#') + r, e.forced) && void 0 !== i) { if (typeof n === typeof i) { continue } se(n, i) }(e.sham || i && i.sham) && U(n, 'sham', !0), ge(u, r, n, e) } } } function ce (e) { if (typeof e !== 'function') { throw TypeError(String(e) + ' is not a function') } return e } function le (n, i, e) { if (ce(n), void 0 === i) { return n } switch (e) { case 0:return function () { return n.call(i) }; case 1:return function (e) { return n.call(i, e) }; case 2:return function (e, t) { return n.call(i, e, t) }; case 3:return function (e, t, r) { return n.call(i, e, t, r) } } return function () { return n.apply(i, arguments) } } function fe (e) { return Object(f(e)) } function he (e) { return k(Me, e) || (Be && k(Ve, e) ? Me[e] = Ve[e] : Me[e] = Ge('Symbol.' + e)), Me[e] } function pe (e, t) { let r; return Fe(e) && (typeof (r = e.constructor) === 'function' && (r === Array || Fe(r.prototype)) || L(r) && (r = r[He]) === null) && (r = void 0), new (void 0 === r ? Array : r)(t === 0 ? 0 : t) } const de = { set: M, get: V, has: G, enforce: function (e) { return G(e) ? V(e) : M(e, {}) }, getterFor: function (r) { return function (e) { let t; if (!L(e) || (t = V(e)).type !== r) { throw TypeError('Incompatible receiver, ' + r + ' required') } return t } } }; var ge = e(function (e) { const t = de.get; const s = de.enforce; const u = String(String).split('String'); (e.exports = function (e, t, r, n) { const i = !!n && !!n.unsafe; let o = !!n && !!n.enumerable; const a = !!n && !!n.noTargetGet; typeof r === 'function' && (typeof t !== 'string' || k(r, 'name') || U(r, 'name', t), (n = s(r)).source || (n.source = u.join(typeof t === 'string' ? t : ''))), e !== C ? (i ? !a && e[t] && (o = !0) : delete e[t], o ? e[t] = r : U(e, t, r)) : o ? e[t] = r : p(t, r) })(Function.prototype, 'toString', function () { return typeof this === 'function' && t(this).source || z(this) }) }); var ye = C; var me = Math.ceil; var ve = Math.floor; var be = Math.min; var we = Math.max; var Ee = Math.min; var Te = function (s) { return function (e, t, r) { let n; const i = c(e); const o = ie(i.length); let a = oe(r, o); if (s && t != t) { for (;a < o;) { if ((n = i[a++]) != n) { return !0 } } } else { for (;a < o; a++) { if ((s || a in i) && i[a] === t) { return s || a || 0 } } } return !s && -1 } }; var Ae = { includes: Te(!0), indexOf: Te(!1) }; var _e = Ae.indexOf; const Se = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf']; const xe = Se.concat('length', 'prototype'); const Re = { f: Object.getOwnPropertyNames || function (e) { return ae(e, xe) } }; const Ne = { f: Object.getOwnPropertySymbols }; var De = re('Reflect', 'ownKeys') || function (e) { const t = Re.f(S(e)); const r = Ne.f; return r ? t.concat(r(e)) : t }; const Le = /#|\.prototype\./; var ke = function (e, t) { e = Ce[Oe(e)]; return e == Pe || e != Ie && (typeof t === 'function' ? y(t) : !!t) }; var Oe = ke.normalize = function (e) { return String(e).replace(Le, '.').toLowerCase() }; var Ce = ke.data = {}; var Ie = ke.NATIVE = 'N'; var Pe = ke.POLYFILL = 'P'; var qe = ke; var Ue = P.f; var Fe = Array.isArray || function (e) { return l(e) == 'Array' }; var Be = !!Object.getOwnPropertySymbols && !y(function () { return !String(Symbol()) }); var je = Be && !Symbol.sham && typeof Symbol.iterator === 'symbol'; var Me = $('wks'); var Ve = C.Symbol; var Ge = je ? Ve : Ve && Ve.withoutSetter || R; var He = he('species'); const ze = [].push; var Ye = function (h) { const p = h == 1; const d = h == 2; const g = h == 3; const y = h == 4; const m = h == 6; const v = h == 7; const b = h == 5 || m; return function (e, t, r, n) { for (var i, o, a = fe(e), s = w(a), u = le(t, r, 3), c = ie(s.length), l = 0, n = n || pe, f = p ? n(e, c) : d || v ? n(e, 0) : void 0; l < c; l++) { if ((b || l in s) && (o = u(i = s[l], l, a), h)) { if (p) { f[l] = o } else if (o) { switch (h) { case 3:return !0; case 5:return i; case 6:return l; case 2:ze.call(f, i) } } else { switch (h) { case 4:return !1; case 7:ze.call(f, i) } } } } return m ? -1 : g || y ? y : f } }; const We = { forEach: Ye(0), map: Ye(1), filter: Ye(2), some: Ye(3), every: Ye(4), find: Ye(5), findIndex: Ye(6), filterOut: Ye(7) }; var $e = re('navigator', 'userAgent') || ''; var Je = C.process; var n = Je && Je.versions; var i = n && n.v8; i ? dt = (ut = i.split('.'))[0] + ut[1] : $e && (!(ut = $e.match(/Edge\/(\d+)/)) || ut[1] >= 74) && (ut = $e.match(/Chrome\/(\d+)/)) && (dt = ut[1]); function Ke (e) { throw e } const Qe = dt && +dt; const Ze = he('species'); var A = function (t) { return Qe >= 51 || !y(function () { const e = []; return (e.constructor = {})[Ze] = function () { return { foo: 1 } }, e[t](Boolean).foo !== 1 }) }; const Xe = Object.defineProperty; const et = {}; var Y = function (e, t) { if (k(et, e)) { return et[e] } const r = [][e]; const n = !!k(t = t || {}, 'ACCESSORS') && t.ACCESSORS; const i = k(t, 0) ? t[0] : Ke; const o = k(t, 1) ? t[1] : void 0; return et[e] = !!r && !y(function () { if (n && !I) { return 1 } const e = { length: -1 }; n ? Xe(e, 1, { enumerable: !0, get: Ke }) : e[1] = 1, r.call(e, i, o) }) }; const tt = We.filter; var W = A('filter'); var ee = Y('filter'); ue({ target: 'Array', proto: !0, forced: !W || !ee }, { filter: function (e, t) { return tt(this, e, arguments.length > 1 ? t : void 0) } }); var Te = function (e, t) { const r = [][e]; return !!r && y(function () { r.call(null, t || function () { throw 1 }, 1) }) }; const rt = We.forEach; var ke = Te('forEach'); var Ye = Y('forEach'); const nt = ke && Ye ? [].forEach : function (e, t) { return rt(this, e, arguments.length > 1 ? t : void 0) }; ue({ target: 'Array', proto: !0, forced: [].forEach != nt }, { forEach: nt }); const it = Ae.indexOf; const ot = [].indexOf; const at = !!ot && 1 / [1].indexOf(1, -0) < 0; var Je = Te('indexOf'); var n = Y('indexOf', { ACCESSORS: !0, 1: 0 }); ue({ target: 'Array', proto: !0, forced: at || !Je || !n }, { indexOf: function (e, t) { return at ? ot.apply(this, arguments) || 0 : it(this, e, arguments.length > 1 ? t : void 0) } }); function st (e, t, r) { (t = h(t)) in e ? q.f(e, t, D(0, r)) : e[t] = r } var i = A('splice'); var ut = Y('splice', { ACCESSORS: !0, 0: 0, 1: 2 }); const ct = Math.max; const lt = Math.min; ue({ target: 'Array', proto: !0, forced: !i || !ut }, { splice: function (e, t) { let r; let n; let i; let o; let a; let s; const u = fe(this); const c = ie(u.length); const l = oe(e, c); var e = arguments.length; if (e === 0 ? r = n = 0 : n = e === 1 ? (r = 0, c - l) : (r = e - 2, lt(ct(ne(t), 0), c - l)), c + r - n > 9007199254740991) { throw TypeError('Maximum allowed length exceeded') } for (i = pe(u, n), o = 0; o < n; o++) { (a = l + o) in u && st(i, o, u[a]) } if (r < (i.length = n)) { for (o = l; o < c - n; o++) { s = o + r, (a = o + n) in u ? u[s] = u[a] : delete u[s] } for (o = c; c - n + r < o; o--) { delete u[o - 1] } } else if (n < r) { for (o = c - n; l < o; o--) { s = o + r - 1, (a = o + n - 1) in u ? u[s] = u[a] : delete u[s] } } for (o = 0; o < r; o++) { u[o + l] = arguments[o + 2] } return u.length = c - n + r, i } }); const ft = Object.keys || function (e) { return ae(e, Se) }; const ht = Object.assign; const pt = Object.defineProperty; var dt = !ht || y(function () { if (I && ht({ b: 1 }, ht(pt({}, 'a', { enumerable: !0, get: function () { pt(this, 'b', { value: 3, enumerable: !1 }) } }), { b: 2 })).b !== 1) { return 1 } const e = {}; const t = {}; const r = Symbol(); const n = 'abcdefghijklmnopqrst'; return e[r] = 7, n.split('').forEach(function (e) { t[e] = e }), ht({}, e)[r] != 7 || ft(ht({}, t)).join('') != n }) ? function (e) { for (var t = fe(e), r = arguments.length, n = 1, i = Ne.f, o = d.f; n < r;) { for (var a, s = w(arguments[n++]), u = i ? ft(s).concat(i(s)) : ft(s), c = u.length, l = 0; l < c;) { a = u[l++], I && !o.call(s, a) || (t[a] = s[a]) } } return t } : ht; ue({ target: 'Object', stat: !0, forced: Object.assign !== dt }, { assign: dt }); W = y(function () { ft(1) }); ue({ target: 'Object', stat: !0, forced: W }, { keys: function (e) { return ft(fe(e)) } }); function gt () { const e = S(this); let t = ''; return e.global && (t += 'g'), e.ignoreCase && (t += 'i'), e.multiline && (t += 'm'), e.dotAll && (t += 's'), e.unicode && (t += 'u'), e.sticky && (t += 'y'), t } function yt (e, t) { return RegExp(e, t) } var ee = { UNSUPPORTED_Y: y(function () { const e = yt('a', 'y'); return e.lastIndex = 2, e.exec('abcd') != null }), BROKEN_CARET: y(function () { const e = yt('^r', 'gy'); return e.lastIndex = 2, e.exec('str') != null }) }; const mt = RegExp.prototype.exec; const vt = String.prototype.replace; var ke = mt; const bt = (Ye = /a/, Je = /b*/g, mt.call(Ye, 'a'), mt.call(Je, 'a'), Ye.lastIndex !== 0 || Je.lastIndex !== 0); const wt = ee.UNSUPPORTED_Y || ee.BROKEN_CARET; const Et = void 0 !== /()??/.exec('')[1]; (bt || Et || wt) && (ke = function (e) { let t; let r; let n; let i; const o = this; const a = wt && o.sticky; let s = gt.call(o); let u = o.source; let c = 0; let l = e; return a && ((s = s.replace('y', '')).indexOf('g') === -1 && (s += 'g'), l = String(e).slice(o.lastIndex), o.lastIndex > 0 && (!o.multiline || o.multiline && e[o.lastIndex - 1] !== '\n') && (u = '(?: ' + u + ')', l = ' ' + l, c++), r = new RegExp('^(?:' + u + ')', s)), Et && (r = new RegExp('^' + u + '$(?!\\s)', s)), bt && (t = o.lastIndex), n = mt.call(a ? r : o, l), a ? n ? (n.input = n.input.slice(c), n[0] = n[0].slice(c), n.index = o.lastIndex, o.lastIndex += n[0].length) : o.lastIndex = 0 : bt && n && (o.lastIndex = o.global ? n.index + n[0].length : t), Et && n && n.length > 1 && vt.call(n[0], r, function () { for (i = 1; i < arguments.length - 2; i++) { void 0 === arguments[i] && (n[i] = void 0) } }), n }); const Tt = ke; ue({ target: 'RegExp', proto: !0, forced: /./.exec !== Tt }, { exec: Tt }); function At (e, t) { let r = e.exec; if (typeof r === 'function') { r = r.call(e, t); if (typeof r !== 'object') { throw TypeError('RegExp exec method returned something other than an Object or null') } return r } if (l(e) !== 'RegExp') { throw TypeError('RegExp#exec called on incompatible receiver') } return Tt.call(e, t) } const _t = he('species'); const St = !y(function () { const e = /./; return e.exec = function () { const e = []; return e.groups = { a: '7' }, e }, ''.replace(e, '$<a>') !== '7' }); const xt = 'a'.replace(/./, '$0') === '$0'; var n = he('replace'); const Rt = !!/./[n] && /./[n]('a', '$0') === ''; const Nt = !y(function () { let e = /(?:)/; const t = e.exec; e.exec = function () { return t.apply(this, arguments) }; e = 'ab'.split(e); return e.length !== 2 || e[0] !== 'a' || e[1] !== 'b' }); var i = function (r, e, t, n) { let o; let i; const a = he(r); const s = !y(function () { const e = {}; return e[a] = function () { return 7 }, ''[r](e) != 7 }); let u = s && !y(function () { let e = !1; let t = /a/; return r === 'split' && ((t = { constructor: {} }).constructor[_t] = function () { return t }, t.flags = '', t[a] = /./[a]), t.exec = function () { return e = !0, null }, t[a](''), !e }); s && u && (r !== 'replace' || St && xt && !Rt) && (r !== 'split' || Nt) || (o = /./[a], t = (u = t(a, ''[r], function (e, t, r, n, i) { return t.exec === Tt ? s && !i ? { done: !0, value: o.call(t, r, n) } : { done: !0, value: e.call(r, t, n) } : { done: !1 } }, { REPLACE_KEEPS_$0: xt, REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: Rt }))[0], i = u[1], ge(String.prototype, r, t), ge(RegExp.prototype, a, e == 2 ? function (e, t) { return i.call(e, this, t) } : function (e) { return i.call(e, this) })), n && U(RegExp.prototype[a], 'sham', !0) }; const Dt = Object.is || function (e, t) { return e === t ? e !== 0 || 1 / e == 1 / t : e != e && t != t }; i('search', 1, function (n, i, o) { return [function (e) { const t = f(this); const r = e == null ? void 0 : e[n]; return void 0 !== r ? r.call(e, t) : new RegExp(e)[n](String(t)) }, function (e) { var t = o(i, e, this); if (t.done) { return t.value } const r = S(e); var t = String(this); var e = r.lastIndex; Dt(e, 0) || (r.lastIndex = 0); t = At(r, t); return Dt(r.lastIndex, e) || (r.lastIndex = e), t === null ? -1 : t.index }] }); let Lt; const kt = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 }; for (Lt in kt) { const Ot = C[Lt]; const Ct = Ot && Ot.prototype; if (Ct && Ct.forEach !== nt) { try { U(Ct, 'forEach', nt) } catch (e) { Ct.forEach = nt } } } const It = he('isConcatSpreadable'); const Pt = 9007199254740991; const qt = 'Maximum allowed index exceeded'; var ut = Qe >= 51 || !y(function () { const e = []; return e[It] = !1, e.concat()[0] !== e }); var dt = A('concat'); ue({ target: 'Array', proto: !0, forced: !ut || !dt }, { concat: function () { for (var e, t, r, n = fe(this), i = pe(n, 0), o = 0, a = -1, s = arguments.length; a < s; a++) { if (function (e) { if (!L(e)) { return !1 } const t = e[It]; return void 0 !== t ? !!t : Fe(e) }(r = a === -1 ? n : arguments[a])) { if (t = ie(r.length), Pt < o + t) { throw TypeError(qt) } for (e = 0; e < t; e++, o++) { e in r && st(i, o, r[e]) } } else { if (Pt <= o) { throw TypeError(qt) } st(i, o++, r) } } return i.length = o, i } }); var W = void 0 !== Ut ? Ut : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {}; var Ut = void 0 !== W ? W : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {}; function Ft () { throw new Error('setTimeout has not been defined') } function Bt () { throw new Error('clearTimeout has not been defined') } let jt = Ft; let Mt = Bt; function Vt (t) { if (jt === setTimeout) { return setTimeout(t, 0) } if ((jt === Ft || !jt) && setTimeout) { return jt = setTimeout, setTimeout(t, 0) } try { return jt(t, 0) } catch (e) { try { return jt.call(null, t, 0) } catch (e) { return jt.call(this, t, 0) } } } typeof Ut.setTimeout === 'function' && (jt = setTimeout), typeof Ut.clearTimeout === 'function' && (Mt = clearTimeout); let Gt; let Ht = []; let zt = !1; let Yt = -1; function Wt () { zt && Gt && (zt = !1, Gt.length ? Ht = Gt.concat(Ht) : Yt = -1, Ht.length && $t()) } function $t () { if (!zt) { const e = Vt(Wt); zt = !0; for (let t = Ht.length; t;) { for (Gt = Ht, Ht = []; ++Yt < t;) { Gt && Gt[Yt].run() }Yt = -1, t = Ht.length }Gt = null, zt = !1, (function (t) { if (Mt === clearTimeout) { return clearTimeout(t) } if ((Mt === Bt || !Mt) && clearTimeout) { return Mt = clearTimeout, clearTimeout(t) } try { Mt(t) } catch (e) { try { return Mt.call(null, t) } catch (e) { return Mt.call(this, t) } } }(e)) } } function Jt (e) { const t = new Array(arguments.length - 1); if (arguments.length > 1) { for (let r = 1; r < arguments.length; r++) { t[r - 1] = arguments[r] } }Ht.push(new Kt(e, t)), Ht.length !== 1 || zt || Vt($t) } function Kt (e, t) { this.fun = e, this.array = t }Kt.prototype.run = function () { this.fun.apply(null, this.array) }; function Qt () {}Ye = Qt, Je = Qt, ke = Qt, n = Qt, ut = Qt, dt = Qt, W = Qt; const Zt = Ut.performance || {}; const Xt = Zt.now || Zt.mozNow || Zt.msNow || Zt.oNow || Zt.webkitNow || function () { return (new Date()).getTime() }; const er = new Date(); const tr = { nextTick: Jt, title: 'browser', browser: !0, env: {}, argv: [], version: '', versions: {}, on: Ye, addListener: Je, once: ke, off: n, removeListener: ut, removeAllListeners: dt, emit: W, binding: function (e) { throw new Error('process.binding is not supported') }, cwd: function () { return '/' }, chdir: function (e) { throw new Error('process.chdir is not supported') }, umask: function () { return 0 }, hrtime: function (e) { var t = 0.001 * Xt.call(Zt); let r = Math.floor(t); var t = Math.floor(t % 1 * 1e9); return e && (r -= e[0], (t -= e[1]) < 0 && (r--, t += 1e9)), [r, t] }, platform: 'browser', release: {}, config: {}, uptime: function () { return (new Date() - er) / 1e3 } }; var ke = {}; ke[he('toStringTag')] = 'z'; var n = String(ke) === '[object z]'; const rr = he('toStringTag'); const nr = l(function () { return arguments }()) == 'Arguments'; const ir = n ? l : function (e) { let t; return void 0 === e ? 'Undefined' : e === null ? 'Null' : typeof (e = (function (e, t) { try { return e[t] } catch (e) {} }(t = Object(e), rr))) === 'string' ? e : nr ? l(t) : (e = l(t)) == 'Object' && typeof t.callee === 'function' ? 'Arguments' : e }; var ut = n ? {}.toString : function () { return '[object ' + ir(this) + ']' }; n || ge(Object.prototype, 'toString', ut, { unsafe: !0 }); var dt = 'toString'; const or = RegExp.prototype; const ar = or[dt]; var W = y(function () { return ar.call({ source: 'a', flags: 'b' }) != '/a/b' }); var ke = ar.name != dt; (W || ke) && ge(RegExp.prototype, dt, function () { const e = S(this); const t = String(e.source); const r = e.flags; return '/' + t + '/' + String(void 0 === r && e instanceof RegExp && !('flags' in or) ? gt.call(e) : r) }, { unsafe: !0 }); var n = q.f; var ut = Function.prototype; const sr = ut.toString; const ur = /^\s*function ([^ (]*)/; !I || 'name' in ut || n(ut, 'name', { configurable: !0, get: function () { try { return sr.call(this).match(ur)[1] } catch (e) { return '' } } }); var W = !y(function () { function e () {} return e.prototype.constructor = null, Object.getPrototypeOf(new e()) !== e.prototype }); const cr = Z('IE_PROTO'); const lr = Object.prototype; const fr = W ? Object.getPrototypeOf : function (e) { return e = fe(e), k(e, cr) ? e[cr] : typeof e.constructor === 'function' && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? lr : null }; var ke = y(function () { fr(1) }); function hr () {} function pr () { pr.init.call(this) } function dr (e) { return void 0 === e._maxListeners ? pr.defaultMaxListeners : e._maxListeners } function gr (e, t, r, n) { let i, o; if (typeof r !== 'function') { throw new TypeError('"listener" argument must be a function') } return (i = e._events) ? (i.newListener && (e.emit('newListener', t, r.listener || r), i = e._events), o = i[t]) : (i = e._events = new hr(), e._eventsCount = 0), o ? (typeof o === 'function' ? o = i[t] = n ? [r, o] : [o, r] : n ? o.unshift(r) : o.push(r), o.warned || (n = dr(e)) && n > 0 && o.length > n && (o.warned = !0, (n = new Error('Possible EventEmitter memory leak detected. ' + o.length + ' ' + t + ' listeners added. Use emitter.setMaxListeners() to increase limit')).name = 'MaxListenersExceededWarning', n.emitter = e, n.type = t, n.count = o.length, n = n, typeof console.warn === 'function' ? console.warn(n) : console.log(n))) : (o = i[t] = r, ++e._eventsCount), e } function yr (e, t, r) { let n = !1; function i () { e.removeListener(t, i), n || (n = !0, r.apply(e, arguments)) } return i.listener = r, i } function mr (e) { const t = this._events; if (t) { e = t[e]; if (typeof e === 'function') { return 1 } if (e) { return e.length } } return 0 } function vr (e, t) { for (var r = new Array(t); t--;) { r[t] = e[t] } return r }ue({ target: 'Object', stat: !0, forced: ke, sham: !W }, { getPrototypeOf: function (e) { return fr(fe(e)) } }), ue({ target: 'Reflect', stat: !0 }, { ownKeys: De }), hr.prototype = Object.create(null), (pr.EventEmitter = pr).usingDomains = !1, pr.prototype.domain = void 0, pr.prototype._events = void 0, pr.prototype._maxListeners = void 0, pr.defaultMaxListeners = 10, pr.init = function () { this.domain = null, pr.usingDomains && (void 0).active, this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = new hr(), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0 }, pr.prototype.setMaxListeners = function (e) { if (typeof e !== 'number' || e < 0 || isNaN(e)) { throw new TypeError('"n" argument must be a positive number') } return this._maxListeners = e, this }, pr.prototype.getMaxListeners = function () { return dr(this) }, pr.prototype.emit = function (e, t, r, n) { let i; let o; let a = e === 'error'; let s = this._events; if (s) { a = a && s.error == null } else if (!a) { return !1 } if (u = this.domain, a) { if (a = t, u) { return (a = a || new Error('Uncaught, unspecified "error" event')).domainEmitter = this, a.domain = u, a.domainThrown = !1, u.emit('error', a), !1 } if (a instanceof Error) { throw a } var u = new Error('Uncaught, unspecified "error" event. (' + a + ')'); throw u.context = a, u } if (!(s = s[e])) { return !1 } let c; var e = typeof s === 'function'; switch (c = arguments.length) { case 1:!(function (e, t, r) { if (t) { e.call(r) } else { for (let n = e.length, i = vr(e, n), o = 0; o < n; ++o) { i[o].call(r) } } }(s, e, this)); break; case 2:!(function (e, t, r, n) { if (t) { e.call(r, n) } else { for (let i = e.length, o = vr(e, i), a = 0; a < i; ++a) { o[a].call(r, n) } } }(s, e, this, t)); break; case 3:!(function (e, t, r, n, i) { if (t) { e.call(r, n, i) } else { for (let o = e.length, a = vr(e, o), s = 0; s < o; ++s) { a[s].call(r, n, i) } } }(s, e, this, t, r)); break; case 4:!(function (e, t, r, n, i, o) { if (t) { e.call(r, n, i, o) } else { for (let a = e.length, s = vr(e, a), u = 0; u < a; ++u) { s[u].call(r, n, i, o) } } }(s, e, this, t, r, n)); break; default:for (i = new Array(c - 1), o = 1; o < c; o++) { i[o - 1] = arguments[o] }!(function (e, t, r, n) { if (t) { e.apply(r, n) } else { for (let i = e.length, o = vr(e, i), a = 0; a < i; ++a) { o[a].apply(r, n) } } }(s, e, this, i)) } return !0 }, pr.prototype.addListener = function (e, t) { return gr(this, e, t, !1) }, pr.prototype.on = pr.prototype.addListener, pr.prototype.prependListener = function (e, t) { return gr(this, e, t, !0) }, pr.prototype.once = function (e, t) { if (typeof t !== 'function') { throw new TypeError('"listener" argument must be a function') } return this.on(e, yr(this, e, t)), this }, pr.prototype.prependOnceListener = function (e, t) { if (typeof t !== 'function') { throw new TypeError('"listener" argument must be a function') } return this.prependListener(e, yr(this, e, t)), this }, pr.prototype.removeListener = function (e, t) { let r, n, i, o, a; if (typeof t !== 'function') { throw new TypeError('"listener" argument must be a function') } if (!(n = this._events)) { return this } if (!(r = n[e])) { return this } if (r === t || r.listener && r.listener === t) { --this._eventsCount == 0 ? this._events = new hr() : (delete n[e], n.removeListener && this.emit('removeListener', e, r.listener || t)) } else if (typeof r !== 'function') { for (i = -1, o = r.length; o-- > 0;) { if (r[o] === t || r[o].listener && r[o].listener === t) { a = r[o].listener, i = o; break } } if (i < 0) { return this } if (r.length === 1) { if (r[0] = void 0, --this._eventsCount == 0) { return this._events = new hr(), this } delete n[e] } else { !(function (e, t) { for (let r = t, n = r + 1, i = e.length; n < i; r += 1, n += 1) { e[r] = e[n] }e.pop() }(r, i)) } n.removeListener && this.emit('removeListener', e, a || t) } return this }, pr.prototype.removeAllListeners = function (e) { let t; const r = this._events; if (!r) { return this } if (!r.removeListener) { return arguments.length === 0 ? (this._events = new hr(), this._eventsCount = 0) : r[e] && (--this._eventsCount == 0 ? this._events = new hr() : delete r[e]), this } if (arguments.length === 0) { for (var n, i = Object.keys(r), o = 0; o < i.length; ++o) { (n = i[o]) !== 'removeListener' && this.removeAllListeners(n) } return this.removeAllListeners('removeListener'), this._events = new hr(), this._eventsCount = 0, this } if (typeof (t = r[e]) === 'function') { this.removeListener(e, t) } else if (t) { for (;this.removeListener(e, t[t.length - 1]), t[0];) { } } return this }, pr.prototype.listeners = function (e) { const t = this._events; var r = t && (r = t[e]) ? typeof r === 'function' ? [r.listener || r] : (function (e) { for (var t = new Array(e.length), r = 0; r < t.length; ++r) { t[r] = e[r].listener || e[r] } return t }(r)) : []; return r }, pr.listenerCount = function (e, t) { return typeof e.listenerCount === 'function' ? e.listenerCount(t) : mr.call(e, t) }, pr.prototype.listenerCount = mr, pr.prototype.eventNames = function () { return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [] }; const br = [].join; var dt = w != Object; var n = Te('join', ','); ue({ target: 'Array', proto: !0, forced: dt || !n }, { join: function (e) { return br.call(c(this), void 0 === e ? ',' : e) } }); const wr = We.map; var ut = A('map'); var ke = Y('map'); ue({ target: 'Array', proto: !0, forced: !ut || !ke }, { map: function (e, t) { return wr(this, e, arguments.length > 1 ? t : void 0) } }); var W = function (c) { return function (e, t, r, n) { ce(t); const i = fe(e); const o = w(i); const a = ie(i.length); let s = c ? a - 1 : 0; const u = c ? -1 : 1; if (r < 2) { for (;;) { if (s in o) { n = o[s], s += u; break } if (s += u, c ? s < 0 : a <= s) { throw TypeError('Reduce of empty array with no initial value') } } } for (;c ? s >= 0 : s < a; s += u) { s in o && (n = t(n, o[s], s, i)) } return n } }; var dt = { left: W(!1), right: W(!0) }; const Er = l(C.process) == 'process'; const Tr = dt.left; var n = Te('reduce'); var ut = Y('reduce', { 1: 0 }); ue({ target: 'Array', proto: !0, forced: !n || !ut || !Er && Qe > 79 && Qe < 83 }, { reduce: function (e, t) { return Tr(this, e, arguments.length, arguments.length > 1 ? t : void 0) } }); function Ar (e, t, r) { let n, i; return Rr && typeof (n = t.constructor) === 'function' && n !== r && L(i = n.prototype) && i !== r.prototype && Rr(e, i), e } function _r () {} function Sr (e) { return '<script>' + e + '</' + kr + '>' } let xr; var Rr = Object.setPrototypeOf || ('__proto__' in {} ? (function () { let r; let n = !1; const e = {}; try { (r = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set).call(e, []), n = e instanceof Array } catch (e) {} return function (e, t) { return S(e), (function (e) { if (!L(e) && e !== null) { throw TypeError("Can't set " + String(e) + ' as a prototype') } }(t)), n ? r.call(e, t) : e.__proto__ = t, e } }()) : void 0); const Nr = I ? Object.defineProperties : function (e, t) { S(e); for (var r, n = ft(t), i = n.length, o = 0; o < i;) { q.f(e, r = n[o++], t[r]) } return e }; const Dr = re('document', 'documentElement'); const Lr = 'prototype'; var kr = 'script'; const Or = Z('IE_PROTO'); var Cr = function () { try { xr = document.domain && new ActiveXObject('htmlfile') } catch (e) {} let e; Cr = xr ? (function (e) { e.write(Sr('')), e.close(); const t = e.parentWindow.Object; return e = null, t }(xr)) : ((e = r('iframe')).style.display = 'none', Dr.appendChild(e), e.src = String('javascript:'), (e = e.contentWindow.document).open(), e.write(Sr('document.F=Object')), e.close(), e.F); for (let t = Se.length; t--;) { delete Cr[Lr][Se[t]] } return Cr() }; X[Or] = !0; function Ir (e) { let t; let r; let n; let i; let o; let a; let s; let u = h(e, !1); if (typeof u === 'string' && u.length > 2) { if ((t = (u = Mr(u)).charCodeAt(0)) === 43 || t === 45) { if ((e = u.charCodeAt(2)) === 88 || e === 120) { return NaN } } else if (t === 48) { switch (u.charCodeAt(1)) { case 66:case 98:r = 2, n = 49; break; case 79:case 111:r = 8, n = 55; break; default:return +u } for (o = (i = u.slice(2)).length, a = 0; a < o; a++) { if ((s = i.charCodeAt(a)) < 48 || n < s) { return NaN } } return parseInt(i, r) } } return +u } const Pr = Object.create || function (e, t) { let r; return e !== null ? (_r[Lr] = S(e), r = new _r(), _r[Lr] = null, r[Or] = e) : r = Cr(), void 0 === t ? r : Nr(r, t) }; const qr = '\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff'; var ke = '[' + qr + ']'; const Ur = RegExp('^' + ke + ke + '*'); const Fr = RegExp(ke + ke + '*$'); var W = function (t) { return function (e) { e = String(f(e)); return 1 & t && (e = e.replace(Ur, '')), 2 & t && (e = e.replace(Fr, '')), e } }; var n = { start: W(1), end: W(2), trim: W(3) }; var ut = Re.f; const Br = P.f; const jr = q.f; var Mr = n.trim; const Vr = 'Number'; const Gr = C[Vr]; const Hr = Gr.prototype; const zr = l(Pr(Hr)) == Vr; if (qe(Vr, !Gr(' 0o1') || !Gr('0b1') || Gr('+0x1'))) { for (var Yr, Wr = function (e) { var e = arguments.length < 1 ? 0 : e; const t = this; return t instanceof Wr && (zr ? y(function () { Hr.valueOf.call(t) }) : l(t) != Vr) ? Ar(new Gr(Ir(e)), t, Wr) : Ir(e) }, $r = I ? ut(Gr) : 'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range'.split(','), Jr = 0; $r.length > Jr; Jr++) { k(Gr, Yr = $r[Jr]) && !k(Wr, Yr) && jr(Wr, Yr, Br(Gr, Yr)) }(Wr.prototype = Hr).constructor = Wr, ge(C, Vr, Wr) } const Kr = P.f; var ke = y(function () { Kr(1) }); ue({ target: 'Object', stat: !0, forced: !I || ke, sham: !I }, { getOwnPropertyDescriptor: function (e, t) { return Kr(c(e), t) } }); const Qr = Re.f; const Zr = {}.toString; const Xr = typeof window === 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : []; var W = { f: function (e) { return Xr && Zr.call(e) == '[object Window]' ? (function (e) { try { return Qr(e) } catch (e) { return Xr.slice() } }(e)) : Qr(c(e)) } }; var ut = W.f; var ke = y(function () { return !Object.getOwnPropertyNames(1) }); ue({ target: 'Object', stat: !0, forced: ke }, { getOwnPropertyNames: ut }); function en (e) { let t; return L(e) && (void 0 !== (t = e[rn]) ? !!t : l(e) == 'RegExp') } function tn (e) { const t = re(e); var e = q.f; I && t && !t[nn] && e(t, nn, { configurable: !0, get: function () { return this } }) } var rn = he('match'); var nn = he('species'); const on = q.f; var ut = Re.f; const an = de.set; const sn = he('match'); const un = C.RegExp; const cn = un.prototype; const ln = /a/g; const fn = /a/g; const hn = new un(ln) !== ln; const pn = ee.UNSUPPORTED_Y; if (I && qe('RegExp', !hn || pn || y(function () { return fn[sn] = !1, un(ln) != ln || un(fn) == fn || un(ln, 'i') != '/a/i' }))) { for (var dn = function (e, t) { let r; let n = this instanceof dn; const i = en(e); const o = void 0 === t; if (!n && i && e.constructor === dn && o) { return e } hn ? i && !o && (e = e.source) : e instanceof dn && (o && (t = gt.call(e)), e = e.source), pn && (r = !!t && t.indexOf('y') > -1) && (t = t.replace(/y/g, '')); n = Ar(hn ? new un(e, t) : un(e, t), n ? this : cn, dn); return pn && r && an(n, { sticky: r }), n }, gn = ut(un), yn = 0; gn.length > yn;) { !(function (t) { t in dn || on(dn, t, { configurable: !0, get: function () { return un[t] }, set: function (e) { un[t] = e } }) }(gn[yn++])) }(cn.constructor = dn).prototype = cn, ge(C, 'RegExp', dn) }tn('RegExp'); function mn (e, t, r) { return t + (r ? vn(e, t).length : 1) } var ut = function (o) { return function (e, t) { let r; const n = String(f(e)); const i = ne(t); var e = n.length; return i < 0 || e <= i ? o ? '' : void 0 : (t = n.charCodeAt(i)) < 55296 || t > 56319 || i + 1 === e || (r = n.charCodeAt(i + 1)) < 56320 || r > 57343 ? o ? n.charAt(i) : t : o ? n.slice(i, i + 2) : r - 56320 + (t - 55296 << 10) + 65536 } }; var ut = { codeAt: ut(!1), charAt: ut(!0) }; var vn = ut.charAt; i('match', 1, function (n, u, c) { return [function (e) { const t = f(this); const r = e == null ? void 0 : e[n]; return void 0 !== r ? r.call(e, t) : new RegExp(e)[n](String(t)) }, function (e) { const t = c(u, e, this); if (t.done) { return t.value } const r = S(e); const n = String(this); if (!r.global) { return At(r, n) } for (var i = r.unicode, o = [], a = r.lastIndex = 0; (s = At(r, n)) !== null;) { var s = String(s[0]); (o[a] = s) === '' && (r.lastIndex = mn(n, ie(r.lastIndex), i)), a++ } return a === 0 ? null : o }] }); const bn = Math.floor; const wn = ''.replace; const En = /\$([$&'`]|\d\d?|<[^>]*>)/g; const Tn = /\$([$&'`]|\d\d?)/g; const An = Math.max; const _n = Math.min; i('replace', 2, function (i, w, E, e) { const T = e.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE; const A = e.REPLACE_KEEPS_$0; const _ = T ? '$' : '$0'; return [function (e, t) { const r = f(this); const n = e == null ? void 0 : e[i]; return void 0 !== n ? n.call(e, r, t) : w.call(String(r), e, t) }, function (e, t) { if (!T && A || typeof t === 'string' && t.indexOf(_) === -1) { const r = E(w, e, this, t); if (r.done) { return r.value } } const n = S(e); const i = String(this); const o = typeof t === 'function'; o || (t = String(t)); let a; const s = n.global; s && (a = n.unicode, n.lastIndex = 0); for (var u = []; ;) { var c = At(n, i); if (c === null) { break } if (u.push(c), !s) { break } String(c[0]) === '' && (n.lastIndex = mn(i, ie(n.lastIndex), a)) } for (var l, f = '', h = 0, p = 0; p < u.length; p++) { c = u[p]; for (var d = String(c[0]), g = An(_n(ne(c.index), i.length), 0), y = [], m = 1; m < c.length; m++) { y.push(void 0 === (l = c[m]) ? l : String(l)) } var v; var b = c.groups; var b = o ? (v = [d].concat(y, g, i), void 0 !== b && v.push(b), String(t.apply(void 0, v))) : (function (o, a, s, u, c, e) { const l = s + o.length; const f = u.length; let t = Tn; return void 0 !== c && (c = fe(c), t = En), wn.call(e, t, function (e, t) { let r; switch (t.charAt(0)) { case '$':return '$'; case '&':return o; case '`':return a.slice(0, s); case "'":return a.slice(l); case '<':r = c[t.slice(1, -1)]; break; default:var n = +t; if (n == 0) { return e } if (f < n) { const i = bn(n / 10); return i === 0 ? e : i <= f ? void 0 === u[i - 1] ? t.charAt(1) : u[i - 1] + t.charAt(1) : e }r = u[n - 1] } return void 0 === r ? '' : r }) }(d, i, g, y, b, t)); h <= g && (f += i.slice(h, g) + b, h = g + d.length) } return f + i.slice(h) }] }); function Sn (e, t) { let r; return void 0 === (e = S(e).constructor) || (r = S(e)[xn]) == null ? t : ce(r) } var xn = he('species'); const Rn = [].push; const Nn = Math.min; const Dn = 4294967295; const Ln = !y(function () { return !RegExp(Dn, 'y') }); function kn (e) { return (kn = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function On (e, t, r, n, i, o, a) { try { var s = e[o](a); var u = s.value } catch (e) { return void r(e) }s.done ? t(u) : Promise.resolve(u).then(n, i) } function Cn (s) { return function () { const e = this; const a = arguments; return new Promise(function (t, r) { const n = s.apply(e, a); function i (e) { On(n, t, r, i, o, 'next', e) } function o (e) { On(n, t, r, i, o, 'throw', e) }i(void 0) }) } } function In (e, t, r) { return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e } function Pn (t, e) { let r; const n = Object.keys(t); return Object.getOwnPropertySymbols && (r = Object.getOwnPropertySymbols(t), e && (r = r.filter(function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable })), n.push.apply(n, r)), n } function qn (t) { for (let e = 1; e < arguments.length; e++) { var r = arguments[e] != null ? arguments[e] : {}; e % 2 ? Pn(Object(r), !0).forEach(function (e) { In(t, e, r[e]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Pn(Object(r)).forEach(function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e)) }) } return t } function Un (e) { return (Un = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e) })(e) } function Fn (e, t) { return (Fn = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e })(e, t) } function Bn (e) { if (void 0 === e) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called") } return e } function jn (r) { const n = (function () { if (typeof Reflect === 'undefined' || !Reflect.construct) { return !1 } if (Reflect.construct.sham) { return !1 } if (typeof Proxy === 'function') { return !0 } try { return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0 } catch (e) { return !1 } }()); return function () { let e; let t = Un(r); return e = n ? (e = Un(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments), t = this, !(e = e) || typeof e !== 'object' && typeof e !== 'function' ? Bn(t) : e } } function Mn (e) { return (function (e) { if (Array.isArray(e)) { return Vn(e) } }(e)) || (function (e) { if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(e)) { return Array.from(e) } }(e)) || (function (e, t) { if (!e) { return } if (typeof e === 'string') { return Vn(e, t) } let r = Object.prototype.toString.call(e).slice(8, -1); r === 'Object' && e.constructor && (r = e.constructor.name); if (r === 'Map' || r === 'Set') { return Array.from(e) } if (r === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) { return Vn(e, t) } }(e)) || (function () { throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') }()) } function Vn (e, t) { (t == null || t > e.length) && (t = e.length); for (var r = 0, n = new Array(t); r < t; r++) { n[r] = e[r] } return n }i('split', 2, function (i, d, g) { const y = 'abbc'.split(/(b)*/)[1] == 'c' || 'test'.split(/(?:)/, -1).length != 4 || 'ab'.split(/(?:ab)*/).length != 2 || '.'.split(/(.?)(.?)/).length != 4 || '.'.split(/()()/).length > 1 || ''.split(/.?/).length ? function (e, t) { const r = String(f(this)); const n = void 0 === t ? Dn : t >>> 0; if (n == 0) { return [] } if (void 0 === e) { return [r] } if (!en(e)) { return d.call(r, e, n) } for (var i, o, a, s = [], t = (e.ignoreCase ? 'i' : '') + (e.multiline ? 'm' : '') + (e.unicode ? 'u' : '') + (e.sticky ? 'y' : ''), u = 0, c = new RegExp(e.source, t + 'g'); (i = Tt.call(c, r)) && !(u < (o = c.lastIndex) && (s.push(r.slice(u, i.index)), i.length > 1 && i.index < r.length && Rn.apply(s, i.slice(1)), a = i[0].length, u = o, s.length >= n));) { c.lastIndex === i.index && c.lastIndex++ } return u === r.length ? !a && c.test('') || s.push('') : s.push(r.slice(u)), s.length > n ? s.slice(0, n) : s } : '0'.split(void 0, 0).length ? function (e, t) { return void 0 === e && t === 0 ? [] : d.call(this, e, t) } : d; return [function (e, t) { const r = f(this); const n = e == null ? void 0 : e[i]; return void 0 !== n ? n.call(e, r, t) : y.call(String(r), e, t) }, function (e, t) { var r = g(y, e, this, t, y !== d); if (r.done) { return r.value } const n = S(e); const i = String(this); var r = Sn(n, RegExp); const o = n.unicode; var e = (n.ignoreCase ? 'i' : '') + (n.multiline ? 'm' : '') + (n.unicode ? 'u' : '') + (Ln ? 'y' : 'g'); const a = new r(Ln ? n : '^(?:' + n.source + ')', e); const s = void 0 === t ? Dn : t >>> 0; if (s == 0) { return [] } if (i.length === 0) { return At(a, i) === null ? [i] : [] } for (var u = 0, c = 0, l = []; c < i.length;) { a.lastIndex = Ln ? c : 0; var f; const h = At(a, Ln ? i : i.slice(c)); if (h === null || (f = Nn(ie(a.lastIndex + (Ln ? 0 : c)), i.length)) === u) { c = mn(i, c, o) } else { if (l.push(i.slice(u, c)), l.length === s) { return l } for (let p = 1; p <= h.length - 1; p++) { if (l.push(h[p]), l.length === s) { return l } } c = u = f } } return l.push(i.slice(u)), l }] }, !Ln); function Gn (e) { const t = ye.Symbol || (ye.Symbol = {}); k(t, e) || $n(t, e, { value: Wn.f(e) }) } function Hn (e, t, r) { e && !k(e = r ? e : e.prototype, Kn) && Jn(e, Kn, { configurable: !0, value: t }) } function zn (e, t) { const r = li[e] = Pr(ii[ei]); return ti(r, { type: Xn, tag: e, description: t }), I || (r.description = t), r } function Yn (t, e) { S(t); const r = c(e); var e = ft(r).concat(bi(r)); return Qn(e, function (e) { I && !vi.call(r, e) || mi(t, e, r[e]) }), t } var Wn = { f: he }; var $n = q.f; var Jn = q.f; var Kn = he('toStringTag'); var Qn = We.forEach; const Zn = Z('hidden'); var Xn = 'Symbol'; var ei = 'prototype'; var i = he('toPrimitive'); var ti = de.set; const ri = de.getterFor(Xn); const ni = Object[ei]; var ii = C.Symbol; const oi = re('JSON', 'stringify'); const ai = P.f; const si = q.f; const ui = W.f; const ci = d.f; var li = $('symbols'); const fi = $('op-symbols'); const hi = $('string-to-symbol-registry'); const pi = $('symbol-to-string-registry'); var Z = $('wks'); var $ = C.QObject; let di = !$ || !$[ei] || !$[ei].findChild; const gi = I && y(function () { return Pr(si({}, 'a', { get: function () { return si(this, 'a', { value: 7 }).a } })).a != 7 }) ? function (e, t, r) { const n = ai(ni, t); n && delete ni[t], si(e, t, r), n && e !== ni && si(ni, t, n) } : si; const yi = je ? function (e) { return typeof e === 'symbol' } : function (e) { return Object(e) instanceof ii }; var mi = function (e, t, r) { e === ni && mi(fi, t, r), S(e); t = h(t, !0); return S(r), k(li, t) ? (r.enumerable ? (k(e, Zn) && e[Zn][t] && (e[Zn][t] = !1), r = Pr(r, { enumerable: D(0, !1) })) : (k(e, Zn) || si(e, Zn, D(1, {})), e[Zn][t] = !0), gi(e, t, r)) : si(e, t, r) }; var vi = function (e) { const t = h(e, !0); var e = ci.call(this, t); return !(this === ni && k(li, t) && !k(fi, t)) && (!(e || !k(this, t) || !k(li, t) || k(this, Zn) && this[Zn][t]) || e) }; var $ = function (e, t) { const r = c(e); var e = h(t, !0); if (r !== ni || !k(li, e) || k(fi, e)) { t = ai(r, e); return !t || !k(li, e) || k(r, Zn) && r[Zn][e] || (t.enumerable = !0), t } }; var je = function (e) { var e = ui(c(e)); const t = []; return Qn(e, function (e) { k(li, e) || k(X, e) || t.push(e) }), t }; var bi = function (e) { const t = e === ni; var e = ui(t ? fi : c(e)); const r = []; return Qn(e, function (e) { !k(li, e) || t && !k(ni, e) || r.push(li[e]) }), r }; Be || (ge((ii = function (e) { if (this instanceof ii) { throw TypeError('Symbol is not a constructor') } var e = arguments.length && void 0 !== e ? String(e) : void 0; const t = R(e); var r = function (e) { this === ni && r.call(fi, e), k(this, Zn) && k(this[Zn], t) && (this[Zn][t] = !1), gi(this, t, D(1, e)) }; return I && di && gi(ni, t, { configurable: !0, set: r }), zn(t, e) })[ei], 'toString', function () { return ri(this).tag }), ge(ii, 'withoutSetter', function (e) { return zn(R(e), e) }), d.f = vi, q.f = mi, P.f = $, Re.f = W.f = je, Ne.f = bi, Wn.f = function (e) { return zn(he(e), e) }, I && (si(ii[ei], 'description', { configurable: !0, get: function () { return ri(this).description } }), ge(ni, 'propertyIsEnumerable', vi, { unsafe: !0 }))), ue({ global: !0, wrap: !0, forced: !Be, sham: !Be }, { Symbol: ii }), Qn(ft(Z), function (e) { Gn(e) }), ue({ target: Xn, stat: !0, forced: !Be }, { for: function (e) { const t = String(e); if (k(hi, t)) { return hi[t] } e = ii(t); return hi[t] = e, pi[e] = t, e }, keyFor: function (e) { if (!yi(e)) { throw TypeError(e + ' is not a symbol') } if (k(pi, e)) { return pi[e] } }, useSetter: function () { di = !0 }, useSimple: function () { di = !1 } }), ue({ target: 'Object', stat: !0, forced: !Be, sham: !I }, { create: function (e, t) { return void 0 === t ? Pr(e) : Yn(Pr(e), t) }, defineProperty: mi, defineProperties: Yn, getOwnPropertyDescriptor: $ }), ue({ target: 'Object', stat: !0, forced: !Be }, { getOwnPropertyNames: je, getOwnPropertySymbols: bi }), ue({ target: 'Object', stat: !0, forced: y(function () { Ne.f(1) }) }, { getOwnPropertySymbols: function (e) { return Ne.f(fe(e)) } }), oi && (Si = !Be || y(function () { const e = ii(); return oi([e]) != '[null]' || oi({ a: e }) != '{}' || oi(Object(e)) != '{}' }), ue({ target: 'JSON', stat: !0, forced: Si }, { stringify: function (e, t) { for (var r, n = [e], i = 1; i < arguments.length;) { n.push(arguments[i++]) } if ((L(r = t) || void 0 !== e) && !yi(e)) { return Fe(t) || (t = function (e, t) { if (typeof r === 'function' && (t = r.call(this, e, t)), !yi(t)) { return t } }), n[1] = t, oi.apply(null, n) } } })), ii[ei][i] || U(ii[ei], i, ii[ei].valueOf), Hn(ii, Xn), X[Zn] = !0; let wi; let Ei; let Ti; let Ai; let _i; var Si = q.f; const xi = C.Symbol; !I || typeof xi !== 'function' || 'description' in xi.prototype && void 0 === xi().description || (wi = {}, se(Ei = function (e) { const t = arguments.length < 1 || void 0 === e ? void 0 : String(e); var e = this instanceof Ei ? new xi(t) : void 0 === t ? xi() : xi(t); return t === '' && (wi[e] = !0), e }, xi), (Ii = Ei.prototype = xi.prototype).constructor = Ei, Ti = Ii.toString, Ai = String(xi('test')) == 'Symbol(test)', _i = /^Symbol\((.*)\)[^)]+$/, Si(Ii, 'description', { configurable: !0, get: function () { const e = L(this) ? this.valueOf() : this; let t = Ti.call(e); if (k(wi, e)) { return '' } t = Ai ? t.slice(7, -1) : t.replace(_i, '$1'); return t === '' ? void 0 : t } }), ue({ global: !0, forced: !0 }, { Symbol: Ei })), Gn('species'); function Ri (e, t, r) { for (var n = fe(this), i = ie(n.length), o = arguments.length, a = oe(o > 1 ? t : void 0, i), s = void 0 === (r = o > 2 ? r : void 0) ? i : oe(r, i); a < s;) { n[a++] = e } return n } const Ni = he('unscopables'); const Di = Array.prototype; Di[Ni] == null && q.f(Di, Ni, { configurable: !0, value: Pr(null) }); i = function (e) { Di[Ni][e] = !0 }; ue({ target: 'Array', proto: !0 }, { fill: Ri }), i('fill'); const Li = Ae.includes; var Si = Y('indexOf', { ACCESSORS: !0, 1: 0 }); ue({ target: 'Array', proto: !0, forced: !Si }, { includes: function (e, t) { return Li(this, e, arguments.length > 1 ? t : void 0) } }), i('includes'); let ki; const Oi = {}; const Ci = he('iterator'); var Ii = !1; [].keys && ('next' in (Qi = [].keys()) ? (Zi = fr(fr(Qi))) !== Object.prototype && (ki = Zi) : Ii = !0), ki != null && !y(function () { const e = {}; return ki[Ci].call(e) !== e }) || (ki = {}), k(ki, Ci) || U(ki, Ci, function () { return this }); function Pi () { return this } function qi () { return this } function Ui (e, t, r, n, i, o, a) { function s (e) { if (e === i && d) { return d } if (!ji && e in h) { return h[e] } switch (e) { case 'keys':case Vi:case Gi:return function () { return new r(this, e) } } return function () { return new r(this) } }!(function (e, t, r) { t += ' Iterator'; e.prototype = Pr(Fi, { next: D(1, r) }), Hn(e, t, !1), Oi[t] = Pi }(r, t, n)); let u; let c; const l = t + ' Iterator'; let f = !1; var h = e.prototype; const p = h[Mi] || h['@@iterator'] || i && h[i]; var d = !ji && p || s(i); if ((n = t == 'Array' && h.entries || p) && (e = fr(n.call(new e())), Bi !== Object.prototype && e.next && (fr(e) !== Bi && (Rr ? Rr(e, Bi) : typeof e[Mi] !== 'function' && U(e, Mi, qi)), Hn(e, l, !0))), i == Vi && p && p.name !== Vi && (f = !0, d = function () { return p.call(this) }), h[Mi] !== d && U(h, Mi, d), Oi[t] = d, i) { if (u = { values: s(Vi), keys: o ? d : s('keys'), entries: s(Gi) }, a) { for (c in u) { !ji && !f && c in h || ge(h, c, u[c]) } } else { ue({ target: t, proto: !0, forced: ji || f }, u) } } return u } var Si = { IteratorPrototype: ki, BUGGY_SAFARI_ITERATORS: Ii }; var Fi = Si.IteratorPrototype; var Bi = Si.IteratorPrototype; var ji = Si.BUGGY_SAFARI_ITERATORS; var Mi = he('iterator'); var Vi = 'values'; var Gi = 'entries'; const Hi = 'Array Iterator'; const zi = de.set; const Yi = de.getterFor(Hi); const Wi = Ui(Array, 'Array', function (e, t) { zi(this, { type: Hi, target: c(e), index: 0, kind: t }) }, function () { const e = Yi(this); const t = e.target; const r = e.kind; const n = e.index++; return !t || n >= t.length ? { value: e.target = void 0, done: !0 } : r == 'keys' ? { value: n, done: !1 } : r == 'values' ? { value: t[n], done: !1 } : { value: [n, t[n]], done: !1 } }, 'values'); Oi.Arguments = Oi.Array, i('keys'), i('values'), i('entries'); const $i = Math.min; const Ji = [].lastIndexOf; const Ki = !!Ji && 1 / [1].lastIndexOf(1, -0) < 0; var Qi = Te('lastIndexOf'); var Zi = Y('indexOf', { ACCESSORS: !0, 1: 0 }); const Xi = Ki || !Qi || !Zi ? function (e, t) { if (Ki) { return Ji.apply(this, arguments) || 0 } const r = c(this); const n = ie(r.length); let i = n - 1; for (arguments.length > 1 && (i = $i(i, ne(t))), i < 0 && (i = n + i); i >= 0; i--) { if (i in r && r[i] === e) { return i || 0 } } return -1 } : Ji; ue({ target: 'Array', proto: !0, forced: Xi !== [].lastIndexOf }, { lastIndexOf: Xi }); var Ii = A('slice'); var Si = Y('slice', { ACCESSORS: !0, 0: 0, 1: 2 }); const eo = he('species'); const to = [].slice; const ro = Math.max; ue({ target: 'Array', proto: !0, forced: !Ii || !Si }, { slice: function (e, t) { let r; let n; let i; const o = c(this); const a = ie(o.length); let s = oe(e, a); const u = oe(void 0 === t ? a : t, a); if (Fe(o) && ((typeof (r = o.constructor) === 'function' && (r === Array || Fe(r.prototype)) || L(r) && (r = r[eo]) === null) && (r = void 0), r === Array || void 0 === r)) { return to.call(o, s, u) } for (n = new (void 0 === r ? Array : r)(ro(u - s, 0)), i = 0; s < u; s++, i++) { s in o && st(n, i, o[s]) } return n.length = i, n } }), tn('Array'); function no (e, t, r) { for (const n in t) { ge(e, n, t[n], r) } return e } function io (e, t, r) { if (!(e instanceof t)) { throw TypeError('Incorrect ' + (r ? r + ' ' : '') + 'invocation') } return e } function oo (e) { if (void 0 === e) { return 0 } const t = ne(e); var e = ie(t); if (t !== e) { throw RangeError('Wrong length or index') } return e } function ao (e) { return [255 & e] } function so (e) { return [255 & e, e >> 8 & 255] } function uo (e) { return [255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255] } function co (e) { return e[3] << 24 | e[2] << 16 | e[1] << 8 | e[0] } function lo (e) { return ko(e, 23, 4) } function fo (e) { return ko(e, 52, 8) } function ho (e, t, r, n) { const i = oo(r); var r = Eo(e); if (i + t > r.byteLength) { throw Lo(xo) } return e = Eo(r.buffer).bytes, r = i + r.byteOffset, t = e.slice(r, r + t), n ? t : t.reverse() } function po (e, t, r, n, i, o) { if (r = oo(r), e = Eo(e), r + t > e.byteLength) { throw Lo(xo) } for (let a = Eo(e.buffer).bytes, s = r + e.byteOffset, u = n(+i), c = 0; c < t; c++) { a[s + c] = u[o ? c : t - c - 1] } } var i = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined'; const go = Math.abs; const yo = Math.pow; const mo = Math.floor; const vo = Math.log; const bo = Math.LN2; var Qi = function (e, t, r) { let n; let i; const o = new Array(r); let a = 8 * r - t - 1; const s = (1 << a) - 1; const u = s >> 1; const c = t === 23 ? yo(2, -24) - yo(2, -77) : 0; const l = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0; let f = 0; for ((e = go(e)) != e || e === 1 / 0 ? (i = e != e ? 1 : 0, n = s) : (n = mo(vo(e) / bo), e * (r = yo(2, -n)) < 1 && (n--, r *= 2), (e += n + u >= 1 ? c / r : c * yo(2, 1 - u)) * r >= 2 && (n++, r /= 2), s <= n + u ? (i = 0, n = s) : n + u >= 1 ? (i = (e * r - 1) * yo(2, t), n += u) : (i = e * yo(2, u - 1) * yo(2, t), n = 0)); t >= 8; o[f++] = 255 & i, i /= 256, t -= 8) { } for (n = n << t | i, a += t; a > 0; o[f++] = 255 & n, n /= 256, a -= 8) { } return o[--f] |= 128 * l, o }; var Zi = function (e, t) { let r; var n = e.length; const i = 8 * n - t - 1; const o = (1 << i) - 1; const a = o >> 1; let s = i - 7; let u = n - 1; var n = e[u--]; let c = 127 & n; for (n >>= 7; s > 0; c = 256 * c + e[u], u--, s -= 8) { } for (r = c & (1 << -s) - 1, c >>= -s, s += t; s > 0; r = 256 * r + e[u], u--, s -= 8) { } if (c === 0) { c = 1 - a } else { if (c === o) { return r ? NaN : n ? -1 / 0 : 1 / 0 } r += yo(2, t), c -= a } return (n ? -1 : 1) * r * yo(2, c - t) }; var A = Re.f; const wo = q.f; var Eo = de.get; const To = de.set; const Ao = 'ArrayBuffer'; const _o = 'DataView'; const So = 'prototype'; var xo = 'Wrong index'; const Ro = C[Ao]; let No = Ro; let Do = C[_o]; var Ii = Do && Do[So]; var Si = Object.prototype; var Lo = C.RangeError; var ko = Qi; const Oo = Zi; var Zi = function (e, t) { wo(e[So], t, { get: function () { return Eo(this)[t] } }) }; if (i) { if (!y(function () { Ro(1) }) || !y(function () { new Ro(-1) }) || y(function () { return new Ro(), new Ro(1.5), new Ro(NaN), Ro.name != Ao })) { for (var Co, Io = (No = function (e) { return io(this, No), new Ro(oo(e)) })[So] = Ro[So], Po = A(Ro), qo = 0; Po.length > qo;) { (Co = Po[qo++]) in No || U(No, Co, Ro[Co]) }Io.constructor = No }Rr && fr(Ii) !== Si && Rr(Ii, Si); var Io = new Do(new No(2)); const Uo = Ii.setInt8; Io.setInt8(0, 2147483648), Io.setInt8(1, 2147483649), !Io.getInt8(0) && Io.getInt8(1) || no(Ii, { setInt8: function (e, t) { Uo.call(this, e, t << 24 >> 24) }, setUint8: function (e, t) { Uo.call(this, e, t << 24 >> 24) } }, { unsafe: !0 }) } else { No = function (e) { io(this, No, Ao); e = oo(e); To(this, { bytes: Ri.call(new Array(e), 0), byteLength: e }), I || (this.byteLength = e) }, Do = function (e, t, r) { io(this, Do, _o), io(e, No, _o); const n = Eo(e).byteLength; var t = ne(t); if (t < 0 || n < t) { throw Lo('Wrong offset') } if (n < t + (r = void 0 === r ? n - t : ie(r))) { throw Lo('Wrong length') } To(this, { buffer: e, byteLength: r, byteOffset: t }), I || (this.buffer = e, this.byteLength = r, this.byteOffset = t) }, I && (Zi(No, 'byteLength'), Zi(Do, 'buffer'), Zi(Do, 'byteLength'), Zi(Do, 'byteOffset')), no(Do[So], { getInt8: function (e) { return ho(this, 1, e)[0] << 24 >> 24 }, getUint8: function (e) { return ho(this, 1, e)[0] }, getInt16: function (e, t) { t = ho(this, 2, e, arguments.length > 1 ? t : void 0); return (t[1] << 8 | t[0]) << 16 >> 16 }, getUint16: function (e, t) { t = ho(this, 2, e, arguments.length > 1 ? t : void 0); return t[1] << 8 | t[0] }, getInt32: function (e, t) { return co(ho(this, 4, e, arguments.length > 1 ? t : void 0)) }, getUint32: function (e, t) { return co(ho(this, 4, e, arguments.length > 1 ? t : void 0)) >>> 0 }, getFloat32: function (e, t) { return Oo(ho(this, 4, e, arguments.length > 1 ? t : void 0), 23) }, getFloat64: function (e, t) { return Oo(ho(this, 8, e, arguments.length > 1 ? t : void 0), 52) }, setInt8: function (e, t) { po(this, 1, e, ao, t) }, setUint8: function (e, t) { po(this, 1, e, ao, t) }, setInt16: function (e, t, r) { po(this, 2, e, so, t, arguments.length > 2 ? r : void 0) }, setUint16: function (e, t, r) { po(this, 2, e, so, t, arguments.length > 2 ? r : void 0) }, setInt32: function (e, t, r) { po(this, 4, e, uo, t, arguments.length > 2 ? r : void 0) }, setUint32: function (e, t, r) { po(this, 4, e, uo, t, arguments.length > 2 ? r : void 0) }, setFloat32: function (e, t, r) { po(this, 4, e, lo, t, arguments.length > 2 ? r : void 0) }, setFloat64: function (e, t, r) { po(this, 8, e, fo, t, arguments.length > 2 ? r : void 0) } }) }Hn(No, Ao), Hn(Do, _o); const Fo = { ArrayBuffer: No, DataView: Do }; var Si = 'ArrayBuffer'; var Io = Fo[Si]; var Ii = C[Si]; ue({ global: !0, forced: Ii !== Io }, { ArrayBuffer: Io }), tn(Si); const Bo = he('match'); ue({ target: 'String', proto: !0, forced: !(function (t) { const r = /./; try { '/./'[t](r) } catch (e) { try { return r[Bo] = !1, '/./'[t](r) } catch (e) {} } return !1 }('includes')) }, { includes: function (e, t) { return !!~String(f(this)).indexOf((function (e) { if (en(e)) { throw TypeError("The method doesn't accept regular expressions") } return e }(e)), arguments.length > 1 ? t : void 0) } }); let jo; const Mo = n.trim; ue({ target: 'String', proto: !0, forced: (jo = 'trim', y(function () { return qr[jo]() || 'âÂá '[jo]() != 'âÂá ' || qr[jo].name !== jo })) }, { trim: function () { return Mo(this) } }); const Vo = he('iterator'); let Go = !1; try { let Ho = 0; const zo = { next: function () { return { done: !!Ho++ } }, return: function () { Go = !0 } }; zo[Vo] = function () { return this }, Array.from(zo, function () { throw 2 }) } catch (e) {} function Yo (e, t) { if (!t && !Go) { return !1 } let r = !1; try { const n = {}; n[Vo] = function () { return { next: function () { return { done: r = !0 } } } }, e(n) } catch (e) {} return r } function Wo (e) { return !!L(e) && (e = ir(e), k(ra, e) || k(na, e)) } let $o; var Zi = q.f; const Jo = C.Int8Array; const Ko = Jo && Jo.prototype; var Ii = C.Uint8ClampedArray; var Io = Ii && Ii.prototype; let Qo = Jo && fr(Jo); let Zo = Ko && fr(Ko); var Si = Object.prototype; const Xo = Si.isPrototypeOf; var n = he('toStringTag'); const ea = R('TYPED_ARRAY_TAG'); let ta = i && !!Rr && ir(C.opera) !== 'Opera'; var Ii = !1; var ra = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 }; var na = { BigInt64Array: 8, BigUint64Array: 8 }; for ($o in ra) { C[$o] || (ta = !1) } if ((!ta || typeof Qo !== 'function' || Qo === Function.prototype) && (Qo = function () { throw TypeError('Incorrect invocation') }, ta)) { for ($o in ra) { C[$o] && Rr(C[$o], Qo) } } if ((!ta || !Zo || Zo === Si) && (Zo = Qo.prototype, ta)) { for ($o in ra) { C[$o] && Rr(C[$o].prototype, Zo) } } if (ta && fr(Io) !== Zo && Rr(Io, Zo), I && !k(Zo, n)) { for ($o in Ii = !0, Zi(Zo, n, { get: function () { return L(this) ? this[ea] : void 0 } }), ra) { C[$o] && U(C[$o], ea, $o) } } function ia (e, t) { if ((e = (function (e) { e = ne(e); if (e < 0) { throw RangeError("The argument can't be less than 0") } return e }(e))) % t) { throw RangeError('Wrong offset') } return e } function oa (e) { if (e != null) { return e[ha] || e['@@iterator'] || Oi[ir(e)] } } function aa (e) { return void 0 !== e && (Oi.Array === e || da[pa] === e) } function sa (e, t, r) { let n; let i; let o; let a; let s; let u; let c = fe(e); let l = (e = arguments.length) > 1 ? t : void 0; const f = void 0 !== l; if ((t = oa(c)) != null && !aa(t)) { for (u = (s = t.call(c)).next, c = []; !(a = u.call(s)).done;) { c.push(a.value) } } for (f && e > 2 && (l = le(l, r, 2)), i = ie(c.length), o = new (ga(this))(i), n = 0; n < i; n++) { o[n] = f ? l(c[n], n) : c[n] } return o } const ua = { NATIVE_ARRAY_BUFFER_VIEWS: ta, TYPED_ARRAY_TAG: Ii && ea, aTypedArray: function (e) { if (Wo(e)) { return e } throw TypeError('Target is not a typed array') }, aTypedArrayConstructor: function (e) { if (Rr) { if (Xo.call(Qo, e)) { return e } } else { for (const t in ra) { if (k(ra, $o)) { const r = C[t]; if (r && (e === r || Xo.call(r, e))) { return e } } } } throw TypeError('Target is not a typed array constructor') }, exportTypedArrayMethod: function (e, t, r) { if (I) { if (r) { for (const n in ra) { const i = C[n]; i && k(i.prototype, e) && delete i.prototype[e] } }Zo[e] && !r || ge(Zo, e, !r && ta && Ko[e] || t) } }, exportTypedArrayStaticMethod: function (e, t, r) { let n, i; if (I) { if (Rr) { if (r) { for (n in ra) { (i = C[n]) && k(i, e) && delete i[e] } } if (Qo[e] && !r) { return } try { return ge(Qo, e, !r && ta && Jo[e] || t) } catch (e) {} } for (n in ra) { !(i = C[n]) || i[e] && !r || ge(i, e, t) } } }, isView: function (e) { if (!L(e)) { return !1 } e = ir(e); return e === 'DataView' || k(ra, e) || k(na, e) }, isTypedArray: Wo, TypedArray: Qo, TypedArrayPrototype: Zo }; var i = ua.NATIVE_ARRAY_BUFFER_VIEWS; const ca = C.ArrayBuffer; const la = C.Int8Array; const fa = !i || !y(function () { la(1) }) || !y(function () { new la(-1) }) || !Yo(function (e) { new la(), new la(null), new la(1.5), new la(e) }, !0) || y(function () { return new la(new ca(2), 1, void 0).length !== 1 }); var ha = he('iterator'); var pa = he('iterator'); var da = Array.prototype; var ga = ua.aTypedArrayConstructor; e(function (e) { function p (e, t) { for (var r = 0, n = t.length, i = new (a(e))(n); r < n;) { i[r] = t[r++] } return i } function t (e, t) { m(e, t, { get: function () { return g(this)[t] } }) } function d (e) { let t; return e instanceof w || (t = ir(e)) == 'ArrayBuffer' || t == 'SharedArrayBuffer' } function n (e, t) { return x(e) && typeof t !== 'symbol' && t in e && String(+t) == String(t) } function r (e, t) { return n(e, t = h(t, !0)) ? D(2, e[t]) : o(e, t) } function i (e, t, r) { return !(n(e, t = h(t, !0)) && L(r) && k(r, 'value')) || k(r, 'get') || k(r, 'set') || r.configurable || k(r, 'writable') && !r.writable || k(r, 'enumerable') && !r.enumerable ? m(e, t, r) : (e[t] = r.value, e) } const s = Re.f; const u = We.forEach; var g = de.get; const y = de.set; var m = q.f; var o = P.f; const v = Math.round; const b = C.RangeError; var w = Fo.ArrayBuffer; const E = Fo.DataView; const T = ua.NATIVE_ARRAY_BUFFER_VIEWS; const A = ua.TYPED_ARRAY_TAG; const _ = ua.TypedArray; const S = ua.TypedArrayPrototype; var a = ua.aTypedArrayConstructor; var x = ua.isTypedArray; const R = 'BYTES_PER_ELEMENT'; const N = 'Wrong length'; I ? (T || (P.f = r, q.f = i, t(S, 'buffer'), t(S, 'byteOffset'), t(S, 'byteLength'), t(S, 'length')), ue({ target: 'Object', stat: !0, forced: !T }, { getOwnPropertyDescriptor: r, defineProperty: i }), e.exports = function (e, t, n) { function c (e, t) { m(e, t, { get: function () { return (function (e, t) { e = g(e); return e.view[r](t * l + e.byteOffset, !0) }(this, t)) }, set: function (e) { return (function (e, t, r) { e = g(e); n && (r = (r = v(r)) < 0 ? 0 : r > 255 ? 255 : 255 & r), e.view[i](t * l + e.byteOffset, r, !0) }(this, t, e)) }, enumerable: !0 }) } var l = e.match(/\d+$/)[0] / 8; const f = e + (n ? 'Clamped' : '') + 'Array'; var r = 'get' + e; var i = 'set' + e; const o = C[f]; let h = o; let a = h && h.prototype; var e = {}; T ? fa && (h = t(function (e, t, r, n) { return io(e, h, f), Ar(L(t) ? d(t) ? void 0 !== n ? new o(t, ia(r, l), n) : void 0 !== r ? new o(t, ia(r, l)) : new o(t) : x(t) ? p(h, t) : sa.call(h, t) : new o(oo(t)), e, h) }), Rr && Rr(h, _), u(s(o), function (e) { e in h || U(h, e, o[e]) }), h.prototype = a) : (h = t(function (e, t, r, n) { io(e, h, f); let i; let o; let a; let s = 0; let u = 0; if (L(t)) { if (!d(t)) { return x(t) ? p(h, t) : sa.call(h, t) } i = t, u = ia(r, l); r = t.byteLength; if (void 0 === n) { if (r % l) { throw b(N) } if ((o = r - u) < 0) { throw b(N) } } else if (r < (o = ie(n) * l) + u) { throw b(N) } a = o / l } else { a = oo(t), i = new w(o = a * l) } for (y(e, { buffer: i, byteOffset: u, byteLength: o, length: a, view: new E(i) }); s < a;) { c(e, s++) } }), Rr && Rr(h, _), a = h.prototype = Pr(S)), a.constructor !== h && U(a, 'constructor', h), A && U(a, A, f), e[f] = h, ue({ global: !0, forced: h != o, sham: !T }, e), R in h || U(h, R, l), R in a || U(a, R, l), tn(f) }) : e.exports = function () {} })('Uint8', function (n) { return function (e, t, r) { return n(this, e, t, r) } }); const ya = Math.min; const ma = [].copyWithin || function (e, t, r) { const n = fe(this); const i = ie(n.length); let o = oe(e, i); let a = oe(t, i); var r = arguments.length > 2 ? r : void 0; let s = ya((void 0 === r ? i : oe(r, i)) - a, i - o); let u = 1; for (a < o && o < a + s && (u = -1, a += s - 1, o += s - 1); s-- > 0;) { a in n ? n[o] = n[a] : delete n[o], o += u, a += u } return n }; const va = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('copyWithin', function (e, t, r) { return ma.call(va(this), e, t, arguments.length > 2 ? r : void 0) }); const ba = We.every; const wa = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('every', function (e, t) { return ba(wa(this), e, arguments.length > 1 ? t : void 0) }); const Ea = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('fill', function () { return Ri.apply(Ea(this), arguments) }); const Ta = We.filter; const Aa = ua.aTypedArray; const _a = ua.aTypedArrayConstructor; (0, ua.exportTypedArrayMethod)('filter', function (e, t) { for (var r = Ta(Aa(this), e, arguments.length > 1 ? t : void 0), t = Sn(this, this.constructor), n = 0, i = r.length, o = new (_a(t))(i); n < i;) { o[n] = r[n++] } return o }); const Sa = We.find; const xa = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('find', function (e, t) { return Sa(xa(this), e, arguments.length > 1 ? t : void 0) }); const Ra = We.findIndex; const Na = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('findIndex', function (e, t) { return Ra(Na(this), e, arguments.length > 1 ? t : void 0) }); const Da = We.forEach; const La = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('forEach', function (e, t) { Da(La(this), e, arguments.length > 1 ? t : void 0) }); const ka = Ae.includes; const Oa = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('includes', function (e, t) { return ka(Oa(this), e, arguments.length > 1 ? t : void 0) }); const Ca = Ae.indexOf; const Ia = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('indexOf', function (e, t) { return Ca(Ia(this), e, arguments.length > 1 ? t : void 0) }); var Si = he('iterator'); var Io = C.Uint8Array; const Pa = Wi.values; const qa = Wi.keys; const Ua = Wi.entries; const Fa = ua.aTypedArray; var Zi = ua.exportTypedArrayMethod; var n = Io && Io.prototype[Si]; var Ii = !!n && (n.name == 'values' || n.name == null); var i = function () { return Pa.call(Fa(this)) }; Zi('entries', function () { return Ua.call(Fa(this)) }), Zi('keys', function () { return qa.call(Fa(this)) }), Zi('values', i, !Ii), Zi(Si, i, !Ii); const Ba = ua.aTypedArray; const ja = [].join; (0, ua.exportTypedArrayMethod)('join', function () { return ja.apply(Ba(this), arguments) }); const Ma = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('lastIndexOf', function () { return Xi.apply(Ma(this), arguments) }); const Va = We.map; const Ga = ua.aTypedArray; const Ha = ua.aTypedArrayConstructor; (0, ua.exportTypedArrayMethod)('map', function (e, t) { return Va(Ga(this), e, arguments.length > 1 ? t : void 0, function (e, t) { return new (Ha(Sn(e, e.constructor)))(t) }) }); const za = dt.left; const Ya = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('reduce', function (e, t) { return za(Ya(this), e, arguments.length, arguments.length > 1 ? t : void 0) }); const Wa = dt.right; const $a = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('reduceRight', function (e, t) { return Wa($a(this), e, arguments.length, arguments.length > 1 ? t : void 0) }); const Ja = ua.aTypedArray; var Ae = ua.exportTypedArrayMethod; const Ka = Math.floor; Ae('reverse', function () { for (var e, t = this, r = Ja(t).length, n = Ka(r / 2), i = 0; i < n;) { e = t[i], t[i++] = t[--r], t[r] = e } return t }); const Qa = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('set', function (e, t) { Qa(this); const r = ia(arguments.length > 1 ? t : void 0, 1); var t = this.length; const n = fe(e); const i = ie(n.length); let o = 0; if (t < i + r) { throw RangeError('Wrong length') } for (;o < i;) { this[r + o] = n[o++] } }, y(function () { new Int8Array(1).set({}) })); const Za = ua.aTypedArray; const Xa = ua.aTypedArrayConstructor; const es = [].slice; (0, ua.exportTypedArrayMethod)('slice', function (e, t) { for (var r = es.call(Za(this), e, t), t = Sn(this, this.constructor), n = 0, i = r.length, o = new (Xa(t))(i); n < i;) { o[n] = r[n++] } return o }, y(function () { new Int8Array(1).slice() })); const ts = We.some; const rs = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('some', function (e, t) { return ts(rs(this), e, arguments.length > 1 ? t : void 0) }); const ns = ua.aTypedArray; const is = [].sort; (0, ua.exportTypedArrayMethod)('sort', function (e) { return is.call(ns(this), e) }); const os = ua.aTypedArray; (0, ua.exportTypedArrayMethod)('subarray', function (e, t) { const r = os(this); const n = r.length; var e = oe(e, n); return new (Sn(r, r.constructor))(r.buffer, r.byteOffset + e * r.BYTES_PER_ELEMENT, ie((void 0 === t ? n : oe(t, n)) - e)) }); const as = C.Int8Array; const ss = ua.aTypedArray; var Io = ua.exportTypedArrayMethod; const us = [].toLocaleString; const cs = [].slice; const ls = !!as && y(function () { us.call(new as(1)) }); Io('toLocaleString', function () { return us.apply(ls ? cs.call(ss(this)) : ss(this), arguments) }, y(function () { return [1, 2].toLocaleString() != new as([1, 2]).toLocaleString() }) || !y(function () { as.prototype.toLocaleString.call([1, 2]) })); var n = ua.exportTypedArrayMethod; var Zi = C.Uint8Array; var Si = Zi && Zi.prototype || {}; let fs = [].toString; const hs = [].join; y(function () { fs.call({}) }) && (fs = function () { return hs.call(this) }), n('toString', fs, Si.toString != fs), ue({ target: 'URL', proto: !0, enumerable: !0 }, { toJSON: function () { return URL.prototype.toString.call(this) } }); const ps = []; const ds = []; const gs = typeof Uint8Array !== 'undefined' ? Uint8Array : Array; let ys = !1; function ms () { ys = !0; for (let e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', t = 0, r = e.length; t < r; ++t) { ps[t] = e[t], ds[e.charCodeAt(t)] = t }ds['-'.charCodeAt(0)] = 62, ds['_'.charCodeAt(0)] = 63 } function vs (e, t, r) { for (var n, i = [], o = t; o < r; o += 3) { n = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2], i.push(ps[(n = n) >> 18 & 63] + ps[n >> 12 & 63] + ps[n >> 6 & 63] + ps[63 & n]) } return i.join('') } function bs (e) { let t; ys || ms(); for (var r = e.length, n = r % 3, i = '', o = [], a = 0, s = r - n; a < s; a += 16383) { o.push(vs(e, a, s < a + 16383 ? s : a + 16383)) } return n == 1 ? (t = e[r - 1], i += ps[t >> 2], i += ps[t << 4 & 63], i += '==') : n == 2 && (t = (e[r - 2] << 8) + e[r - 1], i += ps[t >> 10], i += ps[t >> 4 & 63], i += ps[t << 2 & 63], i += '='), o.push(i), o.join('') } function ws (e, t, r, n, i) { let o; let a; const s = 8 * i - n - 1; const u = (1 << s) - 1; const c = u >> 1; let l = -7; let f = r ? i - 1 : 0; const h = r ? -1 : 1; var r = e[t + f]; for (f += h, o = r & (1 << -l) - 1, r >>= -l, l += s; l > 0; o = 256 * o + e[t + f], f += h, l -= 8) { } for (a = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; a = 256 * a + e[t + f], f += h, l -= 8) { } if (o === 0) { o = 1 - c } else { if (o === u) { return a ? NaN : 1 / 0 * (r ? -1 : 1) } a += Math.pow(2, n), o -= c } return (r ? -1 : 1) * a * Math.pow(2, o - n) } function Es (e, t, r, n, i, o) { let a; let s; let u = 8 * o - i - 1; const c = (1 << u) - 1; const l = c >> 1; const f = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0; let h = n ? 0 : o - 1; const p = n ? 1 : -1; var o = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0; for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, a = c) : (a = Math.floor(Math.log(t) / Math.LN2), t * (n = Math.pow(2, -a)) < 1 && (a--, n *= 2), (t += a + l >= 1 ? f / n : f * Math.pow(2, 1 - l)) * n >= 2 && (a++, n /= 2), c <= a + l ? (s = 0, a = c) : a + l >= 1 ? (s = (t * n - 1) * Math.pow(2, i), a += l) : (s = t * Math.pow(2, l - 1) * Math.pow(2, i), a = 0)); i >= 8; e[r + h] = 255 & s, h += p, s /= 256, i -= 8) { } for (a = a << i | s, u += i; u > 0; e[r + h] = 255 & a, h += p, a /= 256, u -= 8) { }e[r + h - p] |= 128 * o } const Ts = {}.toString; const As = Array.isArray || function (e) { return Ts.call(e) == '[object Array]' }; function _s () { return xs.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823 } function Ss (e, t) { if (_s() < t) { throw new RangeError('Invalid typed array length') } return xs.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = xs.prototype : (e === null && (e = new xs(t)), e.length = t), e } function xs (e, t, r) { if (!(xs.TYPED_ARRAY_SUPPORT || this instanceof xs)) { return new xs(e, t, r) } if (typeof e !== 'number') { return Rs(this, e, t, r) } if (typeof t === 'string') { throw new Error('If encoding is specified then the first argument must be a string') } return Ds(this, e) } function Rs (e, t, r, n) { if (typeof t === 'number') { throw new TypeError('"value" argument must not be a number') } return typeof ArrayBuffer !== 'undefined' && t instanceof ArrayBuffer ? (function (e, t, r, n) { if (t.byteLength, r < 0 || t.byteLength < r) { throw new RangeError("'offset' is out of bounds") } if (t.byteLength < r + (n || 0)) { throw new RangeError("'length' is out of bounds") } t = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n); xs.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = xs.prototype : e = Ls(e, t); return e }(e, t, r, n)) : typeof t === 'string' ? (function (e, t, r) { typeof r === 'string' && r !== '' || (r = 'utf8'); if (!xs.isEncoding(r)) { throw new TypeError('"encoding" must be a valid string encoding') } const n = 0 | Cs(t, r); var r = (e = Ss(e, n)).write(t, r); r !== n && (e = e.slice(0, r)); return e }(e, t, r)) : (function (e, t) { if (Os(t)) { const r = 0 | ks(t.length); return (e = Ss(e, r)).length === 0 ? e : (t.copy(e, 0, 0, r), e) } if (t) { if (typeof ArrayBuffer !== 'undefined' && t.buffer instanceof ArrayBuffer || 'length' in t) { return typeof t.length !== 'number' || (function (e) { return e != e }(t.length)) ? Ss(e, 0) : Ls(e, t) } if (t.type === 'Buffer' && As(t.data)) { return Ls(e, t.data) } } throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.') }(e, t)) } function Ns (e) { if (typeof e !== 'number') { throw new TypeError('"size" argument must be a number') } if (e < 0) { throw new RangeError('"size" argument must not be negative') } } function Ds (e, t) { if (Ns(t), e = Ss(e, t < 0 ? 0 : 0 | ks(t)), !xs.TYPED_ARRAY_SUPPORT) { for (let r = 0; r < t; ++r) { e[r] = 0 } } return e } function Ls (e, t) { const r = t.length < 0 ? 0 : 0 | ks(t.length); e = Ss(e, r); for (let n = 0; n < r; n += 1) { e[n] = 255 & t[n] } return e } function ks (e) { if (e >= _s()) { throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' + _s().toString(16) + ' bytes') } return 0 | e } function Os (e) { return e != null && e._isBuffer } function Cs (e, t) { if (Os(e)) { return e.length } if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) { return e.byteLength } typeof e !== 'string' && (e = '' + e); const r = e.length; if (r === 0) { return 0 } for (let n = !1; ;) { switch (t) { case 'ascii':case 'latin1':case 'binary':return r; case 'utf8':case 'utf-8':case void 0:return Ks(e).length; case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return 2 * r; case 'hex':return r >>> 1; case 'base64':return Qs(e).length; default:if (n) { return Ks(e).length } t = ('' + t).toLowerCase(), n = !0 } } } function Is (e, t, r) { let n; let i; let o; let a = !1; if ((void 0 === t || t < 0) && (t = 0), t > this.length) { return '' } if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) { return '' } if ((r >>>= 0) <= (t >>>= 0)) { return '' } for (e = e || 'utf8'; ;) { switch (e) { case 'hex':return (function (e, t, r) { const n = e.length; (!t || t < 0) && (t = 0); (!r || r < 0 || n < r) && (r = n); for (var i = '', o = t; o < r; ++o) { i += (function (e) { return e < 16 ? '0' + e.toString(16) : e.toString(16) }(e[o])) } return i }(this, t, r)); case 'utf8':case 'utf-8':return js(this, t, r); case 'ascii':return (function (e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i) { n += String.fromCharCode(127 & e[i]) } return n }(this, t, r)); case 'latin1':case 'binary':return (function (e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i) { n += String.fromCharCode(e[i]) } return n }(this, t, r)); case 'base64':return n = this, o = r, (i = t) === 0 && o === n.length ? bs(n) : bs(n.slice(i, o)); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return (function (e, t, r) { for (var n = e.slice(t, r), i = '', o = 0; o < n.length; o += 2) { i += String.fromCharCode(n[o] + 256 * n[o + 1]) } return i }(this, t, r)); default:if (a) { throw new TypeError('Unknown encoding: ' + e) } e = (e + '').toLowerCase(), a = !0 } } } function Ps (e, t, r) { const n = e[t]; e[t] = e[r], e[r] = n } function qs (e, t, r, n, i) { if (e.length === 0) { return -1 } if (typeof r === 'string' ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) { if (i) { return -1 } r = e.length - 1 } else if (r < 0) { if (!i) { return -1 } r = 0 } if (typeof t === 'string' && (t = xs.from(t, n)), Os(t)) { return t.length === 0 ? -1 : Us(e, t, r, n, i) } if (typeof t === 'number') { return t &= 255, xs.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function' ? (i ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e, t, r) : Us(e, [t], r, n, i) } throw new TypeError('val must be string, number or Buffer') } function Us (e, t, r, n, i) { let o = 1; let a = e.length; let s = t.length; if (void 0 !== n && ((n = String(n).toLowerCase()) === 'ucs2' || n === 'ucs-2' || n === 'utf16le' || n === 'utf-16le')) { if (e.length < 2 || t.length < 2) { return -1 } a /= o = 2, s /= 2, r /= 2 } function u (e, t) { return o === 1 ? e[t] : e.readUInt16BE(t * o) } if (i) { for (var c = -1, l = r; l < a; l++) { if (u(e, l) === u(t, c === -1 ? 0 : l - c)) { if (c === -1 && (c = l), l - c + 1 === s) { return c * o } } else { c !== -1 && (l -= l - c), c = -1 } } } else { for (a < r + s && (r = a - s), l = r; l >= 0; l--) { for (var f = !0, h = 0; h < s; h++) { if (u(e, l + h) !== u(t, h)) { f = !1; break } } if (f) { return l } } } return -1 } function Fs (e, t, r, n) { return Zs((function (e) { for (var t = [], r = 0; r < e.length; ++r) { t.push(255 & e.charCodeAt(r)) } return t }(t)), e, r, n) } function Bs (e, t, r, n) { return Zs((function (e, t) { for (var r, n, i = [], o = 0; o < e.length && !((t -= 2) < 0); ++o) { n = e.charCodeAt(o), r = n >> 8, n = n % 256, i.push(n), i.push(r) } return i }(t, e.length - r)), e, r, n) } function js (e, t, r) { r = Math.min(e.length, r); for (var n = [], i = t; i < r;) { var o; var a; var s; var u; const c = e[i]; let l = null; let f = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1; if (i + f <= r) { switch (f) { case 1:c < 128 && (l = c); break; case 2:(192 & (o = e[i + 1])) == 128 && (u = (31 & c) << 6 | 63 & o) > 127 && (l = u); break; case 3:o = e[i + 1], a = e[i + 2], (192 & o) == 128 && (192 & a) == 128 && (u = (15 & c) << 12 | (63 & o) << 6 | 63 & a) > 2047 && (u < 55296 || u > 57343) && (l = u); break; case 4:o = e[i + 1], a = e[i + 2], s = e[i + 3], (192 & o) == 128 && (192 & a) == 128 && (192 & s) == 128 && (u = (15 & c) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) > 65535 && u < 1114112 && (l = u) } }l === null ? (l = 65533, f = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), i += f } return (function (e) { const t = e.length; if (t <= Ms) { return String.fromCharCode.apply(String, e) } let r = ''; let n = 0; for (;n < t;) { r += String.fromCharCode.apply(String, e.slice(n, n += Ms)) } return r }(n)) }xs.TYPED_ARRAY_SUPPORT = void 0 === Ut.TYPED_ARRAY_SUPPORT || Ut.TYPED_ARRAY_SUPPORT, xs.poolSize = 8192, xs._augment = function (e) { return e.__proto__ = xs.prototype, e }, xs.from = function (e, t, r) { return Rs(null, e, t, r) }, xs.TYPED_ARRAY_SUPPORT && (xs.prototype.__proto__ = Uint8Array.prototype, xs.__proto__ = Uint8Array), xs.alloc = function (e, t, r) { return n = null, t = t, r = r, Ns(e = e), !(e <= 0) && void 0 !== t ? typeof r === 'string' ? Ss(n, e).fill(t, r) : Ss(n, e).fill(t) : Ss(n, e); let n }, xs.allocUnsafe = function (e) { return Ds(null, e) }, xs.allocUnsafeSlow = function (e) { return Ds(null, e) }, xs.isBuffer = Xs, xs.compare = function (e, t) { if (!Os(e) || !Os(t)) { throw new TypeError('Arguments must be Buffers') } if (e === t) { return 0 } for (var r = e.length, n = t.length, i = 0, o = Math.min(r, n); i < o; ++i) { if (e[i] !== t[i]) { r = e[i], n = t[i]; break } } return r < n ? -1 : n < r ? 1 : 0 }, xs.isEncoding = function (e) { switch (String(e).toLowerCase()) { case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'latin1':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return !0; default:return !1 } }, xs.concat = function (e, t) { if (!As(e)) { throw new TypeError('"list" argument must be an Array of Buffers') } if (e.length === 0) { return xs.alloc(0) } if (void 0 === t) { for (i = t = 0; i < e.length; ++i) { t += e[i].length } } for (var r = xs.allocUnsafe(t), n = 0, i = 0; i < e.length; ++i) { const o = e[i]; if (!Os(o)) { throw new TypeError('"list" argument must be an Array of Buffers') } o.copy(r, n), n += o.length } return r }, xs.byteLength = Cs, xs.prototype._isBuffer = !0, xs.prototype.swap16 = function () { const e = this.length; if (e % 2 != 0) { throw new RangeError('Buffer size must be a multiple of 16-bits') } for (let t = 0; t < e; t += 2) { Ps(this, t, t + 1) } return this }, xs.prototype.swap32 = function () { const e = this.length; if (e % 4 != 0) { throw new RangeError('Buffer size must be a multiple of 32-bits') } for (let t = 0; t < e; t += 4) { Ps(this, t, t + 3), Ps(this, t + 1, t + 2) } return this }, xs.prototype.swap64 = function () { const e = this.length; if (e % 8 != 0) { throw new RangeError('Buffer size must be a multiple of 64-bits') } for (let t = 0; t < e; t += 8) { Ps(this, t, t + 7), Ps(this, t + 1, t + 6), Ps(this, t + 2, t + 5), Ps(this, t + 3, t + 4) } return this }, xs.prototype.toString = function () { const e = 0 | this.length; return e == 0 ? '' : arguments.length === 0 ? js(this, 0, e) : Is.apply(this, arguments) }, xs.prototype.equals = function (e) { if (!Os(e)) { throw new TypeError('Argument must be a Buffer') } return this === e || xs.compare(this, e) === 0 }, xs.prototype.inspect = function () { let e = ''; return this.length > 0 && (e = this.toString('hex', 0, 50).match(/.{2}/g).join(' '), this.length > 50 && (e += ' ... ')), '<Buffer ' + e + '>' }, xs.prototype.compare = function (e, t, r, n, i) { if (!Os(e)) { throw new TypeError('Argument must be a Buffer') } if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) { throw new RangeError('out of range index') } if (i <= n && r <= t) { return 0 } if (i <= n) { return -1 } if (r <= t) { return 1 } if (this === e) { return 0 } for (var o = (i >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (t >>>= 0), s = Math.min(o, a), u = this.slice(n, i), c = e.slice(t, r), l = 0; l < s; ++l) { if (u[l] !== c[l]) { o = u[l], a = c[l]; break } } return o < a ? -1 : a < o ? 1 : 0 }, xs.prototype.includes = function (e, t, r) { return this.indexOf(e, t, r) !== -1 }, xs.prototype.indexOf = function (e, t, r) { return qs(this, e, t, r, !0) }, xs.prototype.lastIndexOf = function (e, t, r) { return qs(this, e, t, r, !1) }, xs.prototype.write = function (e, t, r, n) { if (void 0 === t) { n = 'utf8', r = this.length, t = 0 } else if (void 0 === r && typeof t === 'string') { n = t, r = this.length, t = 0 } else { if (!isFinite(t)) { throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported') } t |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = 'utf8')) : (n = r, r = void 0) } const i = this.length - t; if ((void 0 === r || i < r) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length) { throw new RangeError('Attempt to write outside buffer bounds') } n = n || 'utf8'; for (var o, a, s, u = !1; ;) { switch (n) { case 'hex':return (function (e, t, r, n) { r = Number(r) || 0; let i = e.length - r; if ((!n || i < (n = Number(n))) && (n = i), (i = t.length) % 2 != 0) { throw new TypeError('Invalid hex string') } i / 2 < n && (n = i / 2); for (var o = 0; o < n; ++o) { const a = parseInt(t.substr(2 * o, 2), 16); if (isNaN(a)) { return o } e[r + o] = a } return o }(this, e, t, r)); case 'utf8':case 'utf-8':return a = t, s = r, Zs(Ks(e, (o = this).length - a), o, a, s); case 'ascii':return Fs(this, e, t, r); case 'latin1':case 'binary':return Fs(this, e, t, r); case 'base64':return o = this, a = t, s = r, Zs(Qs(e), o, a, s); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return Bs(this, e, t, r); default:if (u) { throw new TypeError('Unknown encoding: ' + n) } n = ('' + n).toLowerCase(), u = !0 } } }, xs.prototype.toJSON = function () { return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) } }; var Ms = 4096; function Vs (e, t, r) { if (e % 1 != 0 || e < 0) { throw new RangeError('offset is not uint') } if (r < e + t) { throw new RangeError('Trying to access beyond buffer length') } } function Gs (e, t, r, n, i, o) { if (!Os(e)) { throw new TypeError('"buffer" argument must be a Buffer instance') } if (i < t || t < o) { throw new RangeError('"value" argument is out of bounds') } if (r + n > e.length) { throw new RangeError('Index out of range') } } function Hs (e, t, r, n) { t < 0 && (t = 65535 + t + 1); for (let i = 0, o = Math.min(e.length - r, 2); i < o; ++i) { e[r + i] = (t & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i) } } function zs (e, t, r, n) { t < 0 && (t = 4294967295 + t + 1); for (let i = 0, o = Math.min(e.length - r, 4); i < o; ++i) { e[r + i] = t >>> 8 * (n ? i : 3 - i) & 255 } } function Ys (e, t, r, n) { if (r + n > e.length) { throw new RangeError('Index out of range') } if (r < 0) { throw new RangeError('Index out of range') } } function Ws (e, t, r, n, i) { return i || Ys(e, 0, r, 4), Es(e, t, r, n, 23, 4), r + 4 } function $s (e, t, r, n, i) { return i || Ys(e, 0, r, 8), Es(e, t, r, n, 52, 8), r + 8 }xs.prototype.slice = function (e, t) { const r = this.length; if ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : r < e && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r), t < e && (t = e), xs.TYPED_ARRAY_SUPPORT) { (i = this.subarray(e, t)).__proto__ = xs.prototype } else { for (var n = t - e, i = new xs(n, void 0), o = 0; o < n; ++o) { i[o] = this[o + e] } } return i }, xs.prototype.readUIntLE = function (e, t, r) { e |= 0, t |= 0, r || Vs(e, t, this.length); for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) { n += this[e + o] * i } return n }, xs.prototype.readUIntBE = function (e, t, r) { e |= 0, t |= 0, r || Vs(e, t, this.length); for (var n = this[e + --t], i = 1; t > 0 && (i *= 256);) { n += this[e + --t] * i } return n }, xs.prototype.readUInt8 = function (e, t) { return t || Vs(e, 1, this.length), this[e] }, xs.prototype.readUInt16LE = function (e, t) { return t || Vs(e, 2, this.length), this[e] | this[e + 1] << 8 }, xs.prototype.readUInt16BE = function (e, t) { return t || Vs(e, 2, this.length), this[e] << 8 | this[e + 1] }, xs.prototype.readUInt32LE = function (e, t) { return t || Vs(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3] }, xs.prototype.readUInt32BE = function (e, t) { return t || Vs(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]) }, xs.prototype.readIntLE = function (e, t, r) { e |= 0, t |= 0, r || Vs(e, t, this.length); for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) { n += this[e + o] * i } return (i *= 128) <= n && (n -= Math.pow(2, 8 * t)), n }, xs.prototype.readIntBE = function (e, t, r) { e |= 0, t |= 0, r || Vs(e, t, this.length); for (var n = t, i = 1, o = this[e + --n]; n > 0 && (i *= 256);) { o += this[e + --n] * i } return (i *= 128) <= o && (o -= Math.pow(2, 8 * t)), o }, xs.prototype.readInt8 = function (e, t) { return t || Vs(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e] }, xs.prototype.readInt16LE = function (e, t) { t || Vs(e, 2, this.length); e = this[e] | this[e + 1] << 8; return 32768 & e ? 4294901760 | e : e }, xs.prototype.readInt16BE = function (e, t) { t || Vs(e, 2, this.length); e = this[e + 1] | this[e] << 8; return 32768 & e ? 4294901760 | e : e }, xs.prototype.readInt32LE = function (e, t) { return t || Vs(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24 }, xs.prototype.readInt32BE = function (e, t) { return t || Vs(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3] }, xs.prototype.readFloatLE = function (e, t) { return t || Vs(e, 4, this.length), ws(this, e, !0, 23, 4) }, xs.prototype.readFloatBE = function (e, t) { return t || Vs(e, 4, this.length), ws(this, e, !1, 23, 4) }, xs.prototype.readDoubleLE = function (e, t) { return t || Vs(e, 8, this.length), ws(this, e, !0, 52, 8) }, xs.prototype.readDoubleBE = function (e, t) { return t || Vs(e, 8, this.length), ws(this, e, !1, 52, 8) }, xs.prototype.writeUIntLE = function (e, t, r, n) { e = +e, t |= 0, r |= 0, n || Gs(this, e, t, r, Math.pow(2, 8 * r) - 1, 0); let i = 1; let o = 0; for (this[t] = 255 & e; ++o < r && (i *= 256);) { this[t + o] = e / i & 255 } return t + r }, xs.prototype.writeUIntBE = function (e, t, r, n) { e = +e, t |= 0, r |= 0, n || Gs(this, e, t, r, Math.pow(2, 8 * r) - 1, 0); let i = r - 1; let o = 1; for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) { this[t + i] = e / o & 255 } return t + r }, xs.prototype.writeUInt8 = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 1, 255, 0), xs.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1 }, xs.prototype.writeUInt16LE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 2, 65535, 0), xs.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : Hs(this, e, t, !0), t + 2 }, xs.prototype.writeUInt16BE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 2, 65535, 0), xs.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : Hs(this, e, t, !1), t + 2 }, xs.prototype.writeUInt32LE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 4, 4294967295, 0), xs.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : zs(this, e, t, !0), t + 4 }, xs.prototype.writeUInt32BE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 4, 4294967295, 0), xs.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : zs(this, e, t, !1), t + 4 }, xs.prototype.writeIntLE = function (e, t, r, n) { e = +e, t |= 0, n || Gs(this, e, t, r, (n = Math.pow(2, 8 * r - 1)) - 1, -n); let i = 0; let o = 1; let a = 0; for (this[t] = 255 & e; ++i < r && (o *= 256);) { e < 0 && a === 0 && this[t + i - 1] !== 0 && (a = 1), this[t + i] = (e / o >> 0) - a & 255 } return t + r }, xs.prototype.writeIntBE = function (e, t, r, n) { e = +e, t |= 0, n || Gs(this, e, t, r, (n = Math.pow(2, 8 * r - 1)) - 1, -n); let i = r - 1; let o = 1; let a = 0; for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) { e < 0 && a === 0 && this[t + i + 1] !== 0 && (a = 1), this[t + i] = (e / o >> 0) - a & 255 } return t + r }, xs.prototype.writeInt8 = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 1, 127, -128), xs.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1 }, xs.prototype.writeInt16LE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 2, 32767, -32768), xs.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : Hs(this, e, t, !0), t + 2 }, xs.prototype.writeInt16BE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 2, 32767, -32768), xs.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : Hs(this, e, t, !1), t + 2 }, xs.prototype.writeInt32LE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 4, 2147483647, -2147483648), xs.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : zs(this, e, t, !0), t + 4 }, xs.prototype.writeInt32BE = function (e, t, r) { return e = +e, t |= 0, r || Gs(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), xs.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : zs(this, e, t, !1), t + 4 }, xs.prototype.writeFloatLE = function (e, t, r) { return Ws(this, e, t, !0, r) }, xs.prototype.writeFloatBE = function (e, t, r) { return Ws(this, e, t, !1, r) }, xs.prototype.writeDoubleLE = function (e, t, r) { return $s(this, e, t, !0, r) }, xs.prototype.writeDoubleBE = function (e, t, r) { return $s(this, e, t, !1, r) }, xs.prototype.copy = function (e, t, r, n) { if (r = r || 0, n || n === 0 || (n = this.length), t >= e.length && (t = e.length), t = t || 0, n > 0 && n < r && (n = r), n === r) { return 0 } if (e.length === 0 || this.length === 0) { return 0 } if (t < 0) { throw new RangeError('targetStart out of bounds') } if (r < 0 || r >= this.length) { throw new RangeError('sourceStart out of bounds') } if (n < 0) { throw new RangeError('sourceEnd out of bounds') } n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r); let i; const o = n - r; if (this === e && r < t && t < n) { for (i = o - 1; i >= 0; --i) { e[i + t] = this[i + r] } } else if (o < 1e3 || !xs.TYPED_ARRAY_SUPPORT) { for (i = 0; i < o; ++i) { e[i + t] = this[i + r] } } else { Uint8Array.prototype.set.call(e, this.subarray(r, r + o), t) } return o }, xs.prototype.fill = function (e, t, r, n) { if (typeof e === 'string') { let i; if (typeof t === 'string' ? (n = t, t = 0, r = this.length) : typeof r === 'string' && (n = r, r = this.length), e.length !== 1 || (i = e.charCodeAt(0)) < 256 && (e = i), void 0 !== n && typeof n !== 'string') { throw new TypeError('encoding must be a string') } if (typeof n === 'string' && !xs.isEncoding(n)) { throw new TypeError('Unknown encoding: ' + n) } } else { typeof e === 'number' && (e &= 255) } if (t < 0 || this.length < t || this.length < r) { throw new RangeError('Out of range index') } if (r <= t) { return this } if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, typeof (e = e || 0) === 'number') { for (s = t; s < r; ++s) { this[s] = e } } else { for (var o = Os(e) ? e : Ks(new xs(e, n).toString()), a = o.length, s = 0; s < r - t; ++s) { this[s + t] = o[s % a] } } return this }; const Js = /[^+\/0-9A-Za-z-_]/g; function Ks (e, t) { let r; t = t || 1 / 0; for (var n = e.length, i = null, o = [], a = 0; a < n; ++a) { if ((r = e.charCodeAt(a)) > 55295 && r < 57344) { if (!i) { if (r > 56319) { (t -= 3) > -1 && o.push(239, 191, 189); continue } if (a + 1 === n) { (t -= 3) > -1 && o.push(239, 191, 189); continue }i = r; continue } if (r < 56320) { (t -= 3) > -1 && o.push(239, 191, 189), i = r; continue }r = 65536 + (i - 55296 << 10 | r - 56320) } else { i && (t -= 3) > -1 && o.push(239, 191, 189) } if (i = null, r < 128) { if (--t < 0) { break } o.push(r) } else if (r < 2048) { if ((t -= 2) < 0) { break } o.push(r >> 6 | 192, 63 & r | 128) } else if (r < 65536) { if ((t -= 3) < 0) { break } o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128) } else { if (!(r < 1114112)) { throw new Error('Invalid code point') } if ((t -= 4) < 0) { break } o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128) } } return o } function Qs (e) { return (function (e) { let t, r, n, i; ys || ms(); const o = e.length; if (o % 4 > 0) { throw new Error('Invalid string. Length must be a multiple of 4') } n = e[o - 2] === '=' ? 2 : e[o - 1] === '=' ? 1 : 0, i = new gs(3 * o / 4 - n), t = n > 0 ? o - 4 : o; for (var a = 0, s = 0; s < t; s += 4, 0) { r = ds[e.charCodeAt(s)] << 18 | ds[e.charCodeAt(s + 1)] << 12 | ds[e.charCodeAt(s + 2)] << 6 | ds[e.charCodeAt(s + 3)], i[a++] = r >> 16 & 255, i[a++] = r >> 8 & 255, i[a++] = 255 & r } return n == 2 ? (r = ds[e.charCodeAt(s)] << 2 | ds[e.charCodeAt(s + 1)] >> 4, i[a++] = 255 & r) : n == 1 && (r = ds[e.charCodeAt(s)] << 10 | ds[e.charCodeAt(s + 1)] << 4 | ds[e.charCodeAt(s + 2)] >> 2, i[a++] = r >> 8 & 255, i[a++] = 255 & r), i }(function (e) { let t; if ((e = ((t = e).trim ? t.trim() : t.replace(/^\s+|\s+$/g, '')).replace(Js, '')).length < 2) { return '' } for (;e.length % 4 != 0;) { e += '=' } return e }(e))) } function Zs (e, t, r, n) { for (var i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i) { t[i + r] = e[i] } return i } function Xs (e) { return e != null && (!!e._isBuffer || eu(e) || typeof (e = e).readFloatLE === 'function' && typeof e.slice === 'function' && eu(e.slice(0, 0))) } function eu (e) { return !!e.constructor && typeof e.constructor.isBuffer === 'function' && e.constructor.isBuffer(e) } function tu () { throw new Error('setTimeout has not been defined') } function ru () { throw new Error('clearTimeout has not been defined') } let nu = tu; let iu = ru; function ou (t) { if (nu === setTimeout) { return setTimeout(t, 0) } if ((nu === tu || !nu) && setTimeout) { return nu = setTimeout, setTimeout(t, 0) } try { return nu(t, 0) } catch (e) { try { return nu.call(null, t, 0) } catch (e) { return nu.call(this, t, 0) } } } typeof Ut.setTimeout === 'function' && (nu = setTimeout), typeof Ut.clearTimeout === 'function' && (iu = clearTimeout); let au; let su = []; let uu = !1; let cu = -1; function lu () { uu && au && (uu = !1, au.length ? su = au.concat(su) : cu = -1, su.length && fu()) } function fu () { if (!uu) { const e = ou(lu); uu = !0; for (let t = su.length; t;) { for (au = su, su = []; ++cu < t;) { au && au[cu].run() }cu = -1, t = su.length }au = null, uu = !1, (function (t) { if (iu === clearTimeout) { return clearTimeout(t) } if ((iu === ru || !iu) && clearTimeout) { return iu = clearTimeout, clearTimeout(t) } try { iu(t) } catch (e) { try { return iu.call(null, t) } catch (e) { return iu.call(this, t) } } }(e)) } } function hu (e) { const t = new Array(arguments.length - 1); if (arguments.length > 1) { for (let r = 1; r < arguments.length; r++) { t[r - 1] = arguments[r] } }su.push(new pu(e, t)), su.length !== 1 || uu || ou(fu) } function pu (e, t) { this.fun = e, this.array = t }pu.prototype.run = function () { this.fun.apply(null, this.array) }; Ut.performance; var i = typeof Object.create === 'function' ? function (e, t) { e.super_ = t, e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }) } : function (e, t) { e.super_ = t; function r () {}r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e }; var Ii = i; const du = /%[sdj%]/g; function gu (e) { if (!Lu(e)) { for (var t = [], r = 0; r < arguments.length; r++) { t.push(wu(arguments[r])) } return t.join(' ') } for (var r = 1, n = arguments, i = n.length, o = String(e).replace(du, function (e) { if (e === '%%') { return '%' } if (i <= r) { return e } switch (e) { case '%s':return String(n[r++]); case '%d':return Number(n[r++]); case '%j':try { return JSON.stringify(n[r++]) } catch (e) { return '[Circular]' } default:return e } }), a = n[r]; r < i; a = n[++r]) { Nu(a) || !Cu(a) ? o += ' ' + a : o += ' ' + wu(a) } return o } function yu (e, t) { if (ku(Ut.process)) { return function () { return yu(e, t).apply(this, arguments) } } let r = !1; return function () { return r || (console.error(t), r = !0), e.apply(this, arguments) } } let mu; const vu = {}; function bu (t) { return ku(mu) && (mu = ''), t = t.toUpperCase(), vu[t] || (new RegExp('\\b' + t + '\\b', 'i').test(mu) ? vu[t] = function () { const e = gu.apply(null, arguments); console.error('%s %d: %s', t, 0, e) } : vu[t] = function () {}), vu[t] } function wu (e, t) { const r = { seen: [], stylize: Tu }; return arguments.length >= 3 && (r.depth = arguments[2]), arguments.length >= 4 && (r.colors = arguments[3]), Ru(t) ? r.showHidden = t : t && ju(r, t), ku(r.showHidden) && (r.showHidden = !1), ku(r.depth) && (r.depth = 2), ku(r.colors) && (r.colors = !1), ku(r.customInspect) && (r.customInspect = !0), r.colors && (r.stylize = Eu), Au(r, e, r.depth) } function Eu (e, t) { t = wu.styles[t]; return t ? '[' + wu.colors[t][0] + 'm' + e + '[' + wu.colors[t][1] + 'm' : e } function Tu (e, t) { return e } function Au (t, r, n) { if (t.customInspect && r && qu(r.inspect) && r.inspect !== wu && (!r.constructor || r.constructor.prototype !== r)) { var e = r.inspect(n, t); return Lu(e) || (e = Au(t, e, n)), e } var i = (function (e, t) { if (ku(t)) { return e.stylize('undefined', 'undefined') } if (Lu(t)) { const r = "'" + JSON.stringify(t).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + "'"; return e.stylize(r, 'string') } if (Du(t)) { return e.stylize('' + t, 'number') } if (Ru(t)) { return e.stylize('' + t, 'boolean') } if (Nu(t)) { return e.stylize('null', 'null') } }(t, r)); if (i) { return i } let o; var e = Object.keys(r); const a = (o = {}, e.forEach(function (e, t) { o[e] = !0 }), o); if (t.showHidden && (e = Object.getOwnPropertyNames(r)), Pu(r) && (e.indexOf('message') >= 0 || e.indexOf('description') >= 0)) { return _u(r) } if (e.length === 0) { if (qu(r)) { var s = r.name ? ': ' + r.name : ''; return t.stylize('[Function' + s + ']', 'special') } if (Ou(r)) { return t.stylize(RegExp.prototype.toString.call(r), 'regexp') } if (Iu(r)) { return t.stylize(Date.prototype.toString.call(r), 'date') } if (Pu(r)) { return _u(r) } } var i = ''; let u = !1; var s = ['{', '}']; return xu(r) && (u = !0, s = ['[', ']']), qu(r) && (i = ' [Function' + (r.name ? ': ' + r.name : '') + ']'), Ou(r) && (i = ' ' + RegExp.prototype.toString.call(r)), Iu(r) && (i = ' ' + Date.prototype.toUTCString.call(r)), Pu(r) && (i = ' ' + _u(r)), e.length !== 0 || u && r.length != 0 ? n < 0 ? Ou(r) ? t.stylize(RegExp.prototype.toString.call(r), 'regexp') : t.stylize('[Object]', 'special') : (t.seen.push(r), e = u ? (function (t, r, n, i, e) { for (var o = [], a = 0, s = r.length; a < s; ++a) { Mu(r, String(a)) ? o.push(Su(t, r, n, i, String(a), !0)) : o.push('') } return e.forEach(function (e) { e.match(/^\d+$/) || o.push(Su(t, r, n, i, e, !0)) }), o }(t, r, n, a, e)) : e.map(function (e) { return Su(t, r, n, a, e, u) }), t.seen.pop(), (function (e, t, r) { if (e.reduce(function (e, t) { return t.indexOf('\n'), e + t.replace(/\u001b\[\d\d?m/g, '').length + 1 }, 0) > 60) { return r[0] + (t === '' ? '' : t + '\n ') + ' ' + e.join(',\n  ') + ' ' + r[1] } return r[0] + t + ' ' + e.join(', ') + ' ' + r[1] }(e, i, s))) : s[0] + i + s[1] } function _u (e) { return '[' + Error.prototype.toString.call(e) + ']' } function Su (e, t, r, n, i, o) { let a; let s; var t = Object.getOwnPropertyDescriptor(t, i) || { value: t[i] }; if (t.get ? s = t.set ? e.stylize('[Getter/Setter]', 'special') : e.stylize('[Getter]', 'special') : t.set && (s = e.stylize('[Setter]', 'special')), Mu(n, i) || (a = '[' + i + ']'), s || (e.seen.indexOf(t.value) < 0 ? (s = Nu(r) ? Au(e, t.value, null) : Au(e, t.value, r - 1)).indexOf('\n') > -1 && (s = o ? s.split('\n').map(function (e) { return '  ' + e }).join('\n').substr(2) : '\n' + s.split('\n').map(function (e) { return '   ' + e }).join('\n')) : s = e.stylize('[Circular]', 'special')), ku(a)) { if (o && i.match(/^\d+$/)) { return s } a = (a = JSON.stringify('' + i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a = a.substr(1, a.length - 2), e.stylize(a, 'name')) : (a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), e.stylize(a, 'string')) } return a + ': ' + s } function xu (e) { return Array.isArray(e) } function Ru (e) { return typeof e === 'boolean' } function Nu (e) { return e === null } function Du (e) { return typeof e === 'number' } function Lu (e) { return typeof e === 'string' } function ku (e) { return void 0 === e } function Ou (e) { return Cu(e) && Uu(e) === '[object RegExp]' } function Cu (e) { return kn(e) === 'object' && e !== null } function Iu (e) { return Cu(e) && Uu(e) === '[object Date]' } function Pu (e) { return Cu(e) && (Uu(e) === '[object Error]' || e instanceof Error) } function qu (e) { return typeof e === 'function' } function Uu (e) { return Object.prototype.toString.call(e) } function Fu (e) { return e < 10 ? '0' + e.toString(10) : e.toString(10) }wu.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, wu.styles = { special: 'cyan', number: 'yellow', boolean: 'yellow', undefined: 'grey', null: 'bold', string: 'green', date: 'magenta', regexp: 'red' }; const Bu = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; function ju (e, t) { if (!t || !Cu(t)) { return e } for (let r = Object.keys(t), n = r.length; n--;) { e[r[n]] = t[r[n]] } return e } function Mu (e, t) { return Object.prototype.hasOwnProperty.call(e, t) } const Vu = { inherits: Ii, _extend: ju, log: function () { let e, t; console.log('%s - %s', (e = new Date(), t = [Fu(e.getHours()), Fu(e.getMinutes()), Fu(e.getSeconds())].join(':'), [e.getDate(), Bu[e.getMonth()], t].join(' ')), gu.apply(null, arguments)) }, isBuffer: Xs, isPrimitive: function (e) { return e === null || typeof e === 'boolean' || typeof e === 'number' || typeof e === 'string' || kn(e) === 'symbol' || void 0 === e }, isFunction: qu, isError: Pu, isDate: Iu, isObject: Cu, isRegExp: Ou, isUndefined: ku, isSymbol: function (e) { return kn(e) === 'symbol' }, isString: Lu, isNumber: Du, isNullOrUndefined: function (e) { return e == null }, isNull: Nu, isBoolean: Ru, isArray: xu, inspect: wu, deprecate: yu, format: gu, debuglog: bu }; const Gu = []; const Hu = []; const zu = typeof Uint8Array !== 'undefined' ? Uint8Array : Array; let Yu = !1; function Wu () { Yu = !0; for (let e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', t = 0, r = e.length; t < r; ++t) { Gu[t] = e[t], Hu[e.charCodeAt(t)] = t }Hu['-'.charCodeAt(0)] = 62, Hu['_'.charCodeAt(0)] = 63 } function $u (e, t, r) { for (var n, i = [], o = t; o < r; o += 3) { n = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2], i.push(Gu[(n = n) >> 18 & 63] + Gu[n >> 12 & 63] + Gu[n >> 6 & 63] + Gu[63 & n]) } return i.join('') } function Ju (e) { let t; Yu || Wu(); for (var r = e.length, n = r % 3, i = '', o = [], a = 0, s = r - n; a < s; a += 16383) { o.push($u(e, a, s < a + 16383 ? s : a + 16383)) } return n == 1 ? (t = e[r - 1], i += Gu[t >> 2], i += Gu[t << 4 & 63], i += '==') : n == 2 && (t = (e[r - 2] << 8) + e[r - 1], i += Gu[t >> 10], i += Gu[t >> 4 & 63], i += Gu[t << 2 & 63], i += '='), o.push(i), o.join('') } function Ku (e, t, r, n, i) { let o; let a; const s = 8 * i - n - 1; const u = (1 << s) - 1; const c = u >> 1; let l = -7; let f = r ? i - 1 : 0; const h = r ? -1 : 1; var r = e[t + f]; for (f += h, o = r & (1 << -l) - 1, r >>= -l, l += s; l > 0; o = 256 * o + e[t + f], f += h, l -= 8) { } for (a = o & (1 << -l) - 1, o >>= -l, l += n; l > 0; a = 256 * a + e[t + f], f += h, l -= 8) { } if (o === 0) { o = 1 - c } else { if (o === u) { return a ? NaN : 1 / 0 * (r ? -1 : 1) } a += Math.pow(2, n), o -= c } return (r ? -1 : 1) * a * Math.pow(2, o - n) } function Qu (e, t, r, n, i, o) { let a; let s; let u = 8 * o - i - 1; const c = (1 << u) - 1; const l = c >> 1; const f = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0; let h = n ? 0 : o - 1; const p = n ? 1 : -1; var o = t < 0 || t === 0 && 1 / t < 0 ? 1 : 0; for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, a = c) : (a = Math.floor(Math.log(t) / Math.LN2), t * (n = Math.pow(2, -a)) < 1 && (a--, n *= 2), (t += a + l >= 1 ? f / n : f * Math.pow(2, 1 - l)) * n >= 2 && (a++, n /= 2), c <= a + l ? (s = 0, a = c) : a + l >= 1 ? (s = (t * n - 1) * Math.pow(2, i), a += l) : (s = t * Math.pow(2, l - 1) * Math.pow(2, i), a = 0)); i >= 8; e[r + h] = 255 & s, h += p, s /= 256, i -= 8) { } for (a = a << i | s, u += i; u > 0; e[r + h] = 255 & a, h += p, a /= 256, u -= 8) { }e[r + h - p] |= 128 * o } const Zu = {}.toString; const Xu = Array.isArray || function (e) { return Zu.call(e) == '[object Array]' }; function ec () { return rc.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823 } function tc (e, t) { if (ec() < t) { throw new RangeError('Invalid typed array length') } return rc.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = rc.prototype : (e === null && (e = new rc(t)), e.length = t), e } function rc (e, t, r) { if (!(rc.TYPED_ARRAY_SUPPORT || this instanceof rc)) { return new rc(e, t, r) } if (typeof e !== 'number') { return nc(this, e, t, r) } if (typeof t === 'string') { throw new Error('If encoding is specified then the first argument must be a string') } return oc(this, e) } function nc (e, t, r, n) { if (typeof t === 'number') { throw new TypeError('"value" argument must not be a number') } return typeof ArrayBuffer !== 'undefined' && t instanceof ArrayBuffer ? (function (e, t, r, n) { if (t.byteLength, r < 0 || t.byteLength < r) { throw new RangeError("'offset' is out of bounds") } if (t.byteLength < r + (n || 0)) { throw new RangeError("'length' is out of bounds") } t = void 0 === r && void 0 === n ? new Uint8Array(t) : void 0 === n ? new Uint8Array(t, r) : new Uint8Array(t, r, n); rc.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = rc.prototype : e = ac(e, t); return e }(e, t, r, n)) : typeof t === 'string' ? (function (e, t, r) { typeof r === 'string' && r !== '' || (r = 'utf8'); if (!rc.isEncoding(r)) { throw new TypeError('"encoding" must be a valid string encoding') } const n = 0 | cc(t, r); var r = (e = tc(e, n)).write(t, r); r !== n && (e = e.slice(0, r)); return e }(e, t, r)) : (function (e, t) { if (uc(t)) { const r = 0 | sc(t.length); return (e = tc(e, r)).length === 0 ? e : (t.copy(e, 0, 0, r), e) } if (t) { if (typeof ArrayBuffer !== 'undefined' && t.buffer instanceof ArrayBuffer || 'length' in t) { return typeof t.length !== 'number' || (function (e) { return e != e }(t.length)) ? tc(e, 0) : ac(e, t) } if (t.type === 'Buffer' && Xu(t.data)) { return ac(e, t.data) } } throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.') }(e, t)) } function ic (e) { if (typeof e !== 'number') { throw new TypeError('"size" argument must be a number') } if (e < 0) { throw new RangeError('"size" argument must not be negative') } } function oc (e, t) { if (ic(t), e = tc(e, t < 0 ? 0 : 0 | sc(t)), !rc.TYPED_ARRAY_SUPPORT) { for (let r = 0; r < t; ++r) { e[r] = 0 } } return e } function ac (e, t) { const r = t.length < 0 ? 0 : 0 | sc(t.length); e = tc(e, r); for (let n = 0; n < r; n += 1) { e[n] = 255 & t[n] } return e } function sc (e) { if (e >= ec()) { throw new RangeError('Attempt to allocate Buffer larger than maximum size: 0x' + ec().toString(16) + ' bytes') } return 0 | e } function uc (e) { return e != null && e._isBuffer } function cc (e, t) { if (uc(e)) { return e.length } if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) { return e.byteLength } typeof e !== 'string' && (e = '' + e); const r = e.length; if (r === 0) { return 0 } for (let n = !1; ;) { switch (t) { case 'ascii':case 'latin1':case 'binary':return r; case 'utf8':case 'utf-8':case void 0:return xc(e).length; case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return 2 * r; case 'hex':return r >>> 1; case 'base64':return Rc(e).length; default:if (n) { return xc(e).length } t = ('' + t).toLowerCase(), n = !0 } } } function lc (e, t, r) { let n; let i; let o; let a = !1; if ((void 0 === t || t < 0) && (t = 0), t > this.length) { return '' } if ((void 0 === r || r > this.length) && (r = this.length), r <= 0) { return '' } if ((r >>>= 0) <= (t >>>= 0)) { return '' } for (e = e || 'utf8'; ;) { switch (e) { case 'hex':return (function (e, t, r) { const n = e.length; (!t || t < 0) && (t = 0); (!r || r < 0 || n < r) && (r = n); for (var i = '', o = t; o < r; ++o) { i += (function (e) { return e < 16 ? '0' + e.toString(16) : e.toString(16) }(e[o])) } return i }(this, t, r)); case 'utf8':case 'utf-8':return yc(this, t, r); case 'ascii':return (function (e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i) { n += String.fromCharCode(127 & e[i]) } return n }(this, t, r)); case 'latin1':case 'binary':return (function (e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i) { n += String.fromCharCode(e[i]) } return n }(this, t, r)); case 'base64':return n = this, o = r, (i = t) === 0 && o === n.length ? Ju(n) : Ju(n.slice(i, o)); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return (function (e, t, r) { for (var n = e.slice(t, r), i = '', o = 0; o < n.length; o += 2) { i += String.fromCharCode(n[o] + 256 * n[o + 1]) } return i }(this, t, r)); default:if (a) { throw new TypeError('Unknown encoding: ' + e) } e = (e + '').toLowerCase(), a = !0 } } } function fc (e, t, r) { const n = e[t]; e[t] = e[r], e[r] = n } function hc (e, t, r, n, i) { if (e.length === 0) { return -1 } if (typeof r === 'string' ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, isNaN(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) { if (i) { return -1 } r = e.length - 1 } else if (r < 0) { if (!i) { return -1 } r = 0 } if (typeof t === 'string' && (t = rc.from(t, n)), uc(t)) { return t.length === 0 ? -1 : pc(e, t, r, n, i) } if (typeof t === 'number') { return t &= 255, rc.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function' ? (i ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e, t, r) : pc(e, [t], r, n, i) } throw new TypeError('val must be string, number or Buffer') } function pc (e, t, r, n, i) { let o = 1; let a = e.length; let s = t.length; if (void 0 !== n && ((n = String(n).toLowerCase()) === 'ucs2' || n === 'ucs-2' || n === 'utf16le' || n === 'utf-16le')) { if (e.length < 2 || t.length < 2) { return -1 } a /= o = 2, s /= 2, r /= 2 } function u (e, t) { return o === 1 ? e[t] : e.readUInt16BE(t * o) } if (i) { for (var c = -1, l = r; l < a; l++) { if (u(e, l) === u(t, c === -1 ? 0 : l - c)) { if (c === -1 && (c = l), l - c + 1 === s) { return c * o } } else { c !== -1 && (l -= l - c), c = -1 } } } else { for (a < r + s && (r = a - s), l = r; l >= 0; l--) { for (var f = !0, h = 0; h < s; h++) { if (u(e, l + h) !== u(t, h)) { f = !1; break } } if (f) { return l } } } return -1 } function dc (e, t, r, n) { return Nc((function (e) { for (var t = [], r = 0; r < e.length; ++r) { t.push(255 & e.charCodeAt(r)) } return t }(t)), e, r, n) } function gc (e, t, r, n) { return Nc((function (e, t) { for (var r, n, i = [], o = 0; o < e.length && !((t -= 2) < 0); ++o) { n = e.charCodeAt(o), r = n >> 8, n = n % 256, i.push(n), i.push(r) } return i }(t, e.length - r)), e, r, n) } function yc (e, t, r) { r = Math.min(e.length, r); for (var n = [], i = t; i < r;) { var o; var a; var s; var u; const c = e[i]; let l = null; let f = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1; if (i + f <= r) { switch (f) { case 1:c < 128 && (l = c); break; case 2:(192 & (o = e[i + 1])) == 128 && (u = (31 & c) << 6 | 63 & o) > 127 && (l = u); break; case 3:o = e[i + 1], a = e[i + 2], (192 & o) == 128 && (192 & a) == 128 && (u = (15 & c) << 12 | (63 & o) << 6 | 63 & a) > 2047 && (u < 55296 || u > 57343) && (l = u); break; case 4:o = e[i + 1], a = e[i + 2], s = e[i + 3], (192 & o) == 128 && (192 & a) == 128 && (192 & s) == 128 && (u = (15 & c) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) > 65535 && u < 1114112 && (l = u) } }l === null ? (l = 65533, f = 1) : l > 65535 && (l -= 65536, n.push(l >>> 10 & 1023 | 55296), l = 56320 | 1023 & l), n.push(l), i += f } return (function (e) { const t = e.length; if (t <= mc) { return String.fromCharCode.apply(String, e) } let r = ''; let n = 0; for (;n < t;) { r += String.fromCharCode.apply(String, e.slice(n, n += mc)) } return r }(n)) }rc.TYPED_ARRAY_SUPPORT = void 0 === Ut.TYPED_ARRAY_SUPPORT || Ut.TYPED_ARRAY_SUPPORT, rc.poolSize = 8192, rc._augment = function (e) { return e.__proto__ = rc.prototype, e }, rc.from = function (e, t, r) { return nc(null, e, t, r) }, rc.TYPED_ARRAY_SUPPORT && (rc.prototype.__proto__ = Uint8Array.prototype, rc.__proto__ = Uint8Array), rc.alloc = function (e, t, r) { return n = null, t = t, r = r, ic(e = e), !(e <= 0) && void 0 !== t ? typeof r === 'string' ? tc(n, e).fill(t, r) : tc(n, e).fill(t) : tc(n, e); let n }, rc.allocUnsafe = function (e) { return oc(null, e) }, rc.allocUnsafeSlow = function (e) { return oc(null, e) }, rc.isBuffer = function (e) { return e != null && (!!e._isBuffer || Dc(e) || (function (e) { return typeof e.readFloatLE === 'function' && typeof e.slice === 'function' && Dc(e.slice(0, 0)) }(e))) }, rc.compare = function (e, t) { if (!uc(e) || !uc(t)) { throw new TypeError('Arguments must be Buffers') } if (e === t) { return 0 } for (var r = e.length, n = t.length, i = 0, o = Math.min(r, n); i < o; ++i) { if (e[i] !== t[i]) { r = e[i], n = t[i]; break } } return r < n ? -1 : n < r ? 1 : 0 }, rc.isEncoding = function (e) { switch (String(e).toLowerCase()) { case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'latin1':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return !0; default:return !1 } }, rc.concat = function (e, t) { if (!Xu(e)) { throw new TypeError('"list" argument must be an Array of Buffers') } if (e.length === 0) { return rc.alloc(0) } if (void 0 === t) { for (i = t = 0; i < e.length; ++i) { t += e[i].length } } for (var r = rc.allocUnsafe(t), n = 0, i = 0; i < e.length; ++i) { const o = e[i]; if (!uc(o)) { throw new TypeError('"list" argument must be an Array of Buffers') } o.copy(r, n), n += o.length } return r }, rc.byteLength = cc, rc.prototype._isBuffer = !0, rc.prototype.swap16 = function () { const e = this.length; if (e % 2 != 0) { throw new RangeError('Buffer size must be a multiple of 16-bits') } for (let t = 0; t < e; t += 2) { fc(this, t, t + 1) } return this }, rc.prototype.swap32 = function () { const e = this.length; if (e % 4 != 0) { throw new RangeError('Buffer size must be a multiple of 32-bits') } for (let t = 0; t < e; t += 4) { fc(this, t, t + 3), fc(this, t + 1, t + 2) } return this }, rc.prototype.swap64 = function () { const e = this.length; if (e % 8 != 0) { throw new RangeError('Buffer size must be a multiple of 64-bits') } for (let t = 0; t < e; t += 8) { fc(this, t, t + 7), fc(this, t + 1, t + 6), fc(this, t + 2, t + 5), fc(this, t + 3, t + 4) } return this }, rc.prototype.toString = function () { const e = 0 | this.length; return e == 0 ? '' : arguments.length === 0 ? yc(this, 0, e) : lc.apply(this, arguments) }, rc.prototype.equals = function (e) { if (!uc(e)) { throw new TypeError('Argument must be a Buffer') } return this === e || rc.compare(this, e) === 0 }, rc.prototype.inspect = function () { let e = ''; return this.length > 0 && (e = this.toString('hex', 0, 50).match(/.{2}/g).join(' '), this.length > 50 && (e += ' ... ')), '<Buffer ' + e + '>' }, rc.prototype.compare = function (e, t, r, n, i) { if (!uc(e)) { throw new TypeError('Argument must be a Buffer') } if (void 0 === t && (t = 0), void 0 === r && (r = e ? e.length : 0), void 0 === n && (n = 0), void 0 === i && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length) { throw new RangeError('out of range index') } if (i <= n && r <= t) { return 0 } if (i <= n) { return -1 } if (r <= t) { return 1 } if (this === e) { return 0 } for (var o = (i >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (t >>>= 0), s = Math.min(o, a), u = this.slice(n, i), c = e.slice(t, r), l = 0; l < s; ++l) { if (u[l] !== c[l]) { o = u[l], a = c[l]; break } } return o < a ? -1 : a < o ? 1 : 0 }, rc.prototype.includes = function (e, t, r) { return this.indexOf(e, t, r) !== -1 }, rc.prototype.indexOf = function (e, t, r) { return hc(this, e, t, r, !0) }, rc.prototype.lastIndexOf = function (e, t, r) { return hc(this, e, t, r, !1) }, rc.prototype.write = function (e, t, r, n) { if (void 0 === t) { n = 'utf8', r = this.length, t = 0 } else if (void 0 === r && typeof t === 'string') { n = t, r = this.length, t = 0 } else { if (!isFinite(t)) { throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported') } t |= 0, isFinite(r) ? (r |= 0, void 0 === n && (n = 'utf8')) : (n = r, r = void 0) } const i = this.length - t; if ((void 0 === r || i < r) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length) { throw new RangeError('Attempt to write outside buffer bounds') } n = n || 'utf8'; for (var o, a, s, u = !1; ;) { switch (n) { case 'hex':return (function (e, t, r, n) { r = Number(r) || 0; let i = e.length - r; if ((!n || i < (n = Number(n))) && (n = i), (i = t.length) % 2 != 0) { throw new TypeError('Invalid hex string') } i / 2 < n && (n = i / 2); for (var o = 0; o < n; ++o) { const a = parseInt(t.substr(2 * o, 2), 16); if (isNaN(a)) { return o } e[r + o] = a } return o }(this, e, t, r)); case 'utf8':case 'utf-8':return a = t, s = r, Nc(xc(e, (o = this).length - a), o, a, s); case 'ascii':return dc(this, e, t, r); case 'latin1':case 'binary':return dc(this, e, t, r); case 'base64':return o = this, a = t, s = r, Nc(Rc(e), o, a, s); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return gc(this, e, t, r); default:if (u) { throw new TypeError('Unknown encoding: ' + n) } n = ('' + n).toLowerCase(), u = !0 } } }, rc.prototype.toJSON = function () { return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) } }; var mc = 4096; function vc (e, t, r) { if (e % 1 != 0 || e < 0) { throw new RangeError('offset is not uint') } if (r < e + t) { throw new RangeError('Trying to access beyond buffer length') } } function bc (e, t, r, n, i, o) { if (!uc(e)) { throw new TypeError('"buffer" argument must be a Buffer instance') } if (i < t || t < o) { throw new RangeError('"value" argument is out of bounds') } if (r + n > e.length) { throw new RangeError('Index out of range') } } function wc (e, t, r, n) { t < 0 && (t = 65535 + t + 1); for (let i = 0, o = Math.min(e.length - r, 2); i < o; ++i) { e[r + i] = (t & 255 << 8 * (n ? i : 1 - i)) >>> 8 * (n ? i : 1 - i) } } function Ec (e, t, r, n) { t < 0 && (t = 4294967295 + t + 1); for (let i = 0, o = Math.min(e.length - r, 4); i < o; ++i) { e[r + i] = t >>> 8 * (n ? i : 3 - i) & 255 } } function Tc (e, t, r, n) { if (r + n > e.length) { throw new RangeError('Index out of range') } if (r < 0) { throw new RangeError('Index out of range') } } function Ac (e, t, r, n, i) { return i || Tc(e, 0, r, 4), Qu(e, t, r, n, 23, 4), r + 4 } function _c (e, t, r, n, i) { return i || Tc(e, 0, r, 8), Qu(e, t, r, n, 52, 8), r + 8 }rc.prototype.slice = function (e, t) { const r = this.length; if ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : r < e && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r), t < e && (t = e), rc.TYPED_ARRAY_SUPPORT) { (i = this.subarray(e, t)).__proto__ = rc.prototype } else { for (var n = t - e, i = new rc(n, void 0), o = 0; o < n; ++o) { i[o] = this[o + e] } } return i }, rc.prototype.readUIntLE = function (e, t, r) { e |= 0, t |= 0, r || vc(e, t, this.length); for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) { n += this[e + o] * i } return n }, rc.prototype.readUIntBE = function (e, t, r) { e |= 0, t |= 0, r || vc(e, t, this.length); for (var n = this[e + --t], i = 1; t > 0 && (i *= 256);) { n += this[e + --t] * i } return n }, rc.prototype.readUInt8 = function (e, t) { return t || vc(e, 1, this.length), this[e] }, rc.prototype.readUInt16LE = function (e, t) { return t || vc(e, 2, this.length), this[e] | this[e + 1] << 8 }, rc.prototype.readUInt16BE = function (e, t) { return t || vc(e, 2, this.length), this[e] << 8 | this[e + 1] }, rc.prototype.readUInt32LE = function (e, t) { return t || vc(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3] }, rc.prototype.readUInt32BE = function (e, t) { return t || vc(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]) }, rc.prototype.readIntLE = function (e, t, r) { e |= 0, t |= 0, r || vc(e, t, this.length); for (var n = this[e], i = 1, o = 0; ++o < t && (i *= 256);) { n += this[e + o] * i } return (i *= 128) <= n && (n -= Math.pow(2, 8 * t)), n }, rc.prototype.readIntBE = function (e, t, r) { e |= 0, t |= 0, r || vc(e, t, this.length); for (var n = t, i = 1, o = this[e + --n]; n > 0 && (i *= 256);) { o += this[e + --n] * i } return (i *= 128) <= o && (o -= Math.pow(2, 8 * t)), o }, rc.prototype.readInt8 = function (e, t) { return t || vc(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e] }, rc.prototype.readInt16LE = function (e, t) { t || vc(e, 2, this.length); e = this[e] | this[e + 1] << 8; return 32768 & e ? 4294901760 | e : e }, rc.prototype.readInt16BE = function (e, t) { t || vc(e, 2, this.length); e = this[e + 1] | this[e] << 8; return 32768 & e ? 4294901760 | e : e }, rc.prototype.readInt32LE = function (e, t) { return t || vc(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24 }, rc.prototype.readInt32BE = function (e, t) { return t || vc(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3] }, rc.prototype.readFloatLE = function (e, t) { return t || vc(e, 4, this.length), Ku(this, e, !0, 23, 4) }, rc.prototype.readFloatBE = function (e, t) { return t || vc(e, 4, this.length), Ku(this, e, !1, 23, 4) }, rc.prototype.readDoubleLE = function (e, t) { return t || vc(e, 8, this.length), Ku(this, e, !0, 52, 8) }, rc.prototype.readDoubleBE = function (e, t) { return t || vc(e, 8, this.length), Ku(this, e, !1, 52, 8) }, rc.prototype.writeUIntLE = function (e, t, r, n) { e = +e, t |= 0, r |= 0, n || bc(this, e, t, r, Math.pow(2, 8 * r) - 1, 0); let i = 1; let o = 0; for (this[t] = 255 & e; ++o < r && (i *= 256);) { this[t + o] = e / i & 255 } return t + r }, rc.prototype.writeUIntBE = function (e, t, r, n) { e = +e, t |= 0, r |= 0, n || bc(this, e, t, r, Math.pow(2, 8 * r) - 1, 0); let i = r - 1; let o = 1; for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) { this[t + i] = e / o & 255 } return t + r }, rc.prototype.writeUInt8 = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 1, 255, 0), rc.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1 }, rc.prototype.writeUInt16LE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 2, 65535, 0), rc.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : wc(this, e, t, !0), t + 2 }, rc.prototype.writeUInt16BE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 2, 65535, 0), rc.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : wc(this, e, t, !1), t + 2 }, rc.prototype.writeUInt32LE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 4, 4294967295, 0), rc.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : Ec(this, e, t, !0), t + 4 }, rc.prototype.writeUInt32BE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 4, 4294967295, 0), rc.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : Ec(this, e, t, !1), t + 4 }, rc.prototype.writeIntLE = function (e, t, r, n) { e = +e, t |= 0, n || bc(this, e, t, r, (n = Math.pow(2, 8 * r - 1)) - 1, -n); let i = 0; let o = 1; let a = 0; for (this[t] = 255 & e; ++i < r && (o *= 256);) { e < 0 && a === 0 && this[t + i - 1] !== 0 && (a = 1), this[t + i] = (e / o >> 0) - a & 255 } return t + r }, rc.prototype.writeIntBE = function (e, t, r, n) { e = +e, t |= 0, n || bc(this, e, t, r, (n = Math.pow(2, 8 * r - 1)) - 1, -n); let i = r - 1; let o = 1; let a = 0; for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) { e < 0 && a === 0 && this[t + i + 1] !== 0 && (a = 1), this[t + i] = (e / o >> 0) - a & 255 } return t + r }, rc.prototype.writeInt8 = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 1, 127, -128), rc.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1 }, rc.prototype.writeInt16LE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 2, 32767, -32768), rc.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : wc(this, e, t, !0), t + 2 }, rc.prototype.writeInt16BE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 2, 32767, -32768), rc.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : wc(this, e, t, !1), t + 2 }, rc.prototype.writeInt32LE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 4, 2147483647, -2147483648), rc.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : Ec(this, e, t, !0), t + 4 }, rc.prototype.writeInt32BE = function (e, t, r) { return e = +e, t |= 0, r || bc(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), rc.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : Ec(this, e, t, !1), t + 4 }, rc.prototype.writeFloatLE = function (e, t, r) { return Ac(this, e, t, !0, r) }, rc.prototype.writeFloatBE = function (e, t, r) { return Ac(this, e, t, !1, r) }, rc.prototype.writeDoubleLE = function (e, t, r) { return _c(this, e, t, !0, r) }, rc.prototype.writeDoubleBE = function (e, t, r) { return _c(this, e, t, !1, r) }, rc.prototype.copy = function (e, t, r, n) { if (r = r || 0, n || n === 0 || (n = this.length), t >= e.length && (t = e.length), t = t || 0, n > 0 && n < r && (n = r), n === r) { return 0 } if (e.length === 0 || this.length === 0) { return 0 } if (t < 0) { throw new RangeError('targetStart out of bounds') } if (r < 0 || r >= this.length) { throw new RangeError('sourceStart out of bounds') } if (n < 0) { throw new RangeError('sourceEnd out of bounds') } n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r); let i; const o = n - r; if (this === e && r < t && t < n) { for (i = o - 1; i >= 0; --i) { e[i + t] = this[i + r] } } else if (o < 1e3 || !rc.TYPED_ARRAY_SUPPORT) { for (i = 0; i < o; ++i) { e[i + t] = this[i + r] } } else { Uint8Array.prototype.set.call(e, this.subarray(r, r + o), t) } return o }, rc.prototype.fill = function (e, t, r, n) { if (typeof e === 'string') { let i; if (typeof t === 'string' ? (n = t, t = 0, r = this.length) : typeof r === 'string' && (n = r, r = this.length), e.length !== 1 || (i = e.charCodeAt(0)) < 256 && (e = i), void 0 !== n && typeof n !== 'string') { throw new TypeError('encoding must be a string') } if (typeof n === 'string' && !rc.isEncoding(n)) { throw new TypeError('Unknown encoding: ' + n) } } else { typeof e === 'number' && (e &= 255) } if (t < 0 || this.length < t || this.length < r) { throw new RangeError('Out of range index') } if (r <= t) { return this } if (t >>>= 0, r = void 0 === r ? this.length : r >>> 0, typeof (e = e || 0) === 'number') { for (s = t; s < r; ++s) { this[s] = e } } else { for (var o = uc(e) ? e : xc(new rc(e, n).toString()), a = o.length, s = 0; s < r - t; ++s) { this[s + t] = o[s % a] } } return this }; const Sc = /[^+\/0-9A-Za-z-_]/g; function xc (e, t) { let r; t = t || 1 / 0; for (var n = e.length, i = null, o = [], a = 0; a < n; ++a) { if ((r = e.charCodeAt(a)) > 55295 && r < 57344) { if (!i) { if (r > 56319) { (t -= 3) > -1 && o.push(239, 191, 189); continue } if (a + 1 === n) { (t -= 3) > -1 && o.push(239, 191, 189); continue }i = r; continue } if (r < 56320) { (t -= 3) > -1 && o.push(239, 191, 189), i = r; continue }r = 65536 + (i - 55296 << 10 | r - 56320) } else { i && (t -= 3) > -1 && o.push(239, 191, 189) } if (i = null, r < 128) { if (--t < 0) { break } o.push(r) } else if (r < 2048) { if ((t -= 2) < 0) { break } o.push(r >> 6 | 192, 63 & r | 128) } else if (r < 65536) { if ((t -= 3) < 0) { break } o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128) } else { if (!(r < 1114112)) { throw new Error('Invalid code point') } if ((t -= 4) < 0) { break } o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128) } } return o } function Rc (e) { return (function (e) { let t, r, n, i; Yu || Wu(); const o = e.length; if (o % 4 > 0) { throw new Error('Invalid string. Length must be a multiple of 4') } n = e[o - 2] === '=' ? 2 : e[o - 1] === '=' ? 1 : 0, i = new zu(3 * o / 4 - n), t = n > 0 ? o - 4 : o; for (var a = 0, s = 0; s < t; s += 4, 0) { r = Hu[e.charCodeAt(s)] << 18 | Hu[e.charCodeAt(s + 1)] << 12 | Hu[e.charCodeAt(s + 2)] << 6 | Hu[e.charCodeAt(s + 3)], i[a++] = r >> 16 & 255, i[a++] = r >> 8 & 255, i[a++] = 255 & r } return n == 2 ? (r = Hu[e.charCodeAt(s)] << 2 | Hu[e.charCodeAt(s + 1)] >> 4, i[a++] = 255 & r) : n == 1 && (r = Hu[e.charCodeAt(s)] << 10 | Hu[e.charCodeAt(s + 1)] << 4 | Hu[e.charCodeAt(s + 2)] >> 2, i[a++] = r >> 8 & 255, i[a++] = 255 & r), i }(function (e) { let t; if ((e = ((t = e).trim ? t.trim() : t.replace(/^\s+|\s+$/g, '')).replace(Sc, '')).length < 2) { return '' } for (;e.length % 4 != 0;) { e += '=' } return e }(e))) } function Nc (e, t, r, n) { for (var i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i) { t[i + r] = e[i] } return i } function Dc (e) { return !!e.constructor && typeof e.constructor.isBuffer === 'function' && e.constructor.isBuffer(e) } function Lc () { this.head = null, this.tail = null, this.length = 0 }Lc.prototype.push = function (e) { e = { data: e, next: null }; this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length }, Lc.prototype.unshift = function (e) { e = { data: e, next: this.head }; this.length === 0 && (this.tail = e), this.head = e, ++this.length }, Lc.prototype.shift = function () { if (this.length !== 0) { const e = this.head.data; return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e } }, Lc.prototype.clear = function () { this.head = this.tail = null, this.length = 0 }, Lc.prototype.join = function (e) { if (this.length === 0) { return '' } for (var t = this.head, r = '' + t.data; t = t.next;) { r += e + t.data } return r }, Lc.prototype.concat = function (e) { if (this.length === 0) { return rc.alloc(0) } if (this.length === 1) { return this.head.data } for (var t = rc.allocUnsafe(e >>> 0), r = this.head, n = 0; r;) { r.data.copy(t, n), n += r.data.length, r = r.next } return t }; const kc = rc.isEncoding || function (e) { switch (e && e.toLowerCase()) { case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':return !0; default:return !1 } }; function Oc (e) { switch (this.encoding = (e || 'utf8').toLowerCase().replace(/[-_]/, ''), (function (e) { if (e && !kc(e)) { throw new Error('Unknown encoding: ' + e) } }(e)), this.encoding) { case 'utf8':this.surrogateSize = 3; break; case 'ucs2':case 'utf16le':this.surrogateSize = 2, this.detectIncompleteChar = Ic; break; case 'base64':this.surrogateSize = 3, this.detectIncompleteChar = Pc; break; default:return void (this.write = Cc) } this.charBuffer = new rc(6), this.charReceived = 0, this.charLength = 0 } function Cc (e) { return e.toString(this.encoding) } function Ic (e) { this.charReceived = e.length % 2, this.charLength = this.charReceived ? 2 : 0 } function Pc (e) { this.charReceived = e.length % 3, this.charLength = this.charReceived ? 3 : 0 }Oc.prototype.write = function (e) { for (var t = ''; this.charLength;) { const r = e.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : e.length; if (e.copy(this.charBuffer, this.charReceived, 0, r), this.charReceived += r, this.charReceived < this.charLength) { return '' } if (e = e.slice(r, e.length), !((i = (t = this.charBuffer.slice(0, this.charLength).toString(this.encoding)).charCodeAt(t.length - 1)) >= 55296 && i <= 56319)) { if ((this.charReceived = this.charLength = 0) === e.length) { return t } break } this.charLength += this.surrogateSize, t = '' } this.detectIncompleteChar(e); var n = e.length; this.charLength && (e.copy(this.charBuffer, 0, e.length - this.charReceived, n), n -= this.charReceived); let i; var n = (t += e.toString(this.encoding, 0, n)).length - 1; if ((i = t.charCodeAt(n)) >= 55296 && i <= 56319) { const o = this.surrogateSize; return this.charLength += o, this.charReceived += o, this.charBuffer.copy(this.charBuffer, o, 0, o), e.copy(this.charBuffer, 0, 0, o), t.substring(0, n) } return t }, Oc.prototype.detectIncompleteChar = function (e) { for (var t = e.length >= 3 ? 3 : e.length; t > 0; t--) { const r = e[e.length - t]; if (t == 1 && r >> 5 == 6) { this.charLength = 2; break } if (t <= 2 && r >> 4 == 14) { this.charLength = 3; break } if (t <= 3 && r >> 3 == 30) { this.charLength = 4; break } } this.charReceived = t }, Oc.prototype.end = function (e) { let t; let r; let n = ''; return e && e.length && (n = this.write(e)), this.charReceived && (t = this.charReceived, r = this.charBuffer, e = this.encoding, n += r.slice(0, t).toString(e)), n }, Fc.ReadableState = Uc; const qc = bu('stream'); function Uc (e, t) { e = e || {}, this.objectMode = !!e.objectMode, t instanceof hl && (this.objectMode = this.objectMode || !!e.readableObjectMode); const r = e.highWaterMark; var t = this.objectMode ? 16 : 16384; this.highWaterMark = r || r === 0 ? r : t, this.highWaterMark = ~~this.highWaterMark, this.buffer = new Lc(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.defaultEncoding = e.defaultEncoding || 'utf8', this.ranOut = !1, this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, e.encoding && (this.decoder = new Oc(e.encoding), this.encoding = e.encoding) } function Fc (e) { if (!(this instanceof Fc)) { return new Fc(e) } this._readableState = new Uc(e, this), this.readable = !0, e && typeof e.read === 'function' && (this._read = e.read), pr.call(this) } function Bc (e, t, r, n, i) { let o; let a; const s = (function (e, t) { let r = null; Xs(t) || typeof t === 'string' || t == null || e.objectMode || (r = new TypeError('Invalid non-string/buffer chunk')); return r }(t, r)); return s ? e.emit('error', s) : r === null ? (t.reading = !1, (function (e, t) { if (t.ended) { return } { let r; !t.decoder || (r = t.decoder.end()) && r.length && (t.buffer.push(r), t.length += t.objectMode ? 1 : r.length) }t.ended = !0, Vc(e) }(e, t))) : t.objectMode || r && r.length > 0 ? t.ended && !i ? (o = new Error('stream.push() after EOF'), e.emit('error', o)) : t.endEmitted && i ? (o = new Error('stream.unshift() after end event'), e.emit('error', o)) : (!t.decoder || i || n || (r = t.decoder.write(r), a = !t.objectMode && r.length === 0), i || (t.reading = !1), a || (t.flowing && t.length === 0 && !t.sync ? (e.emit('data', r), e.read(0)) : (t.length += t.objectMode ? 1 : r.length, i ? t.buffer.unshift(r) : t.buffer.push(r), t.needReadable && Vc(e))), r = e, (e = t).readingMore || (e.readingMore = !0, hu(Hc, r, e))) : i || (t.reading = !1), !(t = t).ended && (t.needReadable || t.length < t.highWaterMark || t.length === 0) }Ii(Fc, pr), Fc.prototype.push = function (e, t) { const r = this._readableState; return r.objectMode || typeof e !== 'string' || (t = t || r.defaultEncoding) !== r.encoding && (e = xs.from(e, t), t = ''), Bc(this, r, e, t, !1) }, Fc.prototype.unshift = function (e) { return Bc(this, this._readableState, e, '', !0) }, Fc.prototype.isPaused = function () { return !1 === this._readableState.flowing }, Fc.prototype.setEncoding = function (e) { return this._readableState.decoder = new Oc(e), this._readableState.encoding = e, this }; const jc = 8388608; function Mc (e, t) { return e <= 0 || t.length === 0 && t.ended ? 0 : t.objectMode ? 1 : e != e ? (t.flowing && t.length ? t.buffer.head.data : t).length : (e > t.highWaterMark && (t.highWaterMark = (jc <= (r = e) ? r = jc : (r--, r |= r >>> 1, r |= r >>> 2, r |= r >>> 4, r |= r >>> 8, r |= r >>> 16, r++), r)), e <= t.length ? e : t.ended ? t.length : (t.needReadable = !0, 0)); let r } function Vc (e) { const t = e._readableState; t.needReadable = !1, t.emittedReadable || (qc('emitReadable', t.flowing), t.emittedReadable = !0, t.sync ? hu(Gc, e) : Gc(e)) } function Gc (e) { qc('emit readable'), e.emit('readable'), Wc(e) } function Hc (e, t) { for (let r = t.length; !t.reading && !t.flowing && !t.ended && t.length < t.highWaterMark && (qc('maybeReadMore read 0'), e.read(0), r !== t.length);) { r = t.length }t.readingMore = !1 } function zc (e) { qc('readable nexttick read 0'), e.read(0) } function Yc (e, t) { t.reading || (qc('resume read 0'), e.read(0)), t.resumeScheduled = !1, t.awaitDrain = 0, e.emit('resume'), Wc(e), t.flowing && !t.reading && e.read(0) } function Wc (e) { const t = e._readableState; for (qc('flow', t.flowing); t.flowing && e.read() !== null;) { } } function $c (e, t) { return t.length === 0 ? null : (t.objectMode ? r = t.buffer.shift() : !e || e >= t.length ? (r = t.decoder ? t.buffer.join('') : t.buffer.length === 1 ? t.buffer.head.data : t.buffer.concat(t.length), t.buffer.clear()) : r = (function (e, t, r) { let n; e < t.head.data.length ? (n = t.head.data.slice(0, e), t.head.data = t.head.data.slice(e)) : n = e === t.head.data.length ? t.shift() : (r ? function (e, t) { let r = t.head; let n = 1; let i = r.data; e -= i.length; for (;r = r.next;) { const o = r.data; const a = e > o.length ? o.length : e; if (a === o.length ? i += o : i += o.slice(0, e), (e -= a) === 0) { a === o.length ? (++n, r.next ? t.head = r.next : t.head = t.tail = null) : (t.head = r).data = o.slice(a); break }++n } return t.length -= n, i } : function (e, t) { const r = xs.allocUnsafe(e); let n = t.head; let i = 1; n.data.copy(r), e -= n.data.length; for (;n = n.next;) { const o = n.data; const a = e > o.length ? o.length : e; if (o.copy(r, r.length - e, 0, a), (e -= a) === 0) { a === o.length ? (++i, n.next ? t.head = n.next : t.head = t.tail = null) : (t.head = n).data = o.slice(a); break }++i } return t.length -= i, r })(e, t); return n }(e, t.buffer, t.decoder)), r); let r } function Jc (e) { const t = e._readableState; if (t.length > 0) { throw new Error('"endReadable()" called on non-empty stream') } t.endEmitted || (t.ended = !0, hu(Kc, t, e)) } function Kc (e, t) { e.endEmitted || e.length !== 0 || (e.endEmitted = !0, t.readable = !1, t.emit('end')) } function Qc (e, t) { for (let r = 0, n = e.length; r < n; r++) { if (e[r] === t) { return r } } return -1 } function Zc () {} function Xc (e, t, r) { this.chunk = e, this.encoding = t, this.callback = r, this.next = null } function el (e, o) { Object.defineProperty(this, 'buffer', { get: yu(function () { return this.getBuffer() }, '_writableState.buffer is deprecated. Use _writableState.getBuffer instead.') }), e = e || {}, this.objectMode = !!e.objectMode, o instanceof hl && (this.objectMode = this.objectMode || !!e.writableObjectMode); const t = e.highWaterMark; let r = this.objectMode ? 16 : 16384; this.highWaterMark = t || t === 0 ? t : r, this.highWaterMark = ~~this.highWaterMark, this.needDrain = !1, this.ending = !1, this.ended = !1; r = (this.finished = !1) === e.decodeStrings; this.decodeStrings = !r, this.defaultEncoding = e.defaultEncoding || 'utf8', this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (e) { let t, r, n, i; r = e, n = (t = o)._writableState, i = n.sync, e = n.writecb, (function (e) { e.writing = !1, e.writecb = null, e.length -= e.writelen, e.writelen = 0 }(n)), r ? (function (e, t, r, n, i) { --t.pendingcb, r ? hu(i, n) : i(n); e._writableState.errorEmitted = !0, e.emit('error', n) }(t, n, i, r, e)) : ((r = ol(n)) || n.corked || n.bufferProcessing || !n.bufferedRequest || il(t, n), i ? hu(nl, t, n, r, e) : nl(t, n, r, e)) }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new ul(this) } function tl (e) { if (!(this instanceof tl || this instanceof hl)) { return new tl(e) } this._writableState = new el(e, this), this.writable = !0, e && (typeof e.write === 'function' && (this._write = e.write), typeof e.writev === 'function' && (this._writev = e.writev)), pr.call(this) } function rl (e, t, r, n, i, o, a) { t.writelen = n, t.writecb = a, t.writing = !0, t.sync = !0, r ? e._writev(i, t.onwrite) : e._write(i, o, t.onwrite), t.sync = !1 } function nl (e, t, r, n) { let i; r || (i = e, (r = t).length === 0 && r.needDrain && (r.needDrain = !1, i.emit('drain'))), t.pendingcb--, n(), sl(e, t) } function il (e, t) { t.bufferProcessing = !0; let r = t.bufferedRequest; if (e._writev && r && r.next) { var n = t.bufferedRequestCount; const i = new Array(n); var n = t.corkedRequestsFree; n.entry = r; for (let o = 0; r;) { r = (i[o] = r).next, o += 1 }rl(e, t, !0, t.length, i, '', n.finish), t.pendingcb++, t.lastBufferedRequest = null, n.next ? (t.corkedRequestsFree = n.next, n.next = null) : t.corkedRequestsFree = new ul(t) } else { for (;r;) { const a = r.chunk; const s = r.encoding; const u = r.callback; if (rl(e, t, !1, t.objectMode ? 1 : a.length, a, s, u), r = r.next, t.writing) { break } }r === null && (t.lastBufferedRequest = null) }t.bufferedRequestCount = 0, t.bufferedRequest = r, t.bufferProcessing = !1 } function ol (e) { return e.ending && e.length === 0 && e.bufferedRequest === null && !e.finished && !e.writing } function al (e, t) { t.prefinished || (t.prefinished = !0, e.emit('prefinish')) } function sl (e, t) { const r = ol(t); return r && (t.pendingcb === 0 ? (al(e, t), t.finished = !0, e.emit('finish')) : al(e, t)), r } function ul (n) { const i = this; this.next = null, this.entry = null, this.finish = function (e) { let t = i.entry; for (i.entry = null; t;) { const r = t.callback; n.pendingcb--, r(e), t = t.next }n.corkedRequestsFree ? n.corkedRequestsFree.next = i : n.corkedRequestsFree = i } }Fc.prototype.read = function (e) { qc('read', e), e = parseInt(e, 10); const t = this._readableState; const r = e; if (e !== 0 && (t.emittedReadable = !1), e === 0 && t.needReadable && (t.length >= t.highWaterMark || t.ended)) { return qc('read: emitReadable', t.length, t.ended), (t.length === 0 && t.ended ? Jc : Vc)(this), null } if ((e = Mc(e, t)) === 0 && t.ended) { return t.length === 0 && Jc(this), null } let n = t.needReadable; return qc('need readable', n), (t.length === 0 || t.length - e < t.highWaterMark) && qc('length less than watermark', n = !0), t.ended || t.reading ? qc('reading or ended', n = !1) : n && (qc('do read'), t.reading = !0, t.sync = !0, t.length === 0 && (t.needReadable = !0), this._read(t.highWaterMark), t.sync = !1, t.reading || (e = Mc(r, t))), (n = e > 0 ? $c(e, t) : null) === null ? (t.needReadable = !0, e = 0) : t.length -= e, t.length === 0 && (t.ended || (t.needReadable = !0), r !== e && t.ended && Jc(this)), n !== null && this.emit('data', n), n }, Fc.prototype._read = function (e) { this.emit('error', new Error('not implemented')) }, Fc.prototype.pipe = function (r, e) { const t = this; const n = this._readableState; switch (n.pipesCount) { case 0:n.pipes = r; break; case 1:n.pipes = [n.pipes, r]; break; default:n.pipes.push(r) }n.pipesCount += 1, qc('pipe count=%d opts=%j', n.pipesCount, e); e = !e || !1 !== e.end ? o : c; function i (e) { qc('onunpipe'), e === t && c() } function o () { qc('onend'), r.end() }n.endEmitted ? hu(e) : t.once('end', e), r.on('unpipe', i); let a; const s = (a = t, function () { const e = a._readableState; qc('pipeOnDrain', e.awaitDrain), e.awaitDrain && e.awaitDrain--, e.awaitDrain === 0 && a.listeners('data').length && (e.flowing = !0, Wc(a)) }); r.on('drain', s); let u = !1; function c () { qc('cleanup'), r.removeListener('close', p), r.removeListener('finish', d), r.removeListener('drain', s), r.removeListener('error', h), r.removeListener('unpipe', i), t.removeListener('end', o), t.removeListener('end', c), t.removeListener('data', f), u = !0, !n.awaitDrain || r._writableState && !r._writableState.needDrain || s() } let l = !1; function f (e) { qc('ondata'), (l = !1) !== r.write(e) || l || ((n.pipesCount === 1 && n.pipes === r || n.pipesCount > 1 && Qc(n.pipes, r) !== -1) && !u && (qc('false write response, pause', t._readableState.awaitDrain), t._readableState.awaitDrain++, l = !0), t.pause()) } function h (e) { let t; qc('onerror', e), g(), r.removeListener('error', h), (t = 'error', r.listeners(t).length) === 0 && r.emit('error', e) } function p () { r.removeListener('finish', d), g() } function d () { qc('onfinish'), r.removeListener('close', p), g() } function g () { qc('unpipe'), t.unpipe(r) } return t.on('data', f), (function (e, t, r) { if (typeof e.prependListener === 'function') { return e.prependListener(t, r) } e._events && e._events[t] ? Array.isArray(e._events[t]) ? e._events[t].unshift(r) : e._events[t] = [r, e._events[t]] : e.on(t, r) }(r, 'error', h)), r.once('close', p), r.once('finish', d), r.emit('pipe', t), n.flowing || (qc('pipe resume'), t.resume()), r }, Fc.prototype.unpipe = function (e) { const t = this._readableState; if (t.pipesCount === 0) { return this } if (t.pipesCount === 1) { return e && e !== t.pipes || (e = e || t.pipes, t.pipes = null, t.pipesCount = 0, t.flowing = !1, e && e.emit('unpipe', this)), this } if (!e) { const r = t.pipes; const n = t.pipesCount; t.pipes = null, t.pipesCount = 0, t.flowing = !1; for (let i = 0; i < n; i++) { r[i].emit('unpipe', this) } return this } const o = Qc(t.pipes, e); return o === -1 || (t.pipes.splice(o, 1), --t.pipesCount, t.pipesCount === 1 && (t.pipes = t.pipes[0]), e.emit('unpipe', this)), this }, Fc.prototype.addListener = Fc.prototype.on = function (e, t) { t = pr.prototype.on.call(this, e, t); return e === 'data' ? !1 !== this._readableState.flowing && this.resume() : e === 'readable' && ((e = this._readableState).endEmitted || e.readableListening || (e.readableListening = e.needReadable = !0, e.emittedReadable = !1, e.reading ? e.length && Vc(this) : hu(zc, this))), t }, Fc.prototype.resume = function () { let e; let t = this._readableState; return t.flowing || (qc('resume'), t.flowing = !0, e = this, (t = t).resumeScheduled || (t.resumeScheduled = !0, hu(Yc, e, t))), this }, Fc.prototype.pause = function () { return qc('call pause flowing=%j', this._readableState.flowing), !1 !== this._readableState.flowing && (qc('pause'), this._readableState.flowing = !1, this.emit('pause')), this }, Fc.prototype.wrap = function (t) { let e; const r = this._readableState; let n = !1; const i = this; for (e in t.on('end', function () { let e; qc('wrapped end'), !r.decoder || r.ended || (e = r.decoder.end()) && e.length && i.push(e), i.push(null) }), t.on('data', function (e) { qc('wrapped data'), r.decoder && (e = r.decoder.write(e)), r.objectMode && e == null || (r.objectMode || e && e.length) && (i.push(e) || (n = !0, t.pause())) }), t) { void 0 === this[e] && typeof t[e] === 'function' && (this[e] = (function (e) { return function () { return t[e].apply(t, arguments) } }(e))) } return (function (e, t) { for (let r = 0, n = e.length; r < n; r++) { t(e[r], r) } }(['error', 'close', 'destroy', 'pause', 'resume'], function (e) { t.on(e, i.emit.bind(i, e)) })), i._read = function (e) { qc('wrapped _read', e), n && (n = !1, t.resume()) }, i }, Fc._fromList = $c, tl.WritableState = el, Ii(tl, pr), el.prototype.getBuffer = function () { for (var e = this.bufferedRequest, t = []; e;) { t.push(e), e = e.next } return t }, tl.prototype.pipe = function () { this.emit('error', new Error('Cannot pipe, not readable')) }, tl.prototype.write = function (e, t, r) { let n; let i; let o; let a; let s; let u; const c = this._writableState; let l = !1; return typeof t === 'function' && (r = t, t = null), t = rc.isBuffer(e) ? 'buffer' : t || c.defaultEncoding, typeof r !== 'function' && (r = Zc), c.ended ? (a = this, s = r, u = new Error('write after end'), a.emit('error', u), hu(s, u)) : (n = this, i = c, o = r, s = !(a = !0), (u = e) === null ? s = new TypeError('May not write null values to stream') : rc.isBuffer(u) || typeof u === 'string' || void 0 === u || i.objectMode || (s = new TypeError('Invalid non-string/buffer chunk')), s && (n.emit('error', s), hu(o, s), a = !1), a && (c.pendingcb++, l = (function (e, t, r, n, i) { r = (function (e, t, r) { e.objectMode || !1 === e.decodeStrings || typeof t !== 'string' || (t = rc.from(t, r)); return t }(t, r, n)), rc.isBuffer(r) && (n = 'buffer'); const o = t.objectMode ? 1 : r.length; t.length += o; const a = t.length < t.highWaterMark; a || (t.needDrain = !0); { let s; t.writing || t.corked ? (s = t.lastBufferedRequest, t.lastBufferedRequest = new Xc(r, n, i), s ? s.next = t.lastBufferedRequest : t.bufferedRequest = t.lastBufferedRequest, t.bufferedRequestCount += 1) : rl(e, t, !1, o, r, n, i) } return a }(this, c, e, t, r)))), l }, tl.prototype.cork = function () { this._writableState.corked++ }, tl.prototype.uncork = function () { const e = this._writableState; e.corked && (e.corked--, e.writing || e.corked || e.finished || e.bufferProcessing || !e.bufferedRequest || il(this, e)) }, tl.prototype.setDefaultEncoding = function (e) { if (typeof e === 'string' && (e = e.toLowerCase()), !(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((e + '').toLowerCase()) > -1)) { throw new TypeError('Unknown encoding: ' + e) } return this._writableState.defaultEncoding = e, this }, tl.prototype._write = function (e, t, r) { r(new Error('not implemented')) }, tl.prototype._writev = null, tl.prototype.end = function (e, t, r) { const n = this._writableState; typeof e === 'function' ? (r = e, t = e = null) : typeof t === 'function' && (r = t, t = null), e != null && this.write(e, t), n.corked && (n.corked = 1, this.uncork()), n.ending || n.finished || (function (e, t, r) { t.ending = !0, sl(e, t), r && (t.finished ? hu(r) : e.once('finish', r)); t.ended = !0, e.writable = !1 }(this, n, r)) }, Ii(hl, Fc); for (let cl = Object.keys(tl.prototype), ll = 0; ll < cl.length; ll++) { const fl = cl[ll]; hl.prototype[fl] || (hl.prototype[fl] = tl.prototype[fl]) } function hl (e) { if (!(this instanceof hl)) { return new hl(e) } Fc.call(this, e), tl.call(this, e), e && !1 === e.readable && (this.readable = !1), e && !1 === e.writable && (this.writable = !1), this.allowHalfOpen = !0, e && !1 === e.allowHalfOpen && (this.allowHalfOpen = !1), this.once('end', pl) } function pl () { this.allowHalfOpen || this._writableState.ended || hu(dl, this) } function dl (e) { e.end() } function gl (r) { this.afterTransform = function (e, t) { return (function (e, t, r) { const n = e._transformState; n.transforming = !1; const i = n.writecb; if (!i) { return e.emit('error', new Error('no writecb in Transform class')) } n.writechunk = null, (n.writecb = null) != r && e.push(r); i(t); t = e._readableState; t.reading = !1, (t.needReadable || t.length < t.highWaterMark) && e._read(t.highWaterMark) }(r, e, t)) }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null, this.writeencoding = null } function yl (e) { if (!(this instanceof yl)) { return new yl(e) } hl.call(this, e), this._transformState = new gl(this); const t = this; this._readableState.needReadable = !0, this._readableState.sync = !1, e && (typeof e.transform === 'function' && (this._transform = e.transform), typeof e.flush === 'function' && (this._flush = e.flush)), this.once('prefinish', function () { typeof this._flush === 'function' ? this._flush(function (e) { ml(t, e) }) : ml(t) }) } function ml (e, t) { if (t) { return e.emit('error', t) } const r = e._writableState; var t = e._transformState; if (r.length) { throw new Error('Calling transform done when ws.length != 0') } if (t.transforming) { throw new Error('Calling transform done when still transforming') } return e.push(null) } function vl (e) { if (!(this instanceof vl)) { return new vl(e) } yl.call(this, e) } function bl () { pr.call(this) }Ii(yl, hl), yl.prototype.push = function (e, t) { return this._transformState.needTransform = !1, hl.prototype.push.call(this, e, t) }, yl.prototype._transform = function (e, t, r) { throw new Error('Not implemented') }, yl.prototype._write = function (e, t, r) { const n = this._transformState; n.writecb = r, n.writechunk = e, n.writeencoding = t, n.transforming || (t = this._readableState, (n.needTransform || t.needReadable || t.length < t.highWaterMark) && this._read(t.highWaterMark)) }, yl.prototype._read = function (e) { const t = this._transformState; t.writechunk !== null && t.writecb && !t.transforming ? (t.transforming = !0, this._transform(t.writechunk, t.writeencoding, t.afterTransform)) : t.needTransform = !0 }, Ii(vl, yl), vl.prototype._transform = function (e, t, r) { r(null, e) }, Ii(bl, pr), bl.Readable = Fc, bl.Writable = tl, bl.Duplex = hl, bl.Transform = yl, bl.PassThrough = vl, (bl.Stream = bl).prototype.pipe = function (t, e) { const r = this; function n (e) { t.writable && !1 === t.write(e) && r.pause && r.pause() } function i () { r.readable && r.resume && r.resume() }r.on('data', n), t.on('drain', i), t._isStdio || e && !1 === e.end || (r.on('end', a), r.on('close', s)); let o = !1; function a () { o || (o = !0, t.end()) } function s () { o || (o = !0, typeof t.destroy === 'function' && t.destroy()) } function u (e) { if (c(), pr.listenerCount(this, 'error') === 0) { throw e } } function c () { r.removeListener('data', n), t.removeListener('drain', i), r.removeListener('end', a), r.removeListener('close', s), r.removeListener('error', u), t.removeListener('error', u), r.removeListener('end', c), r.removeListener('close', c), t.removeListener('close', c) } return r.on('error', u), t.on('error', u), r.on('end', c), r.on('close', c), t.on('close', c), t.emit('pipe', r), t }; const wl = bl.Writable; var dt = El; function El (e) { if (!(this instanceof El)) { return new El(e) } e = e || {}, wl.call(this, e), this.label = void 0 !== e.label ? e.label : 'stdout' }(0, Vu.inherits)(El, wl), El.prototype._write = function (e, t, r) { e = e.toString ? e.toString() : e; !1 === this.label ? console.log(e) : console.log(this.label + ':', e), Jt(r) }; function Tl (e) { const t = e.return; return void 0 !== t && S(t.call(e)).value } function Al (e, t) { this.stopped = e, this.result = t } function _l (e, t, r) { function n (e) { return o && Tl(o), new Al(!0, e) } function i (e) { return h ? (S(e), d ? g(e[0], e[1], n) : g(e[0], e[1])) : d ? g(e, n) : g(e) } let o; let a; let s; let u; let c; let l; const f = r && r.that; var h = !(!r || !r.AS_ENTRIES); let p = !(!r || !r.IS_ITERATOR); var d = !(!r || !r.INTERRUPTED); var g = le(t, f, 1 + h + d); if (p) { o = e } else { if (typeof (p = oa(e)) !== 'function') { throw TypeError('Target is not iterable') } if (aa(p)) { for (a = 0, s = ie(e.length); a < s; a++) { if ((u = i(e[a])) && u instanceof Al) { return u } } return new Al(!1) }o = p.call(e) } for (c = o.next; !(l = c.call(o)).done;) { try { u = i(l.value) } catch (e) { throw Tl(o), e } if (typeof u === 'object' && u && u instanceof Al) { return u } } return new Al(!1) } function Sl (e) { let t; Ol.hasOwnProperty(e) && (t = Ol[e], delete Ol[e], t()) } function xl (e) { return function () { Sl(e) } } let Rl; var Ae = C.Promise; var Io = /(iphone|ipod|ipad).*applewebkit/i.test($e); const Nl = C.location; var Zi = C.setImmediate; var n = C.clearImmediate; const Dl = C.process; var Si = C.MessageChannel; const Ll = C.Dispatch; let kl = 0; var Ol = {}; const Cl = 'onreadystatechange'; var i = function (e) { Sl(e.data) }; var Ii = function (e) { C.postMessage(e + '', Nl.protocol + '//' + Nl.host) }; Zi && n || (Zi = function (e) { for (var t = [], r = 1; r < arguments.length;) { t.push(arguments[r++]) } return Ol[++kl] = function () { (typeof e === 'function' ? e : Function(e)).apply(void 0, t) }, Rl(kl), kl }, n = function (e) { delete Ol[e] }, Er ? Rl = function (e) { Dl.nextTick(xl(e)) } : Ll && Ll.now ? Rl = function (e) { Ll.now(xl(e)) } : Si && !Io ? (Vl = (Si = new Si()).port2, Si.port1.onmessage = i, Rl = le(Vl.postMessage, Vl, 1)) : C.addEventListener && typeof postMessage === 'function' && !C.importScripts && Nl && Nl.protocol !== 'file:' && !y(Ii) ? (Rl = Ii, C.addEventListener('message', i, !1)) : Rl = Cl in r('script') ? function (e) { Dr.appendChild(r('script'))[Cl] = function () { Dr.removeChild(this), Sl(e) } } : function (e) { setTimeout(xl(e), 0) }); let Il; let Pl; let ql; let Ul; let Fl; let Bl; let jl; let Ml; var Vl = { set: Zi, clear: n }; var Ii = /web0s(?!.*chrome)/i.test($e); var i = P.f; const Gl = Vl.set; var Zi = C.MutationObserver || C.WebKitMutationObserver; var n = C.document; const Hl = C.process; var $e = C.Promise; var i = i(C, 'queueMicrotask'); var i = i && i.value; i || (Il = function () { let e, t; for (Er && (e = Hl.domain) && e.exit(); Pl;) { t = Pl.fn, Pl = Pl.next; try { t() } catch (e) { throw Pl ? Ul() : ql = void 0, e } }ql = void 0, e && e.enter() }, Ul = Io || Er || Ii || !Zi || !n ? $e && $e.resolve ? (jl = $e.resolve(void 0), Ml = jl.then, function () { Ml.call(jl, Il) }) : Er ? function () { Hl.nextTick(Il) } : function () { Gl.call(C, Il) } : (Fl = !0, Bl = n.createTextNode(''), new Zi(Il).observe(Bl, { characterData: !0 }), function () { Bl.data = Fl = !Fl })); function zl (e) { let r, n; this.promise = new e(function (e, t) { if (void 0 !== r || void 0 !== n) { throw TypeError('Bad Promise constructor') } r = e, n = t }), this.resolve = ce(r), this.reject = ce(n) } function Yl (e, t) { return S(e), L(t) && t.constructor === e ? t : ((0, (e = of.f(e)).resolve)(t), e.promise) } function Wl (e) { try { return { error: !1, value: e() } } catch (e) { return { error: !0, value: e } } } function $l (e) { let t; return !(!L(e) || typeof (t = e.then) !== 'function') && t } function Jl (f, h) { let p; f.notified || (f.notified = !0, p = f.reactions, nf(function () { for (let e = f.value, t = f.state == 1, r = 0; p.length > r;) { var n; var i; var o; const a = p[r++]; const s = t ? a.ok : a.fail; const u = a.resolve; const c = a.reject; const l = a.domain; try { s ? (t || (f.rejection === 2 && _f(f), f.rejection = 1), !0 === s ? n = e : (l && l.enter(), n = s(e), l && (l.exit(), o = !0)), n === a.promise ? c(pf('Promise-chain cycle')) : (i = $l(n)) ? i.call(n, u, c) : u(n)) : c(e) } catch (e) { l && !o && l.exit(), c(e) } }f.reactions = [], f.notified = !1, h && !f.rejection && Tf(f) })) } function Kl (e, t, r) { let n, i; bf ? ((n = df.createEvent('Event')).promise = t, n.reason = r, n.initEvent(e, !1, !0), C.dispatchEvent(n)) : n = { promise: t, reason: r }, !wf && (i = C['on' + e]) ? i(n) : e === Ef && (function (e, t) { const r = C.console; r && r.error && (arguments.length === 1 ? r.error(e) : r.error(e, t)) }('Unhandled promise rejection', r)) } function Ql (t, r, n) { return function (e) { t(r, e, n) } } function Zl (e, t, r) { e.done || (e.done = !0, r && (e = r), e.value = t, e.state = 2, Jl(e, !0)) } let Xl; let ef; let tf; let rf; var nf = i || function (e) { e = { fn: e, next: void 0 }; ql && (ql.next = e), Pl || (Pl = e, Ul()), ql = e }; var of = { f: function (e) { return new zl(e) } }; const af = Vl.set; const sf = he('species'); const uf = 'Promise'; const cf = de.get; const lf = de.set; const ff = de.getterFor(uf); let hf = Ae; var pf = C.TypeError; var df = C.document; const gf = C.process; const yf = re('fetch'); let mf = of.f; const vf = mf; var bf = !!(df && df.createEvent && C.dispatchEvent); var wf = typeof PromiseRejectionEvent === 'function'; var Ef = 'unhandledrejection'; var i = qe(uf, function () { if (!(z(hf) !== String(hf))) { if (Qe === 66) { return !0 } if (!Er && !wf) { return !0 } } if (Qe >= 51 && /native code/.test(hf)) { return !1 } function e (e) { e(function () {}, function () {}) } const t = hf.resolve(1); return (t.constructor = {})[sf] = e, !(t.then(function () {}) instanceof e) }); var Vl = i || !Yo(function (e) { hf.all(e).catch(function () {}) }); var Tf = function (i) { af.call(C, function () { let e; const t = i.facade; const r = i.value; const n = Af(i); if (n && (e = Wl(function () { Er ? gf.emit('unhandledRejection', r, t) : Kl(Ef, t, r) }), i.rejection = Er || Af(i) ? 2 : 1, e.error)) { throw e.value } }) }; var Af = function (e) { return e.rejection !== 1 && !e.parent }; var _f = function (t) { af.call(C, function () { const e = t.facade; Er ? gf.emit('rejectionHandled', e) : Kl('rejectionhandled', e, t.value) }) }; var Sf = function (r, e, t) { if (!r.done) { r.done = !0, t && (r = t); try { if (r.facade === e) { throw pf("Promise can't be resolved itself") } const n = $l(e); n ? nf(function () { const t = { done: !1 }; try { n.call(e, Ql(Sf, t, r), Ql(Zl, t, r)) } catch (e) { Zl(t, e, r) } }) : (r.value = e, r.state = 1, Jl(r, !1)) } catch (e) { Zl({ done: !1 }, e, r) } } }; i && (hf = function (e) { io(this, hf, uf), ce(e), Xl.call(this); const t = cf(this); try { e(Ql(Sf, t), Ql(Zl, t)) } catch (e) { Zl(t, e) } }, (Xl = function () { lf(this, { type: uf, done: !1, notified: !1, parent: !1, reactions: [], rejection: !1, state: 0, value: void 0 }) }).prototype = no(hf.prototype, { then: function (e, t) { const r = ff(this); const n = mf(Sn(this, hf)); return n.ok = typeof e !== 'function' || e, n.fail = typeof t === 'function' && t, n.domain = Er ? gf.domain : void 0, r.parent = !0, r.reactions.push(n), r.state != 0 && Jl(r, !1), n.promise }, catch: function (e) { return this.then(void 0, e) } }), ef = function () { const e = new Xl(); const t = cf(e); this.promise = e, this.resolve = Ql(Sf, t), this.reject = Ql(Zl, t) }, of.f = mf = function (e) { return e === hf || e === tf ? new ef() : vf(e) }, typeof Ae === 'function' && (rf = Ae.prototype.then, ge(Ae.prototype, 'then', function (e, t) { const r = this; return new hf(function (e, t) { rf.call(r, e, t) }).then(e, t) }, { unsafe: !0 }), typeof yf === 'function' && ue({ global: !0, enumerable: !0, forced: !0 }, { fetch: function () { return Yl(hf, yf.apply(C, arguments)) } }))), ue({ global: !0, wrap: !0, forced: i }, { Promise: hf }), Hn(hf, uf, !1), tn(uf), tf = re(uf), ue({ target: uf, stat: !0, forced: i }, { reject: function (e) { const t = mf(this); return t.reject.call(void 0, e), t.promise } }), ue({ target: uf, stat: !0, forced: i }, { resolve: function (e) { return Yl(this, e) } }), ue({ target: uf, stat: !0, forced: Vl }, { all: function (e) { const s = this; const t = mf(s); const u = t.resolve; const c = t.reject; const r = Wl(function () { const n = ce(s.resolve); const i = []; let o = 0; let a = 1; _l(e, function (e) { const t = o++; let r = !1; i.push(void 0), a++, n.call(s, e).then(function (e) { r || (r = !0, i[t] = e, --a || u(i)) }, c) }), --a || u(i) }); return r.error && c(r.value), t.promise }, race: function (e) { const r = this; const n = mf(r); const i = n.reject; const t = Wl(function () { const t = ce(r.resolve); _l(e, function (e) { t.call(r, e).then(n.resolve, i) }) }); return t.error && i(t.value), n.promise } }), Gn('asyncIterator'), Gn('iterator'), Gn('toStringTag'), Hn(C.JSON, 'JSON', !0), Hn(Math, 'Math', !0); const xf = ut.charAt; const Rf = 'String Iterator'; const Nf = de.set; const Df = de.getterFor(Rf); Ui(String, 'String', function (e) { Nf(this, { type: Rf, string: String(e), index: 0 }) }, function () { const e = Df(this); const t = e.string; let r = e.index; return r >= t.length ? { value: void 0, done: !0 } : (r = xf(t, r), e.index += r.length, { value: r, done: !1 }) }); let Lf; const kf = he('iterator'); const Of = he('toStringTag'); const Cf = Wi.values; for (Lf in kt) { const If = C[Lf]; const Pf = If && If.prototype; if (Pf) { if (Pf[kf] !== Cf) { try { U(Pf, kf, Cf) } catch (e) { Pf[kf] = Cf } } if (Pf[Of] || U(Pf, Of, Lf), kt[Lf]) { for (const qf in Wi) { if (Pf[qf] !== Wi[qf]) { try { U(Pf, qf, Wi[qf]) } catch (e) { Pf[qf] = Wi[qf] } } } } } }e(function (e) { function o (e, t, r, n) { let i; let o; let a; let s; var t = t && t.prototype instanceof c ? t : c; var t = Object.create(t.prototype); var n = new l(n || []); return t._invoke = (i = e, o = r, a = n, s = g, function (e, t) { if (s === m) { throw new Error('Generator is already running') } if (s === v) { if (e === 'throw') { throw t } return h() } for (a.method = e, a.arg = t; ;) { const r = a.delegate; if (r) { var n = (function e (t, r) { var n = t.iterator[r.method]; if (n === d) { if (r.delegate = null, r.method === 'throw') { if (t.iterator.return && (r.method = 'return', r.arg = d, e(t, r), r.method === 'throw')) { return b } r.method = 'throw', r.arg = new TypeError("The iterator does not provide a 'throw' method") } return b }n = u(n, t.iterator, r.arg); if (n.type === 'throw') { return r.method = 'throw', r.arg = n.arg, r.delegate = null, b } var n = n.arg; if (!n) { return r.method = 'throw', r.arg = new TypeError('iterator result is not an object'), r.delegate = null, b } { if (!n.done) { return n } r[t.resultName] = n.value, r.next = t.nextLoc, r.method !== 'return' && (r.method = 'next', r.arg = d) }r.delegate = null; return b }(r, a)); if (n) { if (n === b) { continue } return n } } if (a.method === 'next') { a.sent = a._sent = a.arg } else if (a.method === 'throw') { if (s === g) { throw s = v, a.arg } a.dispatchException(a.arg) } else { a.method === 'return' && a.abrupt('return', a.arg) } s = m; n = u(i, o, a); if (n.type === 'normal') { if (s = a.done ? v : y, n.arg !== b) { return { value: n.arg, done: a.done } } } else { n.type === 'throw' && (s = v, a.method = 'throw', a.arg = n.arg) } } }), t } function u (e, t, r) { try { return { type: 'normal', arg: e.call(t, r) } } catch (e) { return { type: 'throw', arg: e } } } function c () {} function t () {} function r () {} function n (e) { ['next', 'throw', 'return'].forEach(function (t) { e[t] = function (e) { return this._invoke(t, e) } }) } function a (a) { let t; this._invoke = function (r, n) { function e () { return new Promise(function (e, t) { !(function t (e, r, n, i) { e = u(a[e], a, r); if (e.type !== 'throw') { const o = e.arg; var r = o.value; return r && kn(r) === 'object' && T.call(r, '__await') ? Promise.resolve(r.__await).then(function (e) { t('next', e, n, i) }, function (e) { t('throw', e, n, i) }) : Promise.resolve(r).then(function (e) { o.value = e, n(o) }, i) }i(e.arg) }(r, n, e, t)) }) } return t = t ? t.then(e, e) : e() } } function i (e) { const t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t) } function s (e) { const t = e.completion || {}; t.type = 'normal', delete t.arg, e.completion = t } function l (e) { this.tryEntries = [{ tryLoc: 'root' }], e.forEach(i, this), this.reset(!0) } function f (t) { if (t) { var e = t[_]; if (e) { return e.call(t) } if (typeof t.next === 'function') { return t } if (!isNaN(t.length)) { let r = -1; var e = function e () { for (;++r < t.length;) { if (T.call(t, r)) { return e.value = t[r], e.done = !1, e } } return e.value = d, e.done = !0, e }; return e.next = e } } return { next: h } } function h () { return { value: d, done: !0 } } let p, d, g, y, m, v, b, w, E, T, A, _, S, x, R; p = (function () { return this }()) || Function('return this')(), E = Object.prototype, T = E.hasOwnProperty, A = typeof Symbol === 'function' ? Symbol : {}, _ = A.iterator || '@@iterator', S = A.asyncIterator || '@@asyncIterator', x = A.toStringTag || '@@toStringTag', (R = p.regeneratorRuntime) ? e.exports = R : ((R = p.regeneratorRuntime = e.exports).wrap = o, g = 'suspendedStart', y = 'suspendedYield', m = 'executing', v = 'completed', b = {}, (A = {})[_] = function () { return this }, (p = (p = Object.getPrototypeOf) && p(p(f([])))) && p !== E && T.call(p, _) && (A = p), w = r.prototype = c.prototype = Object.create(A), (t.prototype = w.constructor = r).constructor = t, r[x] = t.displayName = 'GeneratorFunction', R.isGeneratorFunction = function (e) { e = typeof e === 'function' && e.constructor; return !!e && (e === t || (e.displayName || e.name) === 'GeneratorFunction') }, R.mark = function (e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, r) : (e.__proto__ = r, x in e || (e[x] = 'GeneratorFunction')), e.prototype = Object.create(w), e }, R.awrap = function (e) { return { __await: e } }, n(a.prototype), a.prototype[S] = function () { return this }, R.AsyncIterator = a, R.async = function (e, t, r, n) { const i = new a(o(e, t, r, n)); return R.isGeneratorFunction(t) ? i : i.next().then(function (e) { return e.done ? e.value : i.next() }) }, n(w), w[x] = 'Generator', w[_] = function () { return this }, w.toString = function () { return '[object Generator]' }, R.keys = function (r) { let e; const n = []; for (e in r) { n.push(e) } return n.reverse(), function e () { for (;n.length;) { const t = n.pop(); if (t in r) { return e.value = t, e.done = !1, e } } return e.done = !0, e } }, R.values = f, l.prototype = { constructor: l, reset: function (e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = d, this.done = !1, this.delegate = null, this.method = 'next', this.arg = d, this.tryEntries.forEach(s), !e) { for (const t in this) { t.charAt(0) === 't' && T.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = d) } } }, stop: function () { this.done = !0; const e = this.tryEntries[0].completion; if (e.type === 'throw') { throw e.arg } return this.rval }, dispatchException: function (r) { if (this.done) { throw r } const n = this; function e (e, t) { return o.type = 'throw', o.arg = r, n.next = e, t && (n.method = 'next', n.arg = d), !!t } for (let t = this.tryEntries.length - 1; t >= 0; --t) { const i = this.tryEntries[t]; var o = i.completion; if (i.tryLoc === 'root') { return e('end') } if (i.tryLoc <= this.prev) { const a = T.call(i, 'catchLoc'); const s = T.call(i, 'finallyLoc'); if (a && s) { if (this.prev < i.catchLoc) { return e(i.catchLoc, !0) } if (this.prev < i.finallyLoc) { return e(i.finallyLoc) } } else if (a) { if (this.prev < i.catchLoc) { return e(i.catchLoc, !0) } } else { if (!s) { throw new Error('try statement without catch or finally') } if (this.prev < i.finallyLoc) { return e(i.finallyLoc) } } } } }, abrupt: function (e, t) { for (let r = this.tryEntries.length - 1; r >= 0; --r) { const n = this.tryEntries[r]; if (n.tryLoc <= this.prev && T.call(n, 'finallyLoc') && this.prev < n.finallyLoc) { var i = n; break } }i && (e === 'break' || e === 'continue') && i.tryLoc <= t && t <= i.finallyLoc && (i = null); const o = i ? i.completion : {}; return o.type = e, o.arg = t, i ? (this.method = 'next', this.next = i.finallyLoc, b) : this.complete(o) }, complete: function (e, t) { if (e.type === 'throw') { throw e.arg } return e.type === 'break' || e.type === 'continue' ? this.next = e.arg : e.type === 'return' ? (this.rval = this.arg = e.arg, this.method = 'return', this.next = 'end') : e.type === 'normal' && t && (this.next = t), b }, finish: function (e) { for (let t = this.tryEntries.length - 1; t >= 0; --t) { const r = this.tryEntries[t]; if (r.finallyLoc === e) { return this.complete(r.completion, r.afterLoc), s(r), b } } }, catch: function (e) { for (let t = this.tryEntries.length - 1; t >= 0; --t) { const r = this.tryEntries[t]; if (r.tryLoc === e) { var n; const i = r.completion; return i.type === 'throw' && (n = i.arg, s(r)), n } } throw new Error('illegal catch attempt') }, delegateYield: function (e, t, r) { return this.delegate = { iterator: f(e), resultName: t, nextLoc: r }, this.method === 'next' && (this.arg = d), b } }) }); function Uf (e) { if (typeof e !== 'string') { throw new TypeError('Expected a string') } return e.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&').replace(/-/g, '\\x2d') } function Ff (e, t) { for (var r = 0, n = e.length - 1; n >= 0; n--) { const i = e[n]; i === '.' ? e.splice(n, 1) : i === '..' ? (e.splice(n, 1), r++) : r && (e.splice(n, 1), r--) } if (t) { for (;r--;) { e.unshift('..') } } return e } function Bf (e) { return jf.exec(e).slice(1) } var jf = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/; function Mf () { for (var e = '', t = !1, r = arguments.length - 1; r >= -1 && !t; r--) { const n = r >= 0 ? arguments[r] : '/'; if (typeof n !== 'string') { throw new TypeError('Arguments to path.resolve must be strings') } n && (e = n + '/' + e, t = n.charAt(0) === '/') } return (t ? '/' : '') + (e = Ff(zf(e.split('/'), function (e) { return !!e }), !t).join('/')) || '.' } function Vf (e) { const t = Gf(e); const r = Yf(e, -1) === '/'; return (e = Ff(zf(e.split('/'), function (e) { return !!e }), !t).join('/')) || t || (e = '.'), e && r && (e += '/'), (t ? '/' : '') + e } function Gf (e) { return e.charAt(0) === '/' } const Hf = { extname: function (e) { return Bf(e)[3] }, basename: function (e, t) { return e = Bf(e)[2], t && e.substr(-1 * t.length) === t && (e = e.substr(0, e.length - t.length)), e }, dirname: function (e) { var e = (t = Bf(e))[0]; var t = t[1]; return e || t ? e + (t = t && t.substr(0, t.length - 1)) : '.' }, sep: '/', delimiter: ':', relative: function (e, t) { function r (e) { for (var t = 0; t < e.length && e[t] === ''; t++) { } for (var r = e.length - 1; r >= 0 && e[r] === ''; r--) { } return r < t ? [] : e.slice(t, r - t + 1) }e = Mf(e).substr(1), t = Mf(t).substr(1); for (var n = r(e.split('/')), i = r(t.split('/')), o = Math.min(n.length, i.length), a = o, s = 0; s < o; s++) { if (n[s] !== i[s]) { a = s; break } } for (var u = [], s = a; s < n.length; s++) { u.push('..') } return (u = u.concat(i.slice(a))).join('/') }, join: function () { return Vf(zf(Array.prototype.slice.call(arguments, 0), function (e, t) { if (typeof e !== 'string') { throw new TypeError('Arguments to path.join must be strings') } return e }).join('/')) }, isAbsolute: Gf, normalize: Vf, resolve: Mf }; function zf (e, t) { if (e.filter) { return e.filter(t) } for (var r = [], n = 0; n < e.length; n++) { t(e[n], n, e) && r.push(e[n]) } return r } var Yf = 'ab'.substr(-1) === 'b' ? function (e, t, r) { return e.substr(t, r) } : function (e, t, r) { return t < 0 && (t = e.length + t), e.substr(t, r) }; var i = !Yo(function (e) { Array.from(e) }); ue({ target: 'Array', stat: !0, forced: i }, { from: function (e, t, r) { let n; let i; let o; let a; let s; let u; const c = fe(e); const l = typeof this === 'function' ? this : Array; var e = arguments.length; let f = e > 1 ? t : void 0; const h = void 0 !== f; var t = oa(c); let p = 0; if (h && (f = le(f, e > 2 ? r : void 0, 2)), t == null || l == Array && aa(t)) { for (i = new l(n = ie(c.length)); p < n; p++) { u = h ? f(c[p], p) : c[p], st(i, p, u) } } else { for (s = (a = t.call(c)).next, i = new l(); !(o = s.call(a)).done; p++) { u = h ? (function (t, e, r, n) { try { return n ? e(S(r)[0], r[1]) : e(r) } catch (e) { throw Tl(t), e } }(a, f, [o.value, p], !0)) : o.value, st(i, p, u) } } return i.length = p, i } }); function Wf (e, t) { t = t || {}; const r = kn(e); if (r === 'string' && e.length > 0) { return (function (e) { if ((e = String(e)).length > 100) { return } const t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e); if (!t) { return } e = parseFloat(t[1]); switch ((t[2] || 'ms').toLowerCase()) { case 'years':case 'year':case 'yrs':case 'yr':case 'y':return 315576e5 * e; case 'weeks':case 'week':case 'w':return 6048e5 * e; case 'days':case 'day':case 'd':return e * Kf; case 'hours':case 'hour':case 'hrs':case 'hr':case 'h':return e * Jf; case 'minutes':case 'minute':case 'mins':case 'min':case 'm':return 6e4 * e; case 'seconds':case 'second':case 'secs':case 'sec':case 's':return 1e3 * e; case 'milliseconds':case 'millisecond':case 'msecs':case 'msec':case 'ms':return e; default: } }(e)) } if (r === 'number' && isFinite(e)) { return (t.long ? function (e) { const t = Math.abs(e); if (Kf <= t) { return Qf(e, t, Kf, 'day') } if (Jf <= t) { return Qf(e, t, Jf, 'hour') } if (t >= 6e4) { return Qf(e, t, 6e4, 'minute') } if (t >= 1e3) { return Qf(e, t, 1e3, 'second') } return e + ' ms' } : function (e) { const t = Math.abs(e); if (Kf <= t) { return Math.round(e / Kf) + 'd' } if (Jf <= t) { return Math.round(e / Jf) + 'h' } if (t >= 6e4) { return Math.round(e / 6e4) + 'm' } if (t >= 1e3) { return Math.round(e / 1e3) + 's' } return e + 'ms' })(e) } throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(e)) } const $f = e(function (e, t) { !(function (e) { function r () {} function g (e, t, r, n, i) { let o = 0; const a = t.length; let s = 0; let u = 0; for (;o < a; o++) { const c = t[o]; if (!c.removed) { if (!c.added && i) { let l = r.slice(s, s + c.count); l = l.map(function (e, t) { const r = n[u + t]; return r.length > e.length ? r : e }); c.value = e.join(l) } else { c.value = e.join(r.slice(s, s + c.count)) }s += c.count; if (!c.added) { u += c.count } } else { c.value = e.join(n.slice(u, u + c.count)); u += c.count; if (o && t[o - 1].added) { const f = t[o - 1]; t[o - 1] = t[o]; t[o] = f } } } const h = t[a - 1]; if (a > 1 && typeof h.value === 'string' && (h.added || h.removed) && e.equals('', h.value)) { t[a - 2].value += h.value; t.pop() } return t } function y (e) { return { newPos: e.newPos, components: e.components.slice(0) } }r.prototype = { diff: function e (s, u) { let t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; let r = t.callback; if (typeof t === 'function') { r = t; t = {} } this.options = t; const c = this; function l (e) { if (r) { setTimeout(function () { r(undefined, e) }, 0); return true } else { return e } }s = this.castInput(s); u = this.castInput(u); s = this.removeEmpty(this.tokenize(s)); u = this.removeEmpty(this.tokenize(u)); const f = u.length; const h = s.length; let p = 1; const n = f + h; const d = [{ newPos: -1, components: [] }]; const i = this.extractCommon(d[0], u, s, 0); if (d[0].newPos + 1 >= f && i + 1 >= h) { return l([{ value: this.join(u), count: u.length }]) } function o () { for (let e = -1 * p; e <= p; e += 2) { let t = void 0; const r = d[e - 1]; const n = d[e + 1]; let i = (n ? n.newPos : 0) - e; if (r) { d[e - 1] = undefined } const o = r && r.newPos + 1 < f; const a = n && i >= 0 && i < h; if (!o && !a) { d[e] = undefined; continue } if (!o || a && r.newPos < n.newPos) { t = y(n); c.pushComponent(t.components, undefined, true) } else { t = r; t.newPos++; c.pushComponent(t.components, true, undefined) }i = c.extractCommon(t, u, s, e); if (t.newPos + 1 >= f && i + 1 >= h) { return l(g(c, t.components, u, s, c.useLongestToken)) } else { d[e] = t } }p++ } if (r) { (function e () { setTimeout(function () { if (p > n) { return r() } if (!o()) { e() } }, 0) })() } else { while (p <= n) { const a = o(); if (a) { return a } } } }, pushComponent: function e (t, r, n) { const i = t[t.length - 1]; if (i && i.added === r && i.removed === n) { t[t.length - 1] = { count: i.count + 1, added: r, removed: n } } else { t.push({ count: 1, added: r, removed: n }) } }, extractCommon: function e (t, r, n, i) { const o = r.length; const a = n.length; let s = t.newPos; let u = s - i; let c = 0; while (s + 1 < o && u + 1 < a && this.equals(r[s + 1], n[u + 1])) { s++; u++; c++ } if (c) { t.components.push({ count: c }) }t.newPos = s; return u }, equals: function e (t, r) { if (this.options.comparator) { return this.options.comparator(t, r) } else { return t === r || this.options.ignoreCase && t.toLowerCase() === r.toLowerCase() } }, removeEmpty: function e (t) { const r = []; for (let n = 0; n < t.length; n++) { if (t[n]) { r.push(t[n]) } } return r }, castInput: function e (t) { return t }, tokenize: function e (t) { return t.split('') }, join: function e (t) { return t.join('') } }; const n = new r(); function t (e, t, r) { return n.diff(e, t, r) } function i (e, t) { if (typeof e === 'function') { t.callback = e } else if (e) { for (const r in e) { if (e.hasOwnProperty(r)) { t[r] = e[r] } } } return t } const o = /^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/; const a = /\S/; const s = new r(); function u (e, t, r) { r = i(r, { ignoreWhitespace: true }); return s.diff(e, t, r) } function c (e, t, r) { return s.diff(e, t, r) }s.equals = function (e, t) { if (this.options.ignoreCase) { e = e.toLowerCase(); t = t.toLowerCase() } return e === t || this.options.ignoreWhitespace && !a.test(e) && !a.test(t) }, s.tokenize = function (e) { const t = e.split(/([^\S\r\n]+|[()[\]{}'"\r\n]|\b)/); for (let r = 0; r < t.length - 1; r++) { if (!t[r + 1] && t[r + 2] && o.test(t[r]) && o.test(t[r + 2])) { t[r] += t[r + 2]; t.splice(r + 1, 2); r-- } } return t }; const l = new r(); function f (e, t, r) { return l.diff(e, t, r) } function h (e, t, r) { const n = i(r, { ignoreWhitespace: true }); return l.diff(e, t, n) }l.tokenize = function (e) { const t = []; const r = e.split(/(\n|\r\n)/); if (!r[r.length - 1]) { r.pop() } for (let n = 0; n < r.length; n++) { let i = r[n]; if (n % 2 && !this.options.newlineIsToken) { t[t.length - 1] += i } else { if (this.options.ignoreWhitespace) { i = i.trim() }t.push(i) } } return t }; const p = new r(); function d (e, t, r) { return p.diff(e, t, r) }p.tokenize = function (e) { return e.split(/(\S.+?[.!?])(?=\s+|$)/) }; const m = new r(); function v (e, t, r) { return m.diff(e, t, r) } function b (e) { '@babel/helpers - typeof'; if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') { b = function e (t) { return typeof t } } else { b = function e (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t } } return b(e) } function _ (e) { return w(e) || E(e) || T(e) || S() } function w (e) { if (Array.isArray(e)) { return A(e) } } function E (e) { if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(e)) { return Array.from(e) } } function T (e, t) { if (!e) { return } if (typeof e === 'string') { return A(e, t) } let r = Object.prototype.toString.call(e).slice(8, -1); if (r === 'Object' && e.constructor) { r = e.constructor.name } if (r === 'Map' || r === 'Set') { return Array.from(e) } if (r === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) { return A(e, t) } } function A (e, t) { if (t == null || t > e.length) { t = e.length } for (var r = 0, n = new Array(t); r < t; r++) { n[r] = e[r] } return n } function S () { throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') }m.tokenize = function (e) { return e.split(/([{}:;,]|\s+)/) }; const x = Object.prototype.toString; const R = new r(); function N (e, t, r) { return R.diff(e, t, r) } function D (e, t, r, n, i) { t = t || []; r = r || []; if (n) { e = n(i, e) } let o; for (o = 0; o < t.length; o += 1) { if (t[o] === e) { return r[o] } } let a; if (x.call(e) === '[object Array]') { t.push(e); a = new Array(e.length); r.push(a); for (o = 0; o < e.length; o += 1) { a[o] = D(e[o], t, r, n, i) }t.pop(); r.pop(); return a } if (e && e.toJSON) { e = e.toJSON() } if (b(e) === 'object' && e !== null) { t.push(e); a = {}; r.push(a); const s = []; let u; for (u in e) { if (e.hasOwnProperty(u)) { s.push(u) } }s.sort(); for (o = 0; o < s.length; o += 1) { u = s[o]; a[u] = D(e[u], t, r, n, u) }t.pop(); r.pop() } else { a = e } return a }R.useLongestToken = true, R.tokenize = l.tokenize, R.castInput = function (e) { const t = this.options; const r = t.undefinedReplacement; const n = t.stringifyReplacer; const i = n === void 0 ? function (e, t) { return typeof t === 'undefined' ? r : t } : n; return typeof e === 'string' ? e : JSON.stringify(D(e, null, null, i), i, '  ') }, R.equals = function (e, t) { return r.prototype.equals.call(R, e.replace(/,([\r\n])/g, '$1'), t.replace(/,([\r\n])/g, '$1')) }; const L = new r(); function k (e, t, r) { return L.diff(e, t, r) } function O (e) { const s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; const u = e.split(/\r\n|[\n\v\f\r\x85]/); const c = e.match(/\r\n|[\n\v\f\r\x85]/g) || []; const i = []; let l = 0; function t () { const e = {}; i.push(e); while (l < u.length) { const t = u[l]; if (/^(\-\-\-|\+\+\+|@@)\s/.test(t)) { break } const r = /^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(t); if (r) { e.index = r[1] }l++ }o(e); o(e); e.hunks = []; while (l < u.length) { const n = u[l]; if (/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(n)) { break } else if (/^@@/.test(n)) { e.hunks.push(a()) } else if (n && s.strict) { throw new Error('Unknown line ' + (l + 1) + ' ' + JSON.stringify(n)) } else { l++ } } } function o (e) { const t = /^(---|\+\+\+)\s+(.*)$/.exec(u[l]); if (t) { const r = t[1] === '---' ? 'old' : 'new'; const n = t[2].split('\t', 2); let i = n[0].replace(/\\\\/g, '\\'); if (/^".*"$/.test(i)) { i = i.substr(1, i.length - 2) }e[r + 'FileName'] = i; e[r + 'Header'] = (n[1] || '').trim(); l++ } } function a () { const e = l; const t = u[l++]; const r = t.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/); const n = { oldStart: +r[1], oldLines: typeof r[2] === 'undefined' ? 1 : +r[2], newStart: +r[3], newLines: typeof r[4] === 'undefined' ? 1 : +r[4], lines: [], linedelimiters: [] }; if (n.oldLines === 0) { n.oldStart += 1 } if (n.newLines === 0) { n.newStart += 1 } let i = 0; let o = 0; for (;l < u.length; l++) { if (u[l].indexOf('--- ') === 0 && l + 2 < u.length && u[l + 1].indexOf('+++ ') === 0 && u[l + 2].indexOf('@@') === 0) { break } const a = u[l].length == 0 && l != u.length - 1 ? ' ' : u[l][0]; if (a === '+' || a === '-' || a === ' ' || a === '\\') { n.lines.push(u[l]); n.linedelimiters.push(c[l] || '\n'); if (a === '+') { i++ } else if (a === '-') { o++ } else if (a === ' ') { i++; o++ } } else { break } } if (!i && n.newLines === 1) { n.newLines = 0 } if (!o && n.oldLines === 1) { n.oldLines = 0 } if (s.strict) { if (i !== n.newLines) { throw new Error('Added line count did not match for hunk at line ' + (e + 1)) } if (o !== n.oldLines) { throw new Error('Removed line count did not match for hunk at line ' + (e + 1)) } } return n } while (l < u.length) { t() } return i } function C (t, r, n) { let i = true; let o = false; let a = false; let s = 1; return function e () { if (i && !a) { if (o) { s++ } else { i = false } if (t + s <= n) { return s } a = true } if (!o) { if (!a) { i = true } if (r <= t - s) { return -s++ } o = true; return e() } } } function I (e, t) { const r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; if (typeof t === 'string') { t = O(t) } if (Array.isArray(t)) { if (t.length > 1) { throw new Error('applyPatch only works with a single input.') } t = t[0] } const a = e.split(/\r\n|[\n\v\f\r\x85]/); const n = e.match(/\r\n|[\n\v\f\r\x85]/g) || []; const i = t.hunks; const s = r.compareLine || function (e, t, r, n) { return t === n }; let u = 0; const c = r.fuzzFactor || 0; let o = 0; let l = 0; let f; let h; function p (e, t) { for (let r = 0; r < e.lines.length; r++) { const n = e.lines[r]; const i = n.length > 0 ? n[0] : ' '; const o = n.length > 0 ? n.substr(1) : n; if (i === ' ' || i === '-') { if (!s(t + 1, a[t], i, o)) { u++; if (u > c) { return false } }t++ } } return true } for (let d = 0; d < i.length; d++) { const g = i[d]; const y = a.length - g.oldLines; let m = 0; const v = l + g.oldStart - 1; const b = C(v, o, y); for (;m !== undefined; m = b()) { if (p(g, v + m)) { g.offset = l += m; break } } if (m === undefined) { return false } o = g.offset + g.oldStart + g.oldLines } let w = 0; for (let E = 0; E < i.length; E++) { const T = i[E]; let A = T.oldStart + T.offset + w - 1; w += T.newLines - T.oldLines; for (let _ = 0; _ < T.lines.length; _++) { const S = T.lines[_]; const x = S.length > 0 ? S[0] : ' '; const R = S.length > 0 ? S.substr(1) : S; const N = T.linedelimiters[_]; if (x === ' ') { A++ } else if (x === '-') { a.splice(A, 1); n.splice(A, 1) } else if (x === '+') { a.splice(A, 0, R); n.splice(A, 0, N); A++ } else if (x === '\\') { const D = T.lines[_ - 1] ? T.lines[_ - 1][0] : null; if (D === '+') { f = true } else if (D === '-') { h = true } } } } if (f) { while (!a[a.length - 1]) { a.pop(); n.pop() } } else if (h) { a.push(''); n.push('\n') } for (let L = 0; L < a.length - 1; L++) { a[L] = a[L] + n[L] } return a.join('') } function P (e, i) { if (typeof e === 'string') { e = O(e) } let t = 0; function o () { const n = e[t++]; if (!n) { return i.complete() } i.loadFile(n, function (e, t) { if (e) { return i.complete(e) } const r = I(t, n, i); i.patched(n, r, function (e) { if (e) { return i.complete(e) } o() }) }) }o() } function q (e, t, p, d, r, n, g) { if (!g) { g = {} } if (typeof g.context === 'undefined') { g.context = 4 } const y = f(p, d, g); y.push({ value: '', lines: [] }); function m (e) { return e.map(function (e) { return ' ' + e }) } const v = []; let b = 0; let w = 0; let E = []; let T = 1; let A = 1; const i = function e (t) { const r = y[t]; const n = r.lines || r.value.replace(/\n$/, '').split('\n'); r.lines = n; if (r.added || r.removed) { let i; if (!b) { const o = y[t - 1]; b = T; w = A; if (o) { E = g.context > 0 ? m(o.lines.slice(-g.context)) : []; b -= E.length; w -= E.length } }(i = E).push.apply(i, _(n.map(function (e) { return (r.added ? '+' : '-') + e }))); if (r.added) { A += n.length } else { T += n.length } } else { if (b) { if (n.length <= g.context * 2 && t < y.length - 2) { let a; (a = E).push.apply(a, _(m(n))) } else { let s; const u = Math.min(n.length, g.context); (s = E).push.apply(s, _(m(n.slice(0, u)))); const c = { oldStart: b, oldLines: T - b + u, newStart: w, newLines: A - w + u, lines: E }; if (t >= y.length - 2 && n.length <= g.context) { const l = /\n$/.test(p); const f = /\n$/.test(d); const h = n.length == 0 && E.length > c.oldLines; if (!l && h && p.length > 0) { E.splice(c.oldLines, 0, '\\ No newline at end of file') } if (!l && !h || !f) { E.push('\\ No newline at end of file') } }v.push(c); b = 0; w = 0; E = [] } }T += n.length; A += n.length } }; for (let o = 0; o < y.length; o++) { i(o) } return { oldFileName: e, newFileName: t, oldHeader: r, newHeader: n, hunks: v } } function U (e) { const t = []; if (e.oldFileName == e.newFileName) { t.push('Index: ' + e.oldFileName) }t.push('==================================================================='); t.push('--- ' + e.oldFileName + (typeof e.oldHeader === 'undefined' ? '' : '\t' + e.oldHeader)); t.push('+++ ' + e.newFileName + (typeof e.newHeader === 'undefined' ? '' : '\t' + e.newHeader)); for (let r = 0; r < e.hunks.length; r++) { const n = e.hunks[r]; if (n.oldLines === 0) { n.oldStart -= 1 } if (n.newLines === 0) { n.newStart -= 1 }t.push('@@ -' + n.oldStart + ',' + n.oldLines + ' +' + n.newStart + ',' + n.newLines + ' @@'); t.push.apply(t, n.lines) } return t.join('\n') + '\n' } function F (e, t, r, n, i, o, a) { return U(q(e, t, r, n, i, o, a)) } function B (e, t, r, n, i, o) { return F(e, e, t, r, n, i, o) } function j (e, t) { if (e.length !== t.length) { return false } return M(e, t) } function M (e, t) { if (t.length > e.length) { return false } for (let r = 0; r < t.length; r++) { if (t[r] !== e[r]) { return false } } return true } function V (e) { const t = oe(e.lines); const r = t.oldLines; const n = t.newLines; if (r !== undefined) { e.oldLines = r } else { delete e.oldLines } if (n !== undefined) { e.newLines = n } else { delete e.newLines } } function G (e, t, r) { e = H(e, r); t = H(t, r); const n = {}; if (e.index || t.index) { n.index = e.index || t.index } if (e.newFileName || t.newFileName) { if (!z(e)) { n.oldFileName = t.oldFileName || e.oldFileName; n.newFileName = t.newFileName || e.newFileName; n.oldHeader = t.oldHeader || e.oldHeader; n.newHeader = t.newHeader || e.newHeader } else if (!z(t)) { n.oldFileName = e.oldFileName; n.newFileName = e.newFileName; n.oldHeader = e.oldHeader; n.newHeader = e.newHeader } else { n.oldFileName = Y(n, e.oldFileName, t.oldFileName); n.newFileName = Y(n, e.newFileName, t.newFileName); n.oldHeader = Y(n, e.oldHeader, t.oldHeader); n.newHeader = Y(n, e.newHeader, t.newHeader) } }n.hunks = []; let i = 0; let o = 0; let a = 0; let s = 0; while (i < e.hunks.length || o < t.hunks.length) { const u = e.hunks[i] || { oldStart: Infinity }; const c = t.hunks[o] || { oldStart: Infinity }; if (W(u, c)) { n.hunks.push($(u, a)); i++; s += u.newLines - u.oldLines } else if (W(c, u)) { n.hunks.push($(c, s)); o++; a += c.newLines - c.oldLines } else { const l = { oldStart: Math.min(u.oldStart, c.oldStart), oldLines: 0, newStart: Math.min(u.newStart + a, c.oldStart + s), newLines: 0, lines: [] }; J(l, u.oldStart, u.lines, c.oldStart, c.lines); o++; i++; n.hunks.push(l) } } return n } function H (e, t) { if (typeof e === 'string') { if (/^@@/m.test(e) || /^Index:/m.test(e)) { return O(e)[0] } if (!t) { throw new Error('Must provide a base reference or pass in a patch') } return q(undefined, undefined, t, e) } return e } function z (e) { return e.newFileName && e.newFileName !== e.oldFileName } function Y (e, t, r) { if (t === r) { return t } else { e.conflict = true; return { mine: t, theirs: r } } } function W (e, t) { return e.oldStart < t.oldStart && e.oldStart + e.oldLines < t.oldStart } function $ (e, t) { return { oldStart: e.oldStart, oldLines: e.oldLines, newStart: e.newStart + t, newLines: e.newLines, lines: e.lines } } function J (e, t, r, n, i) { const o = { offset: t, lines: r, index: 0 }; const a = { offset: n, lines: i, index: 0 }; X(e, o, a); X(e, a, o); while (o.index < o.lines.length && a.index < a.lines.length) { const s = o.lines[o.index]; const u = a.lines[a.index]; if ((s[0] === '-' || s[0] === '+') && (u[0] === '-' || u[0] === '+')) { K(e, o, a) } else if (s[0] === '+' && u[0] === ' ') { var c; (c = e.lines).push.apply(c, _(te(o))) } else if (u[0] === '+' && s[0] === ' ') { var l; (l = e.lines).push.apply(l, _(te(a))) } else if (s[0] === '-' && u[0] === ' ') { Q(e, o, a) } else if (u[0] === '-' && s[0] === ' ') { Q(e, a, o, true) } else if (s === u) { e.lines.push(s); o.index++; a.index++ } else { Z(e, te(o), te(a)) } }ee(e, o); ee(e, a); V(e) } function K (e, t, r) { const n = te(t); const i = te(r); if (ne(n) && ne(i)) { if (M(n, i) && ie(r, n, n.length - i.length)) { let o; (o = e.lines).push.apply(o, _(n)); return } else if (M(i, n) && ie(t, i, i.length - n.length)) { let a; (a = e.lines).push.apply(a, _(i)); return } } else if (j(n, i)) { let s; (s = e.lines).push.apply(s, _(n)); return }Z(e, n, i) } function Q (e, t, r, n) { const i = te(t); const o = re(r, i); if (o.merged) { let a; (a = e.lines).push.apply(a, _(o.merged)) } else { Z(e, n ? o : i, n ? i : o) } } function Z (e, t, r) { e.conflict = true; e.lines.push({ conflict: true, mine: t, theirs: r }) } function X (e, t, r) { while (t.offset < r.offset && t.index < t.lines.length) { const n = t.lines[t.index++]; e.lines.push(n); t.offset++ } } function ee (e, t) { while (t.index < t.lines.length) { const r = t.lines[t.index++]; e.lines.push(r) } } function te (e) { const t = []; let r = e.lines[e.index][0]; while (e.index < e.lines.length) { const n = e.lines[e.index]; if (r === '-' && n[0] === '+') { r = '+' } if (r === n[0]) { t.push(n); e.index++ } else { break } } return t } function re (e, t) { const r = []; const n = []; let i = 0; let o = false; let a = false; while (i < t.length && e.index < e.lines.length) { let s = e.lines[e.index]; const u = t[i]; if (u[0] === '+') { break } o = o || s[0] !== ' '; n.push(u); i++; if (s[0] === '+') { a = true; while (s[0] === '+') { r.push(s); s = e.lines[++e.index] } } if (u.substr(1) === s.substr(1)) { r.push(s); e.index++ } else { a = true } } if ((t[i] || '')[0] === '+' && o) { a = true } if (a) { return r } while (i < t.length) { n.push(t[i++]) } return { merged: n, changes: r } } function ne (e) { return e.reduce(function (e, t) { return e && t[0] === '-' }, true) } function ie (e, t, r) { for (let n = 0; n < r; n++) { const i = t[t.length - r + n].substr(1); if (e.lines[e.index + n] !== ' ' + i) { return false } }e.index += r; return true } function oe (e) { let n = 0; let i = 0; e.forEach(function (e) { if (typeof e !== 'string') { const t = oe(e.mine); const r = oe(e.theirs); if (n !== undefined) { if (t.oldLines === r.oldLines) { n += t.oldLines } else { n = undefined } } if (i !== undefined) { if (t.newLines === r.newLines) { i += t.newLines } else { i = undefined } } } else { if (i !== undefined && (e[0] === '+' || e[0] === ' ')) { i++ } if (n !== undefined && (e[0] === '-' || e[0] === ' ')) { n++ } } }); return { oldLines: n, newLines: i } } function ae (e) { const t = []; let r; let n; for (let i = 0; i < e.length; i++) { r = e[i]; if (r.added) { n = 1 } else if (r.removed) { n = -1 } else { n = 0 }t.push([n, r.value]) } return t } function se (e) { const t = []; for (let r = 0; r < e.length; r++) { const n = e[r]; if (n.added) { t.push('<ins>') } else if (n.removed) { t.push('<del>') }t.push(ue(n.value)); if (n.added) { t.push('</ins>') } else if (n.removed) { t.push('</del>') } } return t.join('') } function ue (e) { let t = e; t = t.replace(/&/g, '&amp;'); t = t.replace(/</g, '&lt;'); t = t.replace(/>/g, '&gt;'); t = t.replace(/"/g, '&quot;'); return t }L.tokenize = function (e) { return e.slice() }, L.join = L.removeEmpty = function (e) { return e }, e.Diff = r, e.applyPatch = I, e.applyPatches = P, e.canonicalize = D, e.convertChangesToDMP = ae, e.convertChangesToXML = se, e.createPatch = B, e.createTwoFilesPatch = F, e.diffArrays = k, e.diffChars = t, e.diffCss = v, e.diffJson = N, e.diffLines = f, e.diffSentences = d, e.diffTrimmedLines = h, e.diffWords = u, e.diffWordsWithSpace = c, e.merge = G, e.parsePatch = O, e.structuredPatch = q, Object.defineProperty(e, '__esModule', { value: true }) }(t)) }); var Jf = 36e5; var Kf = 864e5; function Qf (e, t, r, n) { t = 1.5 * r <= t; return Math.round(e / r) + ' ' + n + (t ? 's' : '') } const Zf = !y(function () { return Object.isExtensible(Object.preventExtensions({})) }); const Xf = e(function (e) { function r (e) { t(e, n, { value: { objectID: 'O' + ++i, weakData: {} } }) } var t = q.f; var n = R('meta'); var i = 0; const o = Object.isExtensible || function () { return !0 }; var a = e.exports = { REQUIRED: !1, fastKey: function (e, t) { if (!L(e)) { return typeof e === 'symbol' ? e : (typeof e === 'string' ? 'S' : 'P') + e } if (!k(e, n)) { if (!o(e)) { return 'F' } if (!t) { return 'E' } r(e) } return e[n].objectID }, getWeakData: function (e, t) { if (!k(e, n)) { if (!o(e)) { return !0 } if (!t) { return !1 } r(e) } return e[n].weakData }, onFreeze: function (e) { return Zf && a.REQUIRED && o(e) && !k(e, n) && r(e), e } }; X[n] = !0 }); const eh = Xf.onFreeze; const th = Object.freeze; var Vl = y(function () { th(1) }); ue({ target: 'Object', stat: !0, forced: Vl, sham: !Zf }, { freeze: function (e) { return th && L(e) ? th(eh(e)) : e } }); var ut = function (r, e, t) { function n (e) { const r = p[e]; ge(p, e, e == 'add' ? function (e) { return r.call(this, e === 0 ? 0 : e), this } : e == 'delete' ? function (e) { return !(l && !L(e)) && r.call(this, e === 0 ? 0 : e) } : e == 'get' ? function (e) { return l && !L(e) ? void 0 : r.call(this, e === 0 ? 0 : e) } : e == 'has' ? function (e) { return !(l && !L(e)) && r.call(this, e === 0 ? 0 : e) } : function (e, t) { return r.call(this, e === 0 ? 0 : e, t), this }) } let i; let o; let a; let s; let u; const c = r.indexOf('Map') !== -1; var l = r.indexOf('Weak') !== -1; const f = c ? 'set' : 'add'; const h = C[r]; var p = h && h.prototype; let d = h; const g = {}; return qe(r, typeof h !== 'function' || !(l || p.forEach && !y(function () { (new h()).entries().next() }))) ? (d = t.getConstructor(e, r, c, f), Xf.REQUIRED = !0) : qe(r, !0) && (o = (i = new d())[f](l ? {} : -0, 1) != i, a = y(function () { i.has(1) }), s = Yo(function (e) { new h(e) }), u = !l && y(function () { for (var e = new h(), t = 5; t--;) { e[f](t, t) } return !e.has(-0) }), s || (((d = e(function (e, t) { io(e, d, r); e = Ar(new h(), e, d); return t != null && _l(t, e[f], { that: e, AS_ENTRIES: c }), e })).prototype = p).constructor = d), (a || u) && (n('delete'), n('has'), c && n('get')), (u || o) && n(f), l && p.clear && delete p.clear), g[r] = d, ue({ global: !0, forced: d != h }, g), Hn(d, r), l || t.setStrong(d, r, c), d }; const rh = q.f; const nh = Xf.fastKey; const ih = de.set; const oh = de.getterFor; var i = { getConstructor: function (e, r, n, i) { function o (e, t, r) { let n; const i = s(e); let o = u(e, t); return o ? o.value = r : (i.last = o = { index: n = nh(t, !0), key: t, value: r, previous: r = i.last, next: void 0, removed: !1 }, i.first || (i.first = o), r && (r.next = o), I ? i.size++ : e.size++, n !== 'F' && (i.index[n] = o)), e } var a = e(function (e, t) { io(e, a, r), ih(e, { type: r, index: Pr(null), first: void 0, last: void 0, size: 0 }), I || (e.size = 0), t != null && _l(t, e[i], { that: e, AS_ENTRIES: n }) }); var s = oh(r); var u = function (e, t) { let r; const n = s(e); var e = nh(t); if (e !== 'F') { return n.index[e] } for (r = n.first; r; r = r.next) { if (r.key == t) { return r } } }; return no(a.prototype, { clear: function () { for (var e = s(this), t = e.index, r = e.first; r;) { r.removed = !0, r.previous && (r.previous = r.previous.next = void 0), delete t[r.index], r = r.next }e.first = e.last = void 0, I ? e.size = 0 : this.size = 0 }, delete: function (e) { let t; const r = s(this); const n = u(this, e); return n && (t = n.next, e = n.previous, delete r.index[n.index], n.removed = !0, e && (e.next = t), t && (t.previous = e), r.first == n && (r.first = t), r.last == n && (r.last = e), I ? r.size-- : this.size--), !!n }, forEach: function (e, t) { for (var r, n = s(this), i = le(e, arguments.length > 1 ? t : void 0, 3); r = r ? r.next : n.first;) { for (i(r.value, r.key, this); r && r.removed;) { r = r.previous } } }, has: function (e) { return !!u(this, e) } }), no(a.prototype, n ? { get: function (e) { e = u(this, e); return e && e.value }, set: function (e, t) { return o(this, e === 0 ? 0 : e, t) } } : { add: function (e) { return o(this, e = e === 0 ? 0 : e, e) } }), I && rh(a.prototype, 'size', { get: function () { return s(this).size } }), a }, setStrong: function (e, t, r) { const n = t + ' Iterator'; const i = oh(t); const o = oh(n); Ui(e, t, function (e, t) { ih(this, { type: n, target: e, state: i(e), kind: t, last: void 0 }) }, function () { for (var e = o(this), t = e.kind, r = e.last; r && r.removed;) { r = r.previous } return e.target && (e.last = r = r ? r.next : e.state.first) ? t == 'keys' ? { value: r.key, done: !1 } : t == 'values' ? { value: r.value, done: !1 } : { value: [r.key, r.value], done: !1 } : { value: e.target = void 0, done: !0 } }, r ? 'entries' : 'values', !r, !0), tn(t) } }; ut('Set', function (t) { return function (e) { return t(this, arguments.length ? e : void 0) } }, i); const ah = Object.freeze({ __proto__: null, nanoid: function (e) { for (var t = '', r = arguments.length > 0 && void 0 !== e ? e : 21; r--;) { t += 'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'[64 * Math.random() | 0] } return t }, customAlphabet: function (r, n) { return function () { for (var e = '', t = n; t--;) { e += r[Math.random() * r.length | 0] } return e } } }); const sh = e(function (D, L) { !(function (e) { const t = L; const r = D && D.exports == t && D; var n = kn(O) == 'object' && O; n.global !== n && n.window !== n || (e = n); function s (e, t) { return S.call(e, t) } function u (e, t) { if (!e) { return t } let r; const n = {}; for (r in t) { n[r] = (s(e, r) ? e : t)[r] } return n } function d (e, t) { let r = ''; return e >= 55296 && e <= 57343 || e > 1114111 ? (t && x('character reference outside the permissible Unicode range'), 'ï¿½') : s(T, e) ? (t && x('disallowed character reference'), T[e]) : (t && (function (e, t) { for (let r = -1, n = e.length; ++r < n;) { if (e[r] == t) { return !0 } } return !1 }(A, e)) && x('disallowed character reference'), e > 65535 && (r += _((e -= 65536) >>> 10 & 1023 | 55296), e = 56320 | 1023 & e), r += _(e)) } function c (e) { return '&#x' + e.toString(16).toUpperCase() + ';' } function l (e) { return '&#' + e + ';' } function f (e, t) { function r (e) { return a(e.charCodeAt(0)) }(t = u(t, f.options)).strict && b.test(e) && x('forbidden code point'); const n = t.encodeEverything; const i = t.useNamedReferences; const o = t.allowUnsafeSymbols; var a = t.decimal ? l : c; return n ? (e = e.replace(p, function (e) { return i && s(m, e) ? '&' + m[e] + ';' : r(e) }), i && (e = e.replace(/&gt;\u20D2/g, '&nvgt;').replace(/&lt;\u20D2/g, '&nvlt;').replace(/&#x66;&#x6A;/g, '&fjlig;')), i && (e = e.replace(y, function (e) { return '&' + m[e] + ';' }))) : i ? (o || (e = e.replace(v, function (e) { return '&' + m[e] + ';' })), e = (e = e.replace(/&gt;\u20D2/g, '&nvgt;').replace(/&lt;\u20D2/g, '&nvlt;')).replace(y, function (e) { return '&' + m[e] + ';' })) : o || (e = e.replace(v, r)), e.replace(h, function (e) { const t = e.charCodeAt(0); var e = e.charCodeAt(1); return a(1024 * (t - 55296) + e - 56320 + 65536) }).replace(g, r) } var h = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g; var p = /[\x01-\x7F]/g; var g = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g; var y = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g; var m = { 'Â­': 'shy', 'â': 'zwnj', 'â': 'zwj', 'â': 'lrm', 'â£': 'ic', 'â¢': 'it', 'â¡': 'af', 'â': 'rlm', 'â': 'ZeroWidthSpace', 'â ': 'NoBreak', 'Ì': 'DownBreve', 'â': 'tdot', 'â': 'DotDot', '\t': 'Tab', '\n': 'NewLine', 'â': 'puncsp', 'â': 'MediumSpace', 'â': 'thinsp', 'â': 'hairsp', 'â': 'emsp13', 'â': 'ensp', 'â': 'emsp14', 'â': 'emsp', 'â': 'numsp', 'Â ': 'nbsp', 'ââ': 'ThickSpace', 'â¾': 'oline', _: 'lowbar', 'â': 'dash', 'â': 'ndash', 'â': 'mdash', 'â': 'horbar', ',': 'comma', ';': 'semi', 'â': 'bsemi', ':': 'colon', 'â©´': 'Colone', '!': 'excl', 'Â¡': 'iexcl', '?': 'quest', 'Â¿': 'iquest', '.': 'period', 'â¥': 'nldr', 'â¦': 'mldr', 'Â·': 'middot', "'": 'apos', 'â': 'lsquo', 'â': 'rsquo', 'â': 'sbquo', 'â¹': 'lsaquo', 'âº': 'rsaquo', '"': 'quot', 'â': 'ldquo', 'â': 'rdquo', 'â': 'bdquo', 'Â«': 'laquo', 'Â»': 'raquo', '(': 'lpar', ')': 'rpar', '[': 'lsqb', ']': 'rsqb', '{': 'lcub', '}': 'rcub', 'â': 'lceil', 'â': 'rceil', 'â': 'lfloor', 'â': 'rfloor', 'â¦': 'lopar', 'â¦': 'ropar', 'â¦': 'lbrke', 'â¦': 'rbrke', 'â¦': 'lbrkslu', 'â¦': 'rbrksld', 'â¦': 'lbrksld', 'â¦': 'rbrkslu', 'â¦': 'langd', 'â¦': 'rangd', 'â¦': 'lparlt', 'â¦': 'rpargt', 'â¦': 'gtlPar', 'â¦': 'ltrPar', 'â¦': 'lobrk', 'â§': 'robrk', 'â¨': 'lang', 'â©': 'rang', 'âª': 'Lang', 'â«': 'Rang', 'â¬': 'loang', 'â­': 'roang', 'â²': 'lbbrk', 'â³': 'rbbrk', 'â': 'Vert', 'Â§': 'sect', 'Â¶': 'para', '@': 'commat', '*': 'ast', '/': 'sol', undefined: null, '&': 'amp', '#': 'num', '%': 'percnt', 'â°': 'permil', 'â±': 'pertenk', 'â ': 'dagger', 'â¡': 'Dagger', 'â¢': 'bull', 'â': 'hybull', 'â²': 'prime', 'â³': 'Prime', 'â´': 'tprime', 'â': 'qprime', 'âµ': 'bprime', 'â': 'caret', '`': 'grave', 'Â´': 'acute', 'Ë': 'tilde', '^': 'Hat', 'Â¯': 'macr', 'Ë': 'breve', 'Ë': 'dot', 'Â¨': 'die', 'Ë': 'ring', 'Ë': 'dblac', 'Â¸': 'cedil', 'Ë': 'ogon', 'Ë': 'circ', 'Ë': 'caron', 'Â°': 'deg', 'Â©': 'copy', 'Â®': 'reg', 'â': 'copysr', 'â': 'wp', 'â': 'rx', 'â§': 'mho', 'â©': 'iiota', 'â': 'larr', 'â': 'nlarr', 'â': 'rarr', 'â': 'nrarr', 'â': 'uarr', 'â': 'darr', 'â': 'harr', 'â®': 'nharr', 'â': 'varr', 'â': 'nwarr', 'â': 'nearr', 'â': 'searr', 'â': 'swarr', 'â': 'rarrw', 'âÌ¸': 'nrarrw', 'â': 'Larr', 'â': 'Uarr', 'â ': 'Rarr', 'â¡': 'Darr', 'â¢': 'larrtl', 'â£': 'rarrtl', 'â¤': 'mapstoleft', 'â¥': 'mapstoup', 'â¦': 'map', 'â§': 'mapstodown', 'â©': 'larrhk', 'âª': 'rarrhk', 'â«': 'larrlp', 'â¬': 'rarrlp', 'â­': 'harrw', 'â°': 'lsh', 'â±': 'rsh', 'â²': 'ldsh', 'â³': 'rdsh', 'âµ': 'crarr', 'â¶': 'cularr', 'â·': 'curarr', 'âº': 'olarr', 'â»': 'orarr', 'â¼': 'lharu', 'â½': 'lhard', 'â¾': 'uharr', 'â¿': 'uharl', 'â': 'rharu', 'â': 'rhard', 'â': 'dharr', 'â': 'dharl', 'â': 'rlarr', 'â': 'udarr', 'â': 'lrarr', 'â': 'llarr', 'â': 'uuarr', 'â': 'rrarr', 'â': 'ddarr', 'â': 'lrhar', 'â': 'rlhar', 'â': 'lArr', 'â': 'nlArr', 'â': 'uArr', 'â': 'rArr', 'â': 'nrArr', 'â': 'dArr', 'â': 'iff', 'â': 'nhArr', 'â': 'vArr', 'â': 'nwArr', 'â': 'neArr', 'â': 'seArr', 'â': 'swArr', 'â': 'lAarr', 'â': 'rAarr', 'â': 'zigrarr', 'â¤': 'larrb', 'â¥': 'rarrb', 'âµ': 'duarr', 'â½': 'loarr', 'â¾': 'roarr', 'â¿': 'hoarr', 'â': 'forall', 'â': 'comp', 'â': 'part', 'âÌ¸': 'npart', 'â': 'exist', 'â': 'nexist', 'â': 'empty', 'â': 'Del', 'â': 'in', 'â': 'notin', 'â': 'ni', 'â': 'notni', 'Ï¶': 'bepsi', 'â': 'prod', 'â': 'coprod', 'â': 'sum', '+': 'plus', 'Â±': 'pm', 'Ã·': 'div', 'Ã': 'times', '<': 'lt', 'â®': 'nlt', '<â': 'nvlt', '=': 'equals', 'â ': 'ne', '=â¥': 'bne', 'â©µ': 'Equal', '>': 'gt', 'â¯': 'ngt', '>â': 'nvgt', 'Â¬': 'not', '|': 'vert', 'Â¦': 'brvbar', 'â': 'minus', 'â': 'mp', 'â': 'plusdo', 'â': 'frasl', 'â': 'setmn', 'â': 'lowast', 'â': 'compfn', 'â': 'Sqrt', 'â': 'prop', 'â': 'infin', 'â': 'angrt', 'â ': 'ang', 'â â': 'nang', 'â¡': 'angmsd', 'â¢': 'angsph', 'â£': 'mid', 'â¤': 'nmid', 'â¥': 'par', 'â¦': 'npar', 'â§': 'and', 'â¨': 'or', 'â©': 'cap', 'â©ï¸': 'caps', 'âª': 'cup', 'âªï¸': 'cups', 'â«': 'int', 'â¬': 'Int', 'â­': 'tint', 'â¨': 'qint', 'â®': 'oint', 'â¯': 'Conint', 'â°': 'Cconint', 'â±': 'cwint', 'â²': 'cwconint', 'â³': 'awconint', 'â´': 'there4', 'âµ': 'becaus', 'â¶': 'ratio', 'â·': 'Colon', 'â¸': 'minusd', 'âº': 'mDDot', 'â»': 'homtht', 'â¼': 'sim', 'â': 'nsim', 'â¼â': 'nvsim', 'â½': 'bsim', 'â½Ì±': 'race', 'â¾': 'ac', 'â¾Ì³': 'acE', 'â¿': 'acd', 'â': 'wr', 'â': 'esim', 'âÌ¸': 'nesim', 'â': 'sime', 'â': 'nsime', 'â': 'cong', 'â': 'ncong', 'â': 'simne', 'â': 'ap', 'â': 'nap', 'â': 'ape', 'â': 'apid', 'âÌ¸': 'napid', 'â': 'bcong', 'â': 'CupCap', 'â­': 'NotCupCap', 'ââ': 'nvap', 'â': 'bump', 'âÌ¸': 'nbump', 'â': 'bumpe', 'âÌ¸': 'nbumpe', 'â': 'doteq', 'âÌ¸': 'nedot', 'â': 'eDot', 'â': 'efDot', 'â': 'erDot', 'â': 'colone', 'â': 'ecolon', 'â': 'ecir', 'â': 'cire', 'â': 'wedgeq', 'â': 'veeeq', 'â': 'trie', 'â': 'equest', 'â¡': 'equiv', 'â¢': 'nequiv', 'â¡â¥': 'bnequiv', 'â¤': 'le', 'â°': 'nle', 'â¤â': 'nvle', 'â¥': 'ge', 'â±': 'nge', 'â¥â': 'nvge', 'â¦': 'lE', 'â¦Ì¸': 'nlE', 'â§': 'gE', 'â§Ì¸': 'ngE', 'â¨ï¸': 'lvnE', 'â¨': 'lnE', 'â©': 'gnE', 'â©ï¸': 'gvnE', 'âª': 'll', 'âªÌ¸': 'nLtv', 'âªâ': 'nLt', 'â«': 'gg', 'â«Ì¸': 'nGtv', 'â«â': 'nGt', 'â¬': 'twixt', 'â²': 'lsim', 'â´': 'nlsim', 'â³': 'gsim', 'âµ': 'ngsim', 'â¶': 'lg', 'â¸': 'ntlg', 'â·': 'gl', 'â¹': 'ntgl', 'âº': 'pr', 'â': 'npr', 'â»': 'sc', 'â': 'nsc', 'â¼': 'prcue', 'â ': 'nprcue', 'â½': 'sccue', 'â¡': 'nsccue', 'â¾': 'prsim', 'â¿': 'scsim', 'â¿Ì¸': 'NotSucceedsTilde', 'â': 'sub', 'â': 'nsub', 'ââ': 'vnsub', 'â': 'sup', 'â': 'nsup', 'ââ': 'vnsup', 'â': 'sube', 'â': 'nsube', 'â': 'supe', 'â': 'nsupe', 'âï¸': 'vsubne', 'â': 'subne', 'âï¸': 'vsupne', 'â': 'supne', 'â': 'cupdot', 'â': 'uplus', 'â': 'sqsub', 'âÌ¸': 'NotSquareSubset', 'â': 'sqsup', 'âÌ¸': 'NotSquareSuperset', 'â': 'sqsube', 'â¢': 'nsqsube', 'â': 'sqsupe', 'â£': 'nsqsupe', 'â': 'sqcap', 'âï¸': 'sqcaps', 'â': 'sqcup', 'âï¸': 'sqcups', 'â': 'oplus', 'â': 'ominus', 'â': 'otimes', 'â': 'osol', 'â': 'odot', 'â': 'ocir', 'â': 'oast', 'â': 'odash', 'â': 'plusb', 'â': 'minusb', 'â ': 'timesb', 'â¡': 'sdotb', 'â¢': 'vdash', 'â¬': 'nvdash', 'â£': 'dashv', 'â¤': 'top', 'â¥': 'bot', 'â§': 'models', 'â¨': 'vDash', 'â­': 'nvDash', 'â©': 'Vdash', 'â®': 'nVdash', 'âª': 'Vvdash', 'â«': 'VDash', 'â¯': 'nVDash', 'â°': 'prurel', 'â²': 'vltri', 'âª': 'nltri', 'â³': 'vrtri', 'â«': 'nrtri', 'â´': 'ltrie', 'â¬': 'nltrie', 'â´â': 'nvltrie', 'âµ': 'rtrie', 'â­': 'nrtrie', 'âµâ': 'nvrtrie', 'â¶': 'origof', 'â·': 'imof', 'â¸': 'mumap', 'â¹': 'hercon', 'âº': 'intcal', 'â»': 'veebar', 'â½': 'barvee', 'â¾': 'angrtvb', 'â¿': 'lrtri', 'â': 'Wedge', 'â': 'Vee', 'â': 'xcap', 'â': 'xcup', 'â': 'diam', 'â': 'sdot', 'â': 'Star', 'â': 'divonx', 'â': 'bowtie', 'â': 'ltimes', 'â': 'rtimes', 'â': 'lthree', 'â': 'rthree', 'â': 'bsime', 'â': 'cuvee', 'â': 'cuwed', 'â': 'Sub', 'â': 'Sup', 'â': 'Cap', 'â': 'Cup', 'â': 'fork', 'â': 'epar', 'â': 'ltdot', 'â': 'gtdot', 'â': 'Ll', 'âÌ¸': 'nLl', 'â': 'Gg', 'âÌ¸': 'nGg', 'âï¸': 'lesg', 'â': 'leg', 'â': 'gel', 'âï¸': 'gesl', 'â': 'cuepr', 'â': 'cuesc', 'â¦': 'lnsim', 'â§': 'gnsim', 'â¨': 'prnsim', 'â©': 'scnsim', 'â®': 'vellip', 'â¯': 'ctdot', 'â°': 'utdot', 'â±': 'dtdot', 'â²': 'disin', 'â³': 'isinsv', 'â´': 'isins', 'âµ': 'isindot', 'âµÌ¸': 'notindot', 'â¶': 'notinvc', 'â·': 'notinvb', 'â¹': 'isinE', 'â¹Ì¸': 'notinE', 'âº': 'nisd', 'â»': 'xnis', 'â¼': 'nis', 'â½': 'notnivc', 'â¾': 'notnivb', 'â': 'barwed', 'â': 'Barwed', 'â': 'drcrop', 'â': 'dlcrop', 'â': 'urcrop', 'â': 'ulcrop', 'â': 'bnot', 'â': 'profline', 'â': 'profsurf', 'â': 'telrec', 'â': 'target', 'â': 'ulcorn', 'â': 'urcorn', 'â': 'dlcorn', 'â': 'drcorn', 'â¢': 'frown', 'â£': 'smile', 'â­': 'cylcty', 'â®': 'profalar', 'â¶': 'topbot', 'â½': 'ovbar', 'â¿': 'solbar', 'â¼': 'angzarr', 'â°': 'lmoust', 'â±': 'rmoust', 'â´': 'tbrk', 'âµ': 'bbrk', 'â¶': 'bbrktbrk', 'â': 'OverParenthesis', 'â': 'UnderParenthesis', 'â': 'OverBrace', 'â': 'UnderBrace', 'â¢': 'trpezium', 'â§': 'elinters', 'â£': 'blank', 'â': 'boxh', 'â': 'boxv', 'â': 'boxdr', 'â': 'boxdl', 'â': 'boxur', 'â': 'boxul', 'â': 'boxvr', 'â¤': 'boxvl', 'â¬': 'boxhd', 'â´': 'boxhu', 'â¼': 'boxvh', 'â': 'boxH', 'â': 'boxV', 'â': 'boxdR', 'â': 'boxDr', 'â': 'boxDR', 'â': 'boxdL', 'â': 'boxDl', 'â': 'boxDL', 'â': 'boxuR', 'â': 'boxUr', 'â': 'boxUR', 'â': 'boxuL', 'â': 'boxUl', 'â': 'boxUL', 'â': 'boxvR', 'â': 'boxVr', 'â ': 'boxVR', 'â¡': 'boxvL', 'â¢': 'boxVl', 'â£': 'boxVL', 'â¤': 'boxHd', 'â¥': 'boxhD', 'â¦': 'boxHD', 'â§': 'boxHu', 'â¨': 'boxhU', 'â©': 'boxHU', 'âª': 'boxvH', 'â«': 'boxVh', 'â¬': 'boxVH', 'â': 'uhblk', 'â': 'lhblk', 'â': 'block', 'â': 'blk14', 'â': 'blk12', 'â': 'blk34', 'â¡': 'squ', 'âª': 'squf', 'â«': 'EmptyVerySmallSquare', 'â­': 'rect', 'â®': 'marker', 'â±': 'fltns', 'â³': 'xutri', 'â´': 'utrif', 'âµ': 'utri', 'â¸': 'rtrif', 'â¹': 'rtri', 'â½': 'xdtri', 'â¾': 'dtrif', 'â¿': 'dtri', 'â': 'ltrif', 'â': 'ltri', 'â': 'loz', 'â': 'cir', 'â¬': 'tridot', 'â¯': 'xcirc', 'â¸': 'ultri', 'â¹': 'urtri', 'âº': 'lltri', 'â»': 'EmptySmallSquare', 'â¼': 'FilledSmallSquare', 'â': 'starf', 'â': 'star', 'â': 'phone', 'â': 'female', 'â': 'male', 'â ': 'spades', 'â£': 'clubs', 'â¥': 'hearts', 'â¦': 'diams', 'âª': 'sung', 'â': 'check', 'â': 'cross', 'â ': 'malt', 'â¶': 'sext', 'â': 'VerticalSeparator', 'â': 'bsolhsub', 'â': 'suphsol', 'âµ': 'xlarr', 'â¶': 'xrarr', 'â·': 'xharr', 'â¸': 'xlArr', 'â¹': 'xrArr', 'âº': 'xhArr', 'â¼': 'xmap', 'â¿': 'dzigrarr', 'â¤': 'nvlArr', 'â¤': 'nvrArr', 'â¤': 'nvHarr', 'â¤': 'Map', 'â¤': 'lbarr', 'â¤': 'rbarr', 'â¤': 'lBarr', 'â¤': 'rBarr', 'â¤': 'RBarr', 'â¤': 'DDotrahd', 'â¤': 'UpArrowBar', 'â¤': 'DownArrowBar', 'â¤': 'Rarrtl', 'â¤': 'latail', 'â¤': 'ratail', 'â¤': 'lAtail', 'â¤': 'rAtail', 'â¤': 'larrfs', 'â¤': 'rarrfs', 'â¤': 'larrbfs', 'â¤ ': 'rarrbfs', 'â¤£': 'nwarhk', 'â¤¤': 'nearhk', 'â¤¥': 'searhk', 'â¤¦': 'swarhk', 'â¤§': 'nwnear', 'â¤¨': 'toea', 'â¤©': 'tosa', 'â¤ª': 'swnwar', 'â¤³': 'rarrc', 'â¤³Ì¸': 'nrarrc', 'â¤µ': 'cudarrr', 'â¤¶': 'ldca', 'â¤·': 'rdca', 'â¤¸': 'cudarrl', 'â¤¹': 'larrpl', 'â¤¼': 'curarrm', 'â¤½': 'cularrp', 'â¥': 'rarrpl', 'â¥': 'harrcir', 'â¥': 'Uarrocir', 'â¥': 'lurdshar', 'â¥': 'ldrushar', 'â¥': 'LeftRightVector', 'â¥': 'RightUpDownVector', 'â¥': 'DownLeftRightVector', 'â¥': 'LeftUpDownVector', 'â¥': 'LeftVectorBar', 'â¥': 'RightVectorBar', 'â¥': 'RightUpVectorBar', 'â¥': 'RightDownVectorBar', 'â¥': 'DownLeftVectorBar', 'â¥': 'DownRightVectorBar', 'â¥': 'LeftUpVectorBar', 'â¥': 'LeftDownVectorBar', 'â¥': 'LeftTeeVector', 'â¥': 'RightTeeVector', 'â¥': 'RightUpTeeVector', 'â¥': 'RightDownTeeVector', 'â¥': 'DownLeftTeeVector', 'â¥': 'DownRightTeeVector', 'â¥ ': 'LeftUpTeeVector', 'â¥¡': 'LeftDownTeeVector', 'â¥¢': 'lHar', 'â¥£': 'uHar', 'â¥¤': 'rHar', 'â¥¥': 'dHar', 'â¥¦': 'luruhar', 'â¥§': 'ldrdhar', 'â¥¨': 'ruluhar', 'â¥©': 'rdldhar', 'â¥ª': 'lharul', 'â¥«': 'llhard', 'â¥¬': 'rharul', 'â¥­': 'lrhard', 'â¥®': 'udhar', 'â¥¯': 'duhar', 'â¥°': 'RoundImplies', 'â¥±': 'erarr', 'â¥²': 'simrarr', 'â¥³': 'larrsim', 'â¥´': 'rarrsim', 'â¥µ': 'rarrap', 'â¥¶': 'ltlarr', 'â¥¸': 'gtrarr', 'â¥¹': 'subrarr', 'â¥»': 'suplarr', 'â¥¼': 'lfisht', 'â¥½': 'rfisht', 'â¥¾': 'ufisht', 'â¥¿': 'dfisht', 'â¦': 'vzigzag', 'â¦': 'vangrt', 'â¦': 'angrtvbd', 'â¦¤': 'ange', 'â¦¥': 'range', 'â¦¦': 'dwangle', 'â¦§': 'uwangle', 'â¦¨': 'angmsdaa', 'â¦©': 'angmsdab', 'â¦ª': 'angmsdac', 'â¦«': 'angmsdad', 'â¦¬': 'angmsdae', 'â¦­': 'angmsdaf', 'â¦®': 'angmsdag', 'â¦¯': 'angmsdah', 'â¦°': 'bemptyv', 'â¦±': 'demptyv', 'â¦²': 'cemptyv', 'â¦³': 'raemptyv', 'â¦´': 'laemptyv', 'â¦µ': 'ohbar', 'â¦¶': 'omid', 'â¦·': 'opar', 'â¦¹': 'operp', 'â¦»': 'olcross', 'â¦¼': 'odsold', 'â¦¾': 'olcir', 'â¦¿': 'ofcir', 'â§': 'olt', 'â§': 'ogt', 'â§': 'cirscir', 'â§': 'cirE', 'â§': 'solb', 'â§': 'bsolb', 'â§': 'boxbox', 'â§': 'trisb', 'â§': 'rtriltri', 'â§': 'LeftTriangleBar', 'â§Ì¸': 'NotLeftTriangleBar', 'â§': 'RightTriangleBar', 'â§Ì¸': 'NotRightTriangleBar', 'â§': 'iinfin', 'â§': 'infintie', 'â§': 'nvinfin', 'â§£': 'eparsl', 'â§¤': 'smeparsl', 'â§¥': 'eqvparsl', 'â§«': 'lozf', 'â§´': 'RuleDelayed', 'â§¶': 'dsol', 'â¨': 'xodot', 'â¨': 'xoplus', 'â¨': 'xotime', 'â¨': 'xuplus', 'â¨': 'xsqcup', 'â¨': 'fpartint', 'â¨': 'cirfnint', 'â¨': 'awint', 'â¨': 'rppolint', 'â¨': 'scpolint', 'â¨': 'npolint', 'â¨': 'pointint', 'â¨': 'quatint', 'â¨': 'intlarhk', 'â¨¢': 'pluscir', 'â¨£': 'plusacir', 'â¨¤': 'simplus', 'â¨¥': 'plusdu', 'â¨¦': 'plussim', 'â¨§': 'plustwo', 'â¨©': 'mcomma', 'â¨ª': 'minusdu', 'â¨­': 'loplus', 'â¨®': 'roplus', 'â¨¯': 'Cross', 'â¨°': 'timesd', 'â¨±': 'timesbar', 'â¨³': 'smashp', 'â¨´': 'lotimes', 'â¨µ': 'rotimes', 'â¨¶': 'otimesas', 'â¨·': 'Otimes', 'â¨¸': 'odiv', 'â¨¹': 'triplus', 'â¨º': 'triminus', 'â¨»': 'tritime', 'â¨¼': 'iprod', 'â¨¿': 'amalg', 'â©': 'capdot', 'â©': 'ncup', 'â©': 'ncap', 'â©': 'capand', 'â©': 'cupor', 'â©': 'cupcap', 'â©': 'capcup', 'â©': 'cupbrcap', 'â©': 'capbrcup', 'â©': 'cupcup', 'â©': 'capcap', 'â©': 'ccups', 'â©': 'ccaps', 'â©': 'ccupssm', 'â©': 'And', 'â©': 'Or', 'â©': 'andand', 'â©': 'oror', 'â©': 'orslope', 'â©': 'andslope', 'â©': 'andv', 'â©': 'orv', 'â©': 'andd', 'â©': 'ord', 'â©': 'wedbar', 'â©¦': 'sdote', 'â©ª': 'simdot', 'â©­': 'congdot', 'â©­Ì¸': 'ncongdot', 'â©®': 'easter', 'â©¯': 'apacir', 'â©°': 'apE', 'â©°Ì¸': 'napE', 'â©±': 'eplus', 'â©²': 'pluse', 'â©³': 'Esim', 'â©·': 'eDDot', 'â©¸': 'equivDD', 'â©¹': 'ltcir', 'â©º': 'gtcir', 'â©»': 'ltquest', 'â©¼': 'gtquest', 'â©½': 'les', 'â©½Ì¸': 'nles', 'â©¾': 'ges', 'â©¾Ì¸': 'nges', 'â©¿': 'lesdot', 'âª': 'gesdot', 'âª': 'lesdoto', 'âª': 'gesdoto', 'âª': 'lesdotor', 'âª': 'gesdotol', 'âª': 'lap', 'âª': 'gap', 'âª': 'lne', 'âª': 'gne', 'âª': 'lnap', 'âª': 'gnap', 'âª': 'lEg', 'âª': 'gEl', 'âª': 'lsime', 'âª': 'gsime', 'âª': 'lsimg', 'âª': 'gsiml', 'âª': 'lgE', 'âª': 'glE', 'âª': 'lesges', 'âª': 'gesles', 'âª': 'els', 'âª': 'egs', 'âª': 'elsdot', 'âª': 'egsdot', 'âª': 'el', 'âª': 'eg', 'âª': 'siml', 'âª': 'simg', 'âª': 'simlE', 'âª ': 'simgE', 'âª¡': 'LessLess', 'âª¡Ì¸': 'NotNestedLessLess', 'âª¢': 'GreaterGreater', 'âª¢Ì¸': 'NotNestedGreaterGreater', 'âª¤': 'glj', 'âª¥': 'gla', 'âª¦': 'ltcc', 'âª§': 'gtcc', 'âª¨': 'lescc', 'âª©': 'gescc', 'âªª': 'smt', 'âª«': 'lat', 'âª¬': 'smte', 'âª¬ï¸': 'smtes', 'âª­': 'late', 'âª­ï¸': 'lates', 'âª®': 'bumpE', 'âª¯': 'pre', 'âª¯Ì¸': 'npre', 'âª°': 'sce', 'âª°Ì¸': 'nsce', 'âª³': 'prE', 'âª´': 'scE', 'âªµ': 'prnE', 'âª¶': 'scnE', 'âª·': 'prap', 'âª¸': 'scap', 'âª¹': 'prnap', 'âªº': 'scnap', 'âª»': 'Pr', 'âª¼': 'Sc', 'âª½': 'subdot', 'âª¾': 'supdot', 'âª¿': 'subplus', 'â«': 'supplus', 'â«': 'submult', 'â«': 'supmult', 'â«': 'subedot', 'â«': 'supedot', 'â«': 'subE', 'â«Ì¸': 'nsubE', 'â«': 'supE', 'â«Ì¸': 'nsupE', 'â«': 'subsim', 'â«': 'supsim', 'â«ï¸': 'vsubnE', 'â«': 'subnE', 'â«ï¸': 'vsupnE', 'â«': 'supnE', 'â«': 'csub', 'â«': 'csup', 'â«': 'csube', 'â«': 'csupe', 'â«': 'subsup', 'â«': 'supsub', 'â«': 'subsub', 'â«': 'supsup', 'â«': 'suphsub', 'â«': 'supdsub', 'â«': 'forkv', 'â«': 'topfork', 'â«': 'mlcp', 'â«¤': 'Dashv', 'â«¦': 'Vdashl', 'â«§': 'Barv', 'â«¨': 'vBar', 'â«©': 'vBarv', 'â««': 'Vbar', 'â«¬': 'Not', 'â«­': 'bNot', 'â«®': 'rnmid', 'â«¯': 'cirmid', 'â«°': 'midcir', 'â«±': 'topcir', 'â«²': 'nhpar', 'â«³': 'parsim', 'â«½': 'parsl', 'â«½â¥': 'nparsl', 'â­': 'flat', 'â®': 'natur', 'â¯': 'sharp', 'Â¤': 'curren', 'Â¢': 'cent', $: 'dollar', 'Â£': 'pound', 'Â¥': 'yen', 'â¬': 'euro', 'Â¹': 'sup1', 'Â½': 'half', 'â': 'frac13', 'Â¼': 'frac14', 'â': 'frac15', 'â': 'frac16', 'â': 'frac18', 'Â²': 'sup2', 'â': 'frac23', 'â': 'frac25', 'Â³': 'sup3', 'Â¾': 'frac34', 'â': 'frac35', 'â': 'frac38', 'â': 'frac45', 'â': 'frac56', 'â': 'frac58', 'â': 'frac78', 'ð¶': 'ascr', 'ð': 'aopf', 'ð': 'afr', 'ð¸': 'Aopf', 'ð': 'Afr', 'ð': 'Ascr', 'Âª': 'ordf', 'Ã¡': 'aacute', 'Ã': 'Aacute', 'Ã ': 'agrave', 'Ã': 'Agrave', 'Ä': 'abreve', 'Ä': 'Abreve', 'Ã¢': 'acirc', 'Ã': 'Acirc', 'Ã¥': 'aring', 'Ã': 'angst', 'Ã¤': 'auml', 'Ã': 'Auml', 'Ã£': 'atilde', 'Ã': 'Atilde', 'Ä': 'aogon', 'Ä': 'Aogon', 'Ä': 'amacr', 'Ä': 'Amacr', 'Ã¦': 'aelig', 'Ã': 'AElig', 'ð·': 'bscr', 'ð': 'bopf', 'ð': 'bfr', 'ð¹': 'Bopf', 'â¬': 'Bscr', 'ð': 'Bfr', 'ð ': 'cfr', 'ð¸': 'cscr', 'ð': 'copf', 'â­': 'Cfr', 'ð': 'Cscr', 'â': 'Copf', 'Ä': 'cacute', 'Ä': 'Cacute', 'Ä': 'ccirc', 'Ä': 'Ccirc', 'Ä': 'ccaron', 'Ä': 'Ccaron', 'Ä': 'cdot', 'Ä': 'Cdot', 'Ã§': 'ccedil', 'Ã': 'Ccedil', 'â': 'incare', 'ð¡': 'dfr', 'â': 'dd', 'ð': 'dopf', 'ð¹': 'dscr', 'ð': 'Dscr', 'ð': 'Dfr', 'â': 'DD', 'ð»': 'Dopf', 'Ä': 'dcaron', 'Ä': 'Dcaron', 'Ä': 'dstrok', 'Ä': 'Dstrok', 'Ã°': 'eth', 'Ã': 'ETH', 'â': 'ee', 'â¯': 'escr', 'ð¢': 'efr', 'ð': 'eopf', 'â°': 'Escr', 'ð': 'Efr', 'ð¼': 'Eopf', 'Ã©': 'eacute', 'Ã': 'Eacute', 'Ã¨': 'egrave', 'Ã': 'Egrave', 'Ãª': 'ecirc', 'Ã': 'Ecirc', 'Ä': 'ecaron', 'Ä': 'Ecaron', 'Ã«': 'euml', 'Ã': 'Euml', 'Ä': 'edot', 'Ä': 'Edot', 'Ä': 'eogon', 'Ä': 'Eogon', 'Ä': 'emacr', 'Ä': 'Emacr', 'ð£': 'ffr', 'ð': 'fopf', 'ð»': 'fscr', 'ð': 'Ffr', 'ð½': 'Fopf', 'â±': 'Fscr', 'ï¬': 'fflig', 'ï¬': 'ffilig', 'ï¬': 'ffllig', 'ï¬': 'filig', fj: 'fjlig', 'ï¬': 'fllig', 'Æ': 'fnof', 'â': 'gscr', 'ð': 'gopf', 'ð¤': 'gfr', 'ð¢': 'Gscr', 'ð¾': 'Gopf', 'ð': 'Gfr', 'Çµ': 'gacute', 'Ä': 'gbreve', 'Ä': 'Gbreve', 'Ä': 'gcirc', 'Ä': 'Gcirc', 'Ä¡': 'gdot', 'Ä ': 'Gdot', 'Ä¢': 'Gcedil', 'ð¥': 'hfr', 'â': 'planckh', 'ð½': 'hscr', 'ð': 'hopf', 'â': 'Hscr', 'â': 'Hfr', 'â': 'Hopf', 'Ä¥': 'hcirc', 'Ä¤': 'Hcirc', 'â': 'hbar', 'Ä§': 'hstrok', 'Ä¦': 'Hstrok', 'ð': 'iopf', 'ð¦': 'ifr', 'ð¾': 'iscr', 'â': 'ii', 'ð': 'Iopf', 'â': 'Iscr', 'â': 'Im', 'Ã­': 'iacute', 'Ã': 'Iacute', 'Ã¬': 'igrave', 'Ã': 'Igrave', 'Ã®': 'icirc', 'Ã': 'Icirc', 'Ã¯': 'iuml', 'Ã': 'Iuml', 'Ä©': 'itilde', 'Ä¨': 'Itilde', 'Ä°': 'Idot', 'Ä¯': 'iogon', 'Ä®': 'Iogon', 'Ä«': 'imacr', 'Äª': 'Imacr', 'Ä³': 'ijlig', 'Ä²': 'IJlig', 'Ä±': 'imath', 'ð¿': 'jscr', 'ð': 'jopf', 'ð§': 'jfr', 'ð¥': 'Jscr', 'ð': 'Jfr', 'ð': 'Jopf', 'Äµ': 'jcirc', 'Ä´': 'Jcirc', 'È·': 'jmath', 'ð': 'kopf', 'ð': 'kscr', 'ð¨': 'kfr', 'ð¦': 'Kscr', 'ð': 'Kopf', 'ð': 'Kfr', 'Ä·': 'kcedil', 'Ä¶': 'Kcedil', 'ð©': 'lfr', 'ð': 'lscr', 'â': 'ell', 'ð': 'lopf', 'â': 'Lscr', 'ð': 'Lfr', 'ð': 'Lopf', 'Äº': 'lacute', 'Ä¹': 'Lacute', 'Ä¾': 'lcaron', 'Ä½': 'Lcaron', 'Ä¼': 'lcedil', 'Ä»': 'Lcedil', 'Å': 'lstrok', 'Å': 'Lstrok', 'Å': 'lmidot', 'Ä¿': 'Lmidot', 'ðª': 'mfr', 'ð': 'mopf', 'ð': 'mscr', 'ð': 'Mfr', 'ð': 'Mopf', 'â³': 'Mscr', 'ð«': 'nfr', 'ð': 'nopf', 'ð': 'nscr', 'â': 'Nopf', 'ð©': 'Nscr', 'ð': 'Nfr', 'Å': 'nacute', 'Å': 'Nacute', 'Å': 'ncaron', 'Å': 'Ncaron', 'Ã±': 'ntilde', 'Ã': 'Ntilde', 'Å': 'ncedil', 'Å': 'Ncedil', 'â': 'numero', 'Å': 'eng', 'Å': 'ENG', 'ð ': 'oopf', 'ð¬': 'ofr', 'â´': 'oscr', 'ðª': 'Oscr', 'ð': 'Ofr', 'ð': 'Oopf', 'Âº': 'ordm', 'Ã³': 'oacute', 'Ã': 'Oacute', 'Ã²': 'ograve', 'Ã': 'Ograve', 'Ã´': 'ocirc', 'Ã': 'Ocirc', 'Ã¶': 'ouml', 'Ã': 'Ouml', 'Å': 'odblac', 'Å': 'Odblac', 'Ãµ': 'otilde', 'Ã': 'Otilde', 'Ã¸': 'oslash', 'Ã': 'Oslash', 'Å': 'omacr', 'Å': 'Omacr', 'Å': 'oelig', 'Å': 'OElig', 'ð­': 'pfr', 'ð': 'pscr', 'ð¡': 'popf', 'â': 'Popf', 'ð': 'Pfr', 'ð«': 'Pscr', 'ð¢': 'qopf', 'ð®': 'qfr', 'ð': 'qscr', 'ð¬': 'Qscr', 'ð': 'Qfr', 'â': 'Qopf', 'Ä¸': 'kgreen', 'ð¯': 'rfr', 'ð£': 'ropf', 'ð': 'rscr', 'â': 'Rscr', 'â': 'Re', 'â': 'Ropf', 'Å': 'racute', 'Å': 'Racute', 'Å': 'rcaron', 'Å': 'Rcaron', 'Å': 'rcedil', 'Å': 'Rcedil', 'ð¤': 'sopf', 'ð': 'sscr', 'ð°': 'sfr', 'ð': 'Sopf', 'ð': 'Sfr', 'ð®': 'Sscr', 'â': 'oS', 'Å': 'sacute', 'Å': 'Sacute', 'Å': 'scirc', 'Å': 'Scirc', 'Å¡': 'scaron', 'Å ': 'Scaron', 'Å': 'scedil', 'Å': 'Scedil', 'Ã': 'szlig', 'ð±': 'tfr', 'ð': 'tscr', 'ð¥': 'topf', 'ð¯': 'Tscr', 'ð': 'Tfr', 'ð': 'Topf', 'Å¥': 'tcaron', 'Å¤': 'Tcaron', 'Å£': 'tcedil', 'Å¢': 'Tcedil', 'â¢': 'trade', 'Å§': 'tstrok', 'Å¦': 'Tstrok', 'ð': 'uscr', 'ð¦': 'uopf', 'ð²': 'ufr', 'ð': 'Uopf', 'ð': 'Ufr', 'ð°': 'Uscr', 'Ãº': 'uacute', 'Ã': 'Uacute', 'Ã¹': 'ugrave', 'Ã': 'Ugrave', 'Å­': 'ubreve', 'Å¬': 'Ubreve', 'Ã»': 'ucirc', 'Ã': 'Ucirc', 'Å¯': 'uring', 'Å®': 'Uring', 'Ã¼': 'uuml', 'Ã': 'Uuml', 'Å±': 'udblac', 'Å°': 'Udblac', 'Å©': 'utilde', 'Å¨': 'Utilde', 'Å³': 'uogon', 'Å²': 'Uogon', 'Å«': 'umacr', 'Åª': 'Umacr', 'ð³': 'vfr', 'ð§': 'vopf', 'ð': 'vscr', 'ð': 'Vfr', 'ð': 'Vopf', 'ð±': 'Vscr', 'ð¨': 'wopf', 'ð': 'wscr', 'ð´': 'wfr', 'ð²': 'Wscr', 'ð': 'Wopf', 'ð': 'Wfr', 'Åµ': 'wcirc', 'Å´': 'Wcirc', 'ðµ': 'xfr', 'ð': 'xscr', 'ð©': 'xopf', 'ð': 'Xopf', 'ð': 'Xfr', 'ð³': 'Xscr', 'ð¶': 'yfr', 'ð': 'yscr', 'ðª': 'yopf', 'ð´': 'Yscr', 'ð': 'Yfr', 'ð': 'Yopf', 'Ã½': 'yacute', 'Ã': 'Yacute', 'Å·': 'ycirc', 'Å¶': 'Ycirc', 'Ã¿': 'yuml', 'Å¸': 'Yuml', 'ð': 'zscr', 'ð·': 'zfr', 'ð«': 'zopf', 'â¨': 'Zfr', 'â¤': 'Zopf', 'ðµ': 'Zscr', 'Åº': 'zacute', 'Å¹': 'Zacute', 'Å¾': 'zcaron', 'Å½': 'Zcaron', 'Å¼': 'zdot', 'Å»': 'Zdot', 'Æµ': 'imped', 'Ã¾': 'thorn', 'Ã': 'THORN', 'Å': 'napos', 'Î±': 'alpha', 'Î': 'Alpha', 'Î²': 'beta', 'Î': 'Beta', 'Î³': 'gamma', 'Î': 'Gamma', 'Î´': 'delta', 'Î': 'Delta', 'Îµ': 'epsi', 'Ïµ': 'epsiv', 'Î': 'Epsilon', 'Ï': 'gammad', 'Ï': 'Gammad', 'Î¶': 'zeta', 'Î': 'Zeta', 'Î·': 'eta', 'Î': 'Eta', 'Î¸': 'theta', 'Ï': 'thetav', 'Î': 'Theta', 'Î¹': 'iota', 'Î': 'Iota', 'Îº': 'kappa', 'Ï°': 'kappav', 'Î': 'Kappa', 'Î»': 'lambda', 'Î': 'Lambda', 'Î¼': 'mu', 'Âµ': 'micro', 'Î': 'Mu', 'Î½': 'nu', 'Î': 'Nu', 'Î¾': 'xi', 'Î': 'Xi', 'Î¿': 'omicron', 'Î': 'Omicron', 'Ï': 'pi', 'Ï': 'piv', 'Î ': 'Pi', 'Ï': 'rho', 'Ï±': 'rhov', 'Î¡': 'Rho', 'Ï': 'sigma', 'Î£': 'Sigma', 'Ï': 'sigmaf', 'Ï': 'tau', 'Î¤': 'Tau', 'Ï': 'upsi', 'Î¥': 'Upsilon', 'Ï': 'Upsi', 'Ï': 'phi', 'Ï': 'phiv', 'Î¦': 'Phi', 'Ï': 'chi', 'Î§': 'Chi', 'Ï': 'psi', 'Î¨': 'Psi', 'Ï': 'omega', 'Î©': 'ohm', 'Ð°': 'acy', 'Ð': 'Acy', 'Ð±': 'bcy', 'Ð': 'Bcy', 'Ð²': 'vcy', 'Ð': 'Vcy', 'Ð³': 'gcy', 'Ð': 'Gcy', 'Ñ': 'gjcy', 'Ð': 'GJcy', 'Ð´': 'dcy', 'Ð': 'Dcy', 'Ñ': 'djcy', 'Ð': 'DJcy', 'Ðµ': 'iecy', 'Ð': 'IEcy', 'Ñ': 'iocy', 'Ð': 'IOcy', 'Ñ': 'jukcy', 'Ð': 'Jukcy', 'Ð¶': 'zhcy', 'Ð': 'ZHcy', 'Ð·': 'zcy', 'Ð': 'Zcy', 'Ñ': 'dscy', 'Ð': 'DScy', 'Ð¸': 'icy', 'Ð': 'Icy', 'Ñ': 'iukcy', 'Ð': 'Iukcy', 'Ñ': 'yicy', 'Ð': 'YIcy', 'Ð¹': 'jcy', 'Ð': 'Jcy', 'Ñ': 'jsercy', 'Ð': 'Jsercy', 'Ðº': 'kcy', 'Ð': 'Kcy', 'Ñ': 'kjcy', 'Ð': 'KJcy', 'Ð»': 'lcy', 'Ð': 'Lcy', 'Ñ': 'ljcy', 'Ð': 'LJcy', 'Ð¼': 'mcy', 'Ð': 'Mcy', 'Ð½': 'ncy', 'Ð': 'Ncy', 'Ñ': 'njcy', 'Ð': 'NJcy', 'Ð¾': 'ocy', 'Ð': 'Ocy', 'Ð¿': 'pcy', 'Ð': 'Pcy', 'Ñ': 'rcy', 'Ð ': 'Rcy', 'Ñ': 'scy', 'Ð¡': 'Scy', 'Ñ': 'tcy', 'Ð¢': 'Tcy', 'Ñ': 'tshcy', 'Ð': 'TSHcy', 'Ñ': 'ucy', 'Ð£': 'Ucy', 'Ñ': 'ubrcy', 'Ð': 'Ubrcy', 'Ñ': 'fcy', 'Ð¤': 'Fcy', 'Ñ': 'khcy', 'Ð¥': 'KHcy', 'Ñ': 'tscy', 'Ð¦': 'TScy', 'Ñ': 'chcy', 'Ð§': 'CHcy', 'Ñ': 'dzcy', 'Ð': 'DZcy', 'Ñ': 'shcy', 'Ð¨': 'SHcy', 'Ñ': 'shchcy', 'Ð©': 'SHCHcy', 'Ñ': 'hardcy', 'Ðª': 'HARDcy', 'Ñ': 'ycy', 'Ð«': 'Ycy', 'Ñ': 'softcy', 'Ð¬': 'SOFTcy', 'Ñ': 'ecy', 'Ð­': 'Ecy', 'Ñ': 'yucy', 'Ð®': 'YUcy', 'Ñ': 'yacy', 'Ð¯': 'YAcy', 'âµ': 'aleph', 'â¶': 'beth', 'â·': 'gimel', 'â¸': 'daleth' }; var v = /["&'<>`]/g; const i = { '"': '&quot;', '&': '&amp;', "'": '&#x27;', '<': '&lt;', '>': '&gt;', '`': '&#x60;' }; const o = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/; var b = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/; const a = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g; const w = { aacute: 'Ã¡', Aacute: 'Ã', abreve: 'Ä', Abreve: 'Ä', ac: 'â¾', acd: 'â¿', acE: 'â¾Ì³', acirc: 'Ã¢', Acirc: 'Ã', acute: 'Â´', acy: 'Ð°', Acy: 'Ð', aelig: 'Ã¦', AElig: 'Ã', af: 'â¡', afr: 'ð', Afr: 'ð', agrave: 'Ã ', Agrave: 'Ã', alefsym: 'âµ', aleph: 'âµ', alpha: 'Î±', Alpha: 'Î', amacr: 'Ä', Amacr: 'Ä', amalg: 'â¨¿', amp: '&', AMP: '&', and: 'â§', And: 'â©', andand: 'â©', andd: 'â©', andslope: 'â©', andv: 'â©', ang: 'â ', ange: 'â¦¤', angle: 'â ', angmsd: 'â¡', angmsdaa: 'â¦¨', angmsdab: 'â¦©', angmsdac: 'â¦ª', angmsdad: 'â¦«', angmsdae: 'â¦¬', angmsdaf: 'â¦­', angmsdag: 'â¦®', angmsdah: 'â¦¯', angrt: 'â', angrtvb: 'â¾', angrtvbd: 'â¦', angsph: 'â¢', angst: 'Ã', angzarr: 'â¼', aogon: 'Ä', Aogon: 'Ä', aopf: 'ð', Aopf: 'ð¸', ap: 'â', apacir: 'â©¯', ape: 'â', apE: 'â©°', apid: 'â', apos: "'", ApplyFunction: 'â¡', approx: 'â', approxeq: 'â', aring: 'Ã¥', Aring: 'Ã', ascr: 'ð¶', Ascr: 'ð', Assign: 'â', ast: '*', asymp: 'â', asympeq: 'â', atilde: 'Ã£', Atilde: 'Ã', auml: 'Ã¤', Auml: 'Ã', awconint: 'â³', awint: 'â¨', backcong: 'â', backepsilon: 'Ï¶', backprime: 'âµ', backsim: 'â½', backsimeq: 'â', Backslash: 'â', Barv: 'â«§', barvee: 'â½', barwed: 'â', Barwed: 'â', barwedge: 'â', bbrk: 'âµ', bbrktbrk: 'â¶', bcong: 'â', bcy: 'Ð±', Bcy: 'Ð', bdquo: 'â', becaus: 'âµ', because: 'âµ', Because: 'âµ', bemptyv: 'â¦°', bepsi: 'Ï¶', bernou: 'â¬', Bernoullis: 'â¬', beta: 'Î²', Beta: 'Î', beth: 'â¶', between: 'â¬', bfr: 'ð', Bfr: 'ð', bigcap: 'â', bigcirc: 'â¯', bigcup: 'â', bigodot: 'â¨', bigoplus: 'â¨', bigotimes: 'â¨', bigsqcup: 'â¨', bigstar: 'â', bigtriangledown: 'â½', bigtriangleup: 'â³', biguplus: 'â¨', bigvee: 'â', bigwedge: 'â', bkarow: 'â¤', blacklozenge: 'â§«', blacksquare: 'âª', blacktriangle: 'â´', blacktriangledown: 'â¾', blacktriangleleft: 'â', blacktriangleright: 'â¸', blank: 'â£', blk12: 'â', blk14: 'â', blk34: 'â', block: 'â', bne: '=â¥', bnequiv: 'â¡â¥', bnot: 'â', bNot: 'â«­', bopf: 'ð', Bopf: 'ð¹', bot: 'â¥', bottom: 'â¥', bowtie: 'â', boxbox: 'â§', boxdl: 'â', boxdL: 'â', boxDl: 'â', boxDL: 'â', boxdr: 'â', boxdR: 'â', boxDr: 'â', boxDR: 'â', boxh: 'â', boxH: 'â', boxhd: 'â¬', boxhD: 'â¥', boxHd: 'â¤', boxHD: 'â¦', boxhu: 'â´', boxhU: 'â¨', boxHu: 'â§', boxHU: 'â©', boxminus: 'â', boxplus: 'â', boxtimes: 'â ', boxul: 'â', boxuL: 'â', boxUl: 'â', boxUL: 'â', boxur: 'â', boxuR: 'â', boxUr: 'â', boxUR: 'â', boxv: 'â', boxV: 'â', boxvh: 'â¼', boxvH: 'âª', boxVh: 'â«', boxVH: 'â¬', boxvl: 'â¤', boxvL: 'â¡', boxVl: 'â¢', boxVL: 'â£', boxvr: 'â', boxvR: 'â', boxVr: 'â', boxVR: 'â ', bprime: 'âµ', breve: 'Ë', Breve: 'Ë', brvbar: 'Â¦', bscr: 'ð·', Bscr: 'â¬', bsemi: 'â', bsim: 'â½', bsime: 'â', bsol: '\\', bsolb: 'â§', bsolhsub: 'â', bull: 'â¢', bullet: 'â¢', bump: 'â', bumpe: 'â', bumpE: 'âª®', bumpeq: 'â', Bumpeq: 'â', cacute: 'Ä', Cacute: 'Ä', cap: 'â©', Cap: 'â', capand: 'â©', capbrcup: 'â©', capcap: 'â©', capcup: 'â©', capdot: 'â©', CapitalDifferentialD: 'â', caps: 'â©ï¸', caret: 'â', caron: 'Ë', Cayleys: 'â­', ccaps: 'â©', ccaron: 'Ä', Ccaron: 'Ä', ccedil: 'Ã§', Ccedil: 'Ã', ccirc: 'Ä', Ccirc: 'Ä', Cconint: 'â°', ccups: 'â©', ccupssm: 'â©', cdot: 'Ä', Cdot: 'Ä', cedil: 'Â¸', Cedilla: 'Â¸', cemptyv: 'â¦²', cent: 'Â¢', centerdot: 'Â·', CenterDot: 'Â·', cfr: 'ð ', Cfr: 'â­', chcy: 'Ñ', CHcy: 'Ð§', check: 'â', checkmark: 'â', chi: 'Ï', Chi: 'Î§', cir: 'â', circ: 'Ë', circeq: 'â', circlearrowleft: 'âº', circlearrowright: 'â»', circledast: 'â', circledcirc: 'â', circleddash: 'â', CircleDot: 'â', circledR: 'Â®', circledS: 'â', CircleMinus: 'â', CirclePlus: 'â', CircleTimes: 'â', cire: 'â', cirE: 'â§', cirfnint: 'â¨', cirmid: 'â«¯', cirscir: 'â§', ClockwiseContourIntegral: 'â²', CloseCurlyDoubleQuote: 'â', CloseCurlyQuote: 'â', clubs: 'â£', clubsuit: 'â£', colon: ':', Colon: 'â·', colone: 'â', Colone: 'â©´', coloneq: 'â', comma: ',', commat: '@', comp: 'â', compfn: 'â', complement: 'â', complexes: 'â', cong: 'â', congdot: 'â©­', Congruent: 'â¡', conint: 'â®', Conint: 'â¯', ContourIntegral: 'â®', copf: 'ð', Copf: 'â', coprod: 'â', Coproduct: 'â', copy: 'Â©', COPY: 'Â©', copysr: 'â', CounterClockwiseContourIntegral: 'â³', crarr: 'âµ', cross: 'â', Cross: 'â¨¯', cscr: 'ð¸', Cscr: 'ð', csub: 'â«', csube: 'â«', csup: 'â«', csupe: 'â«', ctdot: 'â¯', cudarrl: 'â¤¸', cudarrr: 'â¤µ', cuepr: 'â', cuesc: 'â', cularr: 'â¶', cularrp: 'â¤½', cup: 'âª', Cup: 'â', cupbrcap: 'â©', cupcap: 'â©', CupCap: 'â', cupcup: 'â©', cupdot: 'â', cupor: 'â©', cups: 'âªï¸', curarr: 'â·', curarrm: 'â¤¼', curlyeqprec: 'â', curlyeqsucc: 'â', curlyvee: 'â', curlywedge: 'â', curren: 'Â¤', curvearrowleft: 'â¶', curvearrowright: 'â·', cuvee: 'â', cuwed: 'â', cwconint: 'â²', cwint: 'â±', cylcty: 'â­', dagger: 'â ', Dagger: 'â¡', daleth: 'â¸', darr: 'â', dArr: 'â', Darr: 'â¡', dash: 'â', dashv: 'â£', Dashv: 'â«¤', dbkarow: 'â¤', dblac: 'Ë', dcaron: 'Ä', Dcaron: 'Ä', dcy: 'Ð´', Dcy: 'Ð', dd: 'â', DD: 'â', ddagger: 'â¡', ddarr: 'â', DDotrahd: 'â¤', ddotseq: 'â©·', deg: 'Â°', Del: 'â', delta: 'Î´', Delta: 'Î', demptyv: 'â¦±', dfisht: 'â¥¿', dfr: 'ð¡', Dfr: 'ð', dHar: 'â¥¥', dharl: 'â', dharr: 'â', DiacriticalAcute: 'Â´', DiacriticalDot: 'Ë', DiacriticalDoubleAcute: 'Ë', DiacriticalGrave: '`', DiacriticalTilde: 'Ë', diam: 'â', diamond: 'â', Diamond: 'â', diamondsuit: 'â¦', diams: 'â¦', die: 'Â¨', DifferentialD: 'â', digamma: 'Ï', disin: 'â²', div: 'Ã·', divide: 'Ã·', divideontimes: 'â', divonx: 'â', djcy: 'Ñ', DJcy: 'Ð', dlcorn: 'â', dlcrop: 'â', dollar: '$', dopf: 'ð', Dopf: 'ð»', dot: 'Ë', Dot: 'Â¨', DotDot: 'â', doteq: 'â', doteqdot: 'â', DotEqual: 'â', dotminus: 'â¸', dotplus: 'â', dotsquare: 'â¡', doublebarwedge: 'â', DoubleContourIntegral: 'â¯', DoubleDot: 'Â¨', DoubleDownArrow: 'â', DoubleLeftArrow: 'â', DoubleLeftRightArrow: 'â', DoubleLeftTee: 'â«¤', DoubleLongLeftArrow: 'â¸', DoubleLongLeftRightArrow: 'âº', DoubleLongRightArrow: 'â¹', DoubleRightArrow: 'â', DoubleRightTee: 'â¨', DoubleUpArrow: 'â', DoubleUpDownArrow: 'â', DoubleVerticalBar: 'â¥', downarrow: 'â', Downarrow: 'â', DownArrow: 'â', DownArrowBar: 'â¤', DownArrowUpArrow: 'âµ', DownBreve: 'Ì', downdownarrows: 'â', downharpoonleft: 'â', downharpoonright: 'â', DownLeftRightVector: 'â¥', DownLeftTeeVector: 'â¥', DownLeftVector: 'â½', DownLeftVectorBar: 'â¥', DownRightTeeVector: 'â¥', DownRightVector: 'â', DownRightVectorBar: 'â¥', DownTee: 'â¤', DownTeeArrow: 'â§', drbkarow: 'â¤', drcorn: 'â', drcrop: 'â', dscr: 'ð¹', Dscr: 'ð', dscy: 'Ñ', DScy: 'Ð', dsol: 'â§¶', dstrok: 'Ä', Dstrok: 'Ä', dtdot: 'â±', dtri: 'â¿', dtrif: 'â¾', duarr: 'âµ', duhar: 'â¥¯', dwangle: 'â¦¦', dzcy: 'Ñ', DZcy: 'Ð', dzigrarr: 'â¿', eacute: 'Ã©', Eacute: 'Ã', easter: 'â©®', ecaron: 'Ä', Ecaron: 'Ä', ecir: 'â', ecirc: 'Ãª', Ecirc: 'Ã', ecolon: 'â', ecy: 'Ñ', Ecy: 'Ð­', eDDot: 'â©·', edot: 'Ä', eDot: 'â', Edot: 'Ä', ee: 'â', efDot: 'â', efr: 'ð¢', Efr: 'ð', eg: 'âª', egrave: 'Ã¨', Egrave: 'Ã', egs: 'âª', egsdot: 'âª', el: 'âª', Element: 'â', elinters: 'â§', ell: 'â', els: 'âª', elsdot: 'âª', emacr: 'Ä', Emacr: 'Ä', empty: 'â', emptyset: 'â', EmptySmallSquare: 'â»', emptyv: 'â', EmptyVerySmallSquare: 'â«', emsp: 'â', emsp13: 'â', emsp14: 'â', eng: 'Å', ENG: 'Å', ensp: 'â', eogon: 'Ä', Eogon: 'Ä', eopf: 'ð', Eopf: 'ð¼', epar: 'â', eparsl: 'â§£', eplus: 'â©±', epsi: 'Îµ', epsilon: 'Îµ', Epsilon: 'Î', epsiv: 'Ïµ', eqcirc: 'â', eqcolon: 'â', eqsim: 'â', eqslantgtr: 'âª', eqslantless: 'âª', Equal: 'â©µ', equals: '=', EqualTilde: 'â', equest: 'â', Equilibrium: 'â', equiv: 'â¡', equivDD: 'â©¸', eqvparsl: 'â§¥', erarr: 'â¥±', erDot: 'â', escr: 'â¯', Escr: 'â°', esdot: 'â', esim: 'â', Esim: 'â©³', eta: 'Î·', Eta: 'Î', eth: 'Ã°', ETH: 'Ã', euml: 'Ã«', Euml: 'Ã', euro: 'â¬', excl: '!', exist: 'â', Exists: 'â', expectation: 'â°', exponentiale: 'â', ExponentialE: 'â', fallingdotseq: 'â', fcy: 'Ñ', Fcy: 'Ð¤', female: 'â', ffilig: 'ï¬', fflig: 'ï¬', ffllig: 'ï¬', ffr: 'ð£', Ffr: 'ð', filig: 'ï¬', FilledSmallSquare: 'â¼', FilledVerySmallSquare: 'âª', fjlig: 'fj', flat: 'â­', fllig: 'ï¬', fltns: 'â±', fnof: 'Æ', fopf: 'ð', Fopf: 'ð½', forall: 'â', ForAll: 'â', fork: 'â', forkv: 'â«', Fouriertrf: 'â±', fpartint: 'â¨', frac12: 'Â½', frac13: 'â', frac14: 'Â¼', frac15: 'â', frac16: 'â', frac18: 'â', frac23: 'â', frac25: 'â', frac34: 'Â¾', frac35: 'â', frac38: 'â', frac45: 'â', frac56: 'â', frac58: 'â', frac78: 'â', frasl: 'â', frown: 'â¢', fscr: 'ð»', Fscr: 'â±', gacute: 'Çµ', gamma: 'Î³', Gamma: 'Î', gammad: 'Ï', Gammad: 'Ï', gap: 'âª', gbreve: 'Ä', Gbreve: 'Ä', Gcedil: 'Ä¢', gcirc: 'Ä', Gcirc: 'Ä', gcy: 'Ð³', Gcy: 'Ð', gdot: 'Ä¡', Gdot: 'Ä ', ge: 'â¥', gE: 'â§', gel: 'â', gEl: 'âª', geq: 'â¥', geqq: 'â§', geqslant: 'â©¾', ges: 'â©¾', gescc: 'âª©', gesdot: 'âª', gesdoto: 'âª', gesdotol: 'âª', gesl: 'âï¸', gesles: 'âª', gfr: 'ð¤', Gfr: 'ð', gg: 'â«', Gg: 'â', ggg: 'â', gimel: 'â·', gjcy: 'Ñ', GJcy: 'Ð', gl: 'â·', gla: 'âª¥', glE: 'âª', glj: 'âª¤', gnap: 'âª', gnapprox: 'âª', gne: 'âª', gnE: 'â©', gneq: 'âª', gneqq: 'â©', gnsim: 'â§', gopf: 'ð', Gopf: 'ð¾', grave: '`', GreaterEqual: 'â¥', GreaterEqualLess: 'â', GreaterFullEqual: 'â§', GreaterGreater: 'âª¢', GreaterLess: 'â·', GreaterSlantEqual: 'â©¾', GreaterTilde: 'â³', gscr: 'â', Gscr: 'ð¢', gsim: 'â³', gsime: 'âª', gsiml: 'âª', gt: '>', Gt: 'â«', GT: '>', gtcc: 'âª§', gtcir: 'â©º', gtdot: 'â', gtlPar: 'â¦', gtquest: 'â©¼', gtrapprox: 'âª', gtrarr: 'â¥¸', gtrdot: 'â', gtreqless: 'â', gtreqqless: 'âª', gtrless: 'â·', gtrsim: 'â³', gvertneqq: 'â©ï¸', gvnE: 'â©ï¸', Hacek: 'Ë', hairsp: 'â', half: 'Â½', hamilt: 'â', hardcy: 'Ñ', HARDcy: 'Ðª', harr: 'â', hArr: 'â', harrcir: 'â¥', harrw: 'â­', Hat: '^', hbar: 'â', hcirc: 'Ä¥', Hcirc: 'Ä¤', hearts: 'â¥', heartsuit: 'â¥', hellip: 'â¦', hercon: 'â¹', hfr: 'ð¥', Hfr: 'â', HilbertSpace: 'â', hksearow: 'â¤¥', hkswarow: 'â¤¦', hoarr: 'â¿', homtht: 'â»', hookleftarrow: 'â©', hookrightarrow: 'âª', hopf: 'ð', Hopf: 'â', horbar: 'â', HorizontalLine: 'â', hscr: 'ð½', Hscr: 'â', hslash: 'â', hstrok: 'Ä§', Hstrok: 'Ä¦', HumpDownHump: 'â', HumpEqual: 'â', hybull: 'â', hyphen: 'â', iacute: 'Ã­', Iacute: 'Ã', ic: 'â£', icirc: 'Ã®', Icirc: 'Ã', icy: 'Ð¸', Icy: 'Ð', Idot: 'Ä°', iecy: 'Ðµ', IEcy: 'Ð', iexcl: 'Â¡', iff: 'â', ifr: 'ð¦', Ifr: 'â', igrave: 'Ã¬', Igrave: 'Ã', ii: 'â', iiiint: 'â¨', iiint: 'â­', iinfin: 'â§', iiota: 'â©', ijlig: 'Ä³', IJlig: 'Ä²', Im: 'â', imacr: 'Ä«', Imacr: 'Äª', image: 'â', ImaginaryI: 'â', imagline: 'â', imagpart: 'â', imath: 'Ä±', imof: 'â·', imped: 'Æµ', Implies: 'â', in: 'â', incare: 'â', infin: 'â', infintie: 'â§', inodot: 'Ä±', int: 'â«', Int: 'â¬', intcal: 'âº', integers: 'â¤', Integral: 'â«', intercal: 'âº', Intersection: 'â', intlarhk: 'â¨', intprod: 'â¨¼', InvisibleComma: 'â£', InvisibleTimes: 'â¢', iocy: 'Ñ', IOcy: 'Ð', iogon: 'Ä¯', Iogon: 'Ä®', iopf: 'ð', Iopf: 'ð', iota: 'Î¹', Iota: 'Î', iprod: 'â¨¼', iquest: 'Â¿', iscr: 'ð¾', Iscr: 'â', isin: 'â', isindot: 'âµ', isinE: 'â¹', isins: 'â´', isinsv: 'â³', isinv: 'â', it: 'â¢', itilde: 'Ä©', Itilde: 'Ä¨', iukcy: 'Ñ', Iukcy: 'Ð', iuml: 'Ã¯', Iuml: 'Ã', jcirc: 'Äµ', Jcirc: 'Ä´', jcy: 'Ð¹', Jcy: 'Ð', jfr: 'ð§', Jfr: 'ð', jmath: 'È·', jopf: 'ð', Jopf: 'ð', jscr: 'ð¿', Jscr: 'ð¥', jsercy: 'Ñ', Jsercy: 'Ð', jukcy: 'Ñ', Jukcy: 'Ð', kappa: 'Îº', Kappa: 'Î', kappav: 'Ï°', kcedil: 'Ä·', Kcedil: 'Ä¶', kcy: 'Ðº', Kcy: 'Ð', kfr: 'ð¨', Kfr: 'ð', kgreen: 'Ä¸', khcy: 'Ñ', KHcy: 'Ð¥', kjcy: 'Ñ', KJcy: 'Ð', kopf: 'ð', Kopf: 'ð', kscr: 'ð', Kscr: 'ð¦', lAarr: 'â', lacute: 'Äº', Lacute: 'Ä¹', laemptyv: 'â¦´', lagran: 'â', lambda: 'Î»', Lambda: 'Î', lang: 'â¨', Lang: 'âª', langd: 'â¦', langle: 'â¨', lap: 'âª', Laplacetrf: 'â', laquo: 'Â«', larr: 'â', lArr: 'â', Larr: 'â', larrb: 'â¤', larrbfs: 'â¤', larrfs: 'â¤', larrhk: 'â©', larrlp: 'â«', larrpl: 'â¤¹', larrsim: 'â¥³', larrtl: 'â¢', lat: 'âª«', latail: 'â¤', lAtail: 'â¤', late: 'âª­', lates: 'âª­ï¸', lbarr: 'â¤', lBarr: 'â¤', lbbrk: 'â²', lbrace: '{', lbrack: '[', lbrke: 'â¦', lbrksld: 'â¦', lbrkslu: 'â¦', lcaron: 'Ä¾', Lcaron: 'Ä½', lcedil: 'Ä¼', Lcedil: 'Ä»', lceil: 'â', lcub: '{', lcy: 'Ð»', Lcy: 'Ð', ldca: 'â¤¶', ldquo: 'â', ldquor: 'â', ldrdhar: 'â¥§', ldrushar: 'â¥', ldsh: 'â²', le: 'â¤', lE: 'â¦', LeftAngleBracket: 'â¨', leftarrow: 'â', Leftarrow: 'â', LeftArrow: 'â', LeftArrowBar: 'â¤', LeftArrowRightArrow: 'â', leftarrowtail: 'â¢', LeftCeiling: 'â', LeftDoubleBracket: 'â¦', LeftDownTeeVector: 'â¥¡', LeftDownVector: 'â', LeftDownVectorBar: 'â¥', LeftFloor: 'â', leftharpoondown: 'â½', leftharpoonup: 'â¼', leftleftarrows: 'â', leftrightarrow: 'â', Leftrightarrow: 'â', LeftRightArrow: 'â', leftrightarrows: 'â', leftrightharpoons: 'â', leftrightsquigarrow: 'â­', LeftRightVector: 'â¥', LeftTee: 'â£', LeftTeeArrow: 'â¤', LeftTeeVector: 'â¥', leftthreetimes: 'â', LeftTriangle: 'â²', LeftTriangleBar: 'â§', LeftTriangleEqual: 'â´', LeftUpDownVector: 'â¥', LeftUpTeeVector: 'â¥ ', LeftUpVector: 'â¿', LeftUpVectorBar: 'â¥', LeftVector: 'â¼', LeftVectorBar: 'â¥', leg: 'â', lEg: 'âª', leq: 'â¤', leqq: 'â¦', leqslant: 'â©½', les: 'â©½', lescc: 'âª¨', lesdot: 'â©¿', lesdoto: 'âª', lesdotor: 'âª', lesg: 'âï¸', lesges: 'âª', lessapprox: 'âª', lessdot: 'â', lesseqgtr: 'â', lesseqqgtr: 'âª', LessEqualGreater: 'â', LessFullEqual: 'â¦', LessGreater: 'â¶', lessgtr: 'â¶', LessLess: 'âª¡', lesssim: 'â²', LessSlantEqual: 'â©½', LessTilde: 'â²', lfisht: 'â¥¼', lfloor: 'â', lfr: 'ð©', Lfr: 'ð', lg: 'â¶', lgE: 'âª', lHar: 'â¥¢', lhard: 'â½', lharu: 'â¼', lharul: 'â¥ª', lhblk: 'â', ljcy: 'Ñ', LJcy: 'Ð', ll: 'âª', Ll: 'â', llarr: 'â', llcorner: 'â', Lleftarrow: 'â', llhard: 'â¥«', lltri: 'âº', lmidot: 'Å', Lmidot: 'Ä¿', lmoust: 'â°', lmoustache: 'â°', lnap: 'âª', lnapprox: 'âª', lne: 'âª', lnE: 'â¨', lneq: 'âª', lneqq: 'â¨', lnsim: 'â¦', loang: 'â¬', loarr: 'â½', lobrk: 'â¦', longleftarrow: 'âµ', Longleftarrow: 'â¸', LongLeftArrow: 'âµ', longleftrightarrow: 'â·', Longleftrightarrow: 'âº', LongLeftRightArrow: 'â·', longmapsto: 'â¼', longrightarrow: 'â¶', Longrightarrow: 'â¹', LongRightArrow: 'â¶', looparrowleft: 'â«', looparrowright: 'â¬', lopar: 'â¦', lopf: 'ð', Lopf: 'ð', loplus: 'â¨­', lotimes: 'â¨´', lowast: 'â', lowbar: '_', LowerLeftArrow: 'â', LowerRightArrow: 'â', loz: 'â', lozenge: 'â', lozf: 'â§«', lpar: '(', lparlt: 'â¦', lrarr: 'â', lrcorner: 'â', lrhar: 'â', lrhard: 'â¥­', lrm: 'â', lrtri: 'â¿', lsaquo: 'â¹', lscr: 'ð', Lscr: 'â', lsh: 'â°', Lsh: 'â°', lsim: 'â²', lsime: 'âª', lsimg: 'âª', lsqb: '[', lsquo: 'â', lsquor: 'â', lstrok: 'Å', Lstrok: 'Å', lt: '<', Lt: 'âª', LT: '<', ltcc: 'âª¦', ltcir: 'â©¹', ltdot: 'â', lthree: 'â', ltimes: 'â', ltlarr: 'â¥¶', ltquest: 'â©»', ltri: 'â', ltrie: 'â´', ltrif: 'â', ltrPar: 'â¦', lurdshar: 'â¥', luruhar: 'â¥¦', lvertneqq: 'â¨ï¸', lvnE: 'â¨ï¸', macr: 'Â¯', male: 'â', malt: 'â ', maltese: 'â ', map: 'â¦', Map: 'â¤', mapsto: 'â¦', mapstodown: 'â§', mapstoleft: 'â¤', mapstoup: 'â¥', marker: 'â®', mcomma: 'â¨©', mcy: 'Ð¼', Mcy: 'Ð', mdash: 'â', mDDot: 'âº', measuredangle: 'â¡', MediumSpace: 'â', Mellintrf: 'â³', mfr: 'ðª', Mfr: 'ð', mho: 'â§', micro: 'Âµ', mid: 'â£', midast: '*', midcir: 'â«°', middot: 'Â·', minus: 'â', minusb: 'â', minusd: 'â¸', minusdu: 'â¨ª', MinusPlus: 'â', mlcp: 'â«', mldr: 'â¦', mnplus: 'â', models: 'â§', mopf: 'ð', Mopf: 'ð', mp: 'â', mscr: 'ð', Mscr: 'â³', mstpos: 'â¾', mu: 'Î¼', Mu: 'Î', multimap: 'â¸', mumap: 'â¸', nabla: 'â', nacute: 'Å', Nacute: 'Å', nang: 'â â', nap: 'â', napE: 'â©°Ì¸', napid: 'âÌ¸', napos: 'Å', napprox: 'â', natur: 'â®', natural: 'â®', naturals: 'â', nbsp: 'Â ', nbump: 'âÌ¸', nbumpe: 'âÌ¸', ncap: 'â©', ncaron: 'Å', Ncaron: 'Å', ncedil: 'Å', Ncedil: 'Å', ncong: 'â', ncongdot: 'â©­Ì¸', ncup: 'â©', ncy: 'Ð½', Ncy: 'Ð', ndash: 'â', ne: 'â ', nearhk: 'â¤¤', nearr: 'â', neArr: 'â', nearrow: 'â', nedot: 'âÌ¸', NegativeMediumSpace: 'â', NegativeThickSpace: 'â', NegativeThinSpace: 'â', NegativeVeryThinSpace: 'â', nequiv: 'â¢', nesear: 'â¤¨', nesim: 'âÌ¸', NestedGreaterGreater: 'â«', NestedLessLess: 'âª', NewLine: '\n', nexist: 'â', nexists: 'â', nfr: 'ð«', Nfr: 'ð', nge: 'â±', ngE: 'â§Ì¸', ngeq: 'â±', ngeqq: 'â§Ì¸', ngeqslant: 'â©¾Ì¸', nges: 'â©¾Ì¸', nGg: 'âÌ¸', ngsim: 'âµ', ngt: 'â¯', nGt: 'â«â', ngtr: 'â¯', nGtv: 'â«Ì¸', nharr: 'â®', nhArr: 'â', nhpar: 'â«²', ni: 'â', nis: 'â¼', nisd: 'âº', niv: 'â', njcy: 'Ñ', NJcy: 'Ð', nlarr: 'â', nlArr: 'â', nldr: 'â¥', nle: 'â°', nlE: 'â¦Ì¸', nleftarrow: 'â', nLeftarrow: 'â', nleftrightarrow: 'â®', nLeftrightarrow: 'â', nleq: 'â°', nleqq: 'â¦Ì¸', nleqslant: 'â©½Ì¸', nles: 'â©½Ì¸', nless: 'â®', nLl: 'âÌ¸', nlsim: 'â´', nlt: 'â®', nLt: 'âªâ', nltri: 'âª', nltrie: 'â¬', nLtv: 'âªÌ¸', nmid: 'â¤', NoBreak: 'â ', NonBreakingSpace: 'Â ', nopf: 'ð', Nopf: 'â', not: 'Â¬', Not: 'â«¬', NotCongruent: 'â¢', NotCupCap: 'â­', NotDoubleVerticalBar: 'â¦', NotElement: 'â', NotEqual: 'â ', NotEqualTilde: 'âÌ¸', NotExists: 'â', NotGreater: 'â¯', NotGreaterEqual: 'â±', NotGreaterFullEqual: 'â§Ì¸', NotGreaterGreater: 'â«Ì¸', NotGreaterLess: 'â¹', NotGreaterSlantEqual: 'â©¾Ì¸', NotGreaterTilde: 'âµ', NotHumpDownHump: 'âÌ¸', NotHumpEqual: 'âÌ¸', notin: 'â', notindot: 'âµÌ¸', notinE: 'â¹Ì¸', notinva: 'â', notinvb: 'â·', notinvc: 'â¶', NotLeftTriangle: 'âª', NotLeftTriangleBar: 'â§Ì¸', NotLeftTriangleEqual: 'â¬', NotLess: 'â®', NotLessEqual: 'â°', NotLessGreater: 'â¸', NotLessLess: 'âªÌ¸', NotLessSlantEqual: 'â©½Ì¸', NotLessTilde: 'â´', NotNestedGreaterGreater: 'âª¢Ì¸', NotNestedLessLess: 'âª¡Ì¸', notni: 'â', notniva: 'â', notnivb: 'â¾', notnivc: 'â½', NotPrecedes: 'â', NotPrecedesEqual: 'âª¯Ì¸', NotPrecedesSlantEqual: 'â ', NotReverseElement: 'â', NotRightTriangle: 'â«', NotRightTriangleBar: 'â§Ì¸', NotRightTriangleEqual: 'â­', NotSquareSubset: 'âÌ¸', NotSquareSubsetEqual: 'â¢', NotSquareSuperset: 'âÌ¸', NotSquareSupersetEqual: 'â£', NotSubset: 'ââ', NotSubsetEqual: 'â', NotSucceeds: 'â', NotSucceedsEqual: 'âª°Ì¸', NotSucceedsSlantEqual: 'â¡', NotSucceedsTilde: 'â¿Ì¸', NotSuperset: 'ââ', NotSupersetEqual: 'â', NotTilde: 'â', NotTildeEqual: 'â', NotTildeFullEqual: 'â', NotTildeTilde: 'â', NotVerticalBar: 'â¤', npar: 'â¦', nparallel: 'â¦', nparsl: 'â«½â¥', npart: 'âÌ¸', npolint: 'â¨', npr: 'â', nprcue: 'â ', npre: 'âª¯Ì¸', nprec: 'â', npreceq: 'âª¯Ì¸', nrarr: 'â', nrArr: 'â', nrarrc: 'â¤³Ì¸', nrarrw: 'âÌ¸', nrightarrow: 'â', nRightarrow: 'â', nrtri: 'â«', nrtrie: 'â­', nsc: 'â', nsccue: 'â¡', nsce: 'âª°Ì¸', nscr: 'ð', Nscr: 'ð©', nshortmid: 'â¤', nshortparallel: 'â¦', nsim: 'â', nsime: 'â', nsimeq: 'â', nsmid: 'â¤', nspar: 'â¦', nsqsube: 'â¢', nsqsupe: 'â£', nsub: 'â', nsube: 'â', nsubE: 'â«Ì¸', nsubset: 'ââ', nsubseteq: 'â', nsubseteqq: 'â«Ì¸', nsucc: 'â', nsucceq: 'âª°Ì¸', nsup: 'â', nsupe: 'â', nsupE: 'â«Ì¸', nsupset: 'ââ', nsupseteq: 'â', nsupseteqq: 'â«Ì¸', ntgl: 'â¹', ntilde: 'Ã±', Ntilde: 'Ã', ntlg: 'â¸', ntriangleleft: 'âª', ntrianglelefteq: 'â¬', ntriangleright: 'â«', ntrianglerighteq: 'â­', nu: 'Î½', Nu: 'Î', num: '#', numero: 'â', numsp: 'â', nvap: 'ââ', nvdash: 'â¬', nvDash: 'â­', nVdash: 'â®', nVDash: 'â¯', nvge: 'â¥â', nvgt: '>â', nvHarr: 'â¤', nvinfin: 'â§', nvlArr: 'â¤', nvle: 'â¤â', nvlt: '<â', nvltrie: 'â´â', nvrArr: 'â¤', nvrtrie: 'âµâ', nvsim: 'â¼â', nwarhk: 'â¤£', nwarr: 'â', nwArr: 'â', nwarrow: 'â', nwnear: 'â¤§', oacute: 'Ã³', Oacute: 'Ã', oast: 'â', ocir: 'â', ocirc: 'Ã´', Ocirc: 'Ã', ocy: 'Ð¾', Ocy: 'Ð', odash: 'â', odblac: 'Å', Odblac: 'Å', odiv: 'â¨¸', odot: 'â', odsold: 'â¦¼', oelig: 'Å', OElig: 'Å', ofcir: 'â¦¿', ofr: 'ð¬', Ofr: 'ð', ogon: 'Ë', ograve: 'Ã²', Ograve: 'Ã', ogt: 'â§', ohbar: 'â¦µ', ohm: 'Î©', oint: 'â®', olarr: 'âº', olcir: 'â¦¾', olcross: 'â¦»', oline: 'â¾', olt: 'â§', omacr: 'Å', Omacr: 'Å', omega: 'Ï', Omega: 'Î©', omicron: 'Î¿', Omicron: 'Î', omid: 'â¦¶', ominus: 'â', oopf: 'ð ', Oopf: 'ð', opar: 'â¦·', OpenCurlyDoubleQuote: 'â', OpenCurlyQuote: 'â', operp: 'â¦¹', oplus: 'â', or: 'â¨', Or: 'â©', orarr: 'â»', ord: 'â©', order: 'â´', orderof: 'â´', ordf: 'Âª', ordm: 'Âº', origof: 'â¶', oror: 'â©', orslope: 'â©', orv: 'â©', oS: 'â', oscr: 'â´', Oscr: 'ðª', oslash: 'Ã¸', Oslash: 'Ã', osol: 'â', otilde: 'Ãµ', Otilde: 'Ã', otimes: 'â', Otimes: 'â¨·', otimesas: 'â¨¶', ouml: 'Ã¶', Ouml: 'Ã', ovbar: 'â½', OverBar: 'â¾', OverBrace: 'â', OverBracket: 'â´', OverParenthesis: 'â', par: 'â¥', para: 'Â¶', parallel: 'â¥', parsim: 'â«³', parsl: 'â«½', part: 'â', PartialD: 'â', pcy: 'Ð¿', Pcy: 'Ð', percnt: '%', period: '.', permil: 'â°', perp: 'â¥', pertenk: 'â±', pfr: 'ð­', Pfr: 'ð', phi: 'Ï', Phi: 'Î¦', phiv: 'Ï', phmmat: 'â³', phone: 'â', pi: 'Ï', Pi: 'Î ', pitchfork: 'â', piv: 'Ï', planck: 'â', planckh: 'â', plankv: 'â', plus: '+', plusacir: 'â¨£', plusb: 'â', pluscir: 'â¨¢', plusdo: 'â', plusdu: 'â¨¥', pluse: 'â©²', PlusMinus: 'Â±', plusmn: 'Â±', plussim: 'â¨¦', plustwo: 'â¨§', pm: 'Â±', Poincareplane: 'â', pointint: 'â¨', popf: 'ð¡', Popf: 'â', pound: 'Â£', pr: 'âº', Pr: 'âª»', prap: 'âª·', prcue: 'â¼', pre: 'âª¯', prE: 'âª³', prec: 'âº', precapprox: 'âª·', preccurlyeq: 'â¼', Precedes: 'âº', PrecedesEqual: 'âª¯', PrecedesSlantEqual: 'â¼', PrecedesTilde: 'â¾', preceq: 'âª¯', precnapprox: 'âª¹', precneqq: 'âªµ', precnsim: 'â¨', precsim: 'â¾', prime: 'â²', Prime: 'â³', primes: 'â', prnap: 'âª¹', prnE: 'âªµ', prnsim: 'â¨', prod: 'â', Product: 'â', profalar: 'â®', profline: 'â', profsurf: 'â', prop: 'â', Proportion: 'â·', Proportional: 'â', propto: 'â', prsim: 'â¾', prurel: 'â°', pscr: 'ð', Pscr: 'ð«', psi: 'Ï', Psi: 'Î¨', puncsp: 'â', qfr: 'ð®', Qfr: 'ð', qint: 'â¨', qopf: 'ð¢', Qopf: 'â', qprime: 'â', qscr: 'ð', Qscr: 'ð¬', quaternions: 'â', quatint: 'â¨', quest: '?', questeq: 'â', quot: '"', QUOT: '"', rAarr: 'â', race: 'â½Ì±', racute: 'Å', Racute: 'Å', radic: 'â', raemptyv: 'â¦³', rang: 'â©', Rang: 'â«', rangd: 'â¦', range: 'â¦¥', rangle: 'â©', raquo: 'Â»', rarr: 'â', rArr: 'â', Rarr: 'â ', rarrap: 'â¥µ', rarrb: 'â¥', rarrbfs: 'â¤ ', rarrc: 'â¤³', rarrfs: 'â¤', rarrhk: 'âª', rarrlp: 'â¬', rarrpl: 'â¥', rarrsim: 'â¥´', rarrtl: 'â£', Rarrtl: 'â¤', rarrw: 'â', ratail: 'â¤', rAtail: 'â¤', ratio: 'â¶', rationals: 'â', rbarr: 'â¤', rBarr: 'â¤', RBarr: 'â¤', rbbrk: 'â³', rbrace: '}', rbrack: ']', rbrke: 'â¦', rbrksld: 'â¦', rbrkslu: 'â¦', rcaron: 'Å', Rcaron: 'Å', rcedil: 'Å', Rcedil: 'Å', rceil: 'â', rcub: '}', rcy: 'Ñ', Rcy: 'Ð ', rdca: 'â¤·', rdldhar: 'â¥©', rdquo: 'â', rdquor: 'â', rdsh: 'â³', Re: 'â', real: 'â', realine: 'â', realpart: 'â', reals: 'â', rect: 'â­', reg: 'Â®', REG: 'Â®', ReverseElement: 'â', ReverseEquilibrium: 'â', ReverseUpEquilibrium: 'â¥¯', rfisht: 'â¥½', rfloor: 'â', rfr: 'ð¯', Rfr: 'â', rHar: 'â¥¤', rhard: 'â', rharu: 'â', rharul: 'â¥¬', rho: 'Ï', Rho: 'Î¡', rhov: 'Ï±', RightAngleBracket: 'â©', rightarrow: 'â', Rightarrow: 'â', RightArrow: 'â', RightArrowBar: 'â¥', RightArrowLeftArrow: 'â', rightarrowtail: 'â£', RightCeiling: 'â', RightDoubleBracket: 'â§', RightDownTeeVector: 'â¥', RightDownVector: 'â', RightDownVectorBar: 'â¥', RightFloor: 'â', rightharpoondown: 'â', rightharpoonup: 'â', rightleftarrows: 'â', rightleftharpoons: 'â', rightrightarrows: 'â', rightsquigarrow: 'â', RightTee: 'â¢', RightTeeArrow: 'â¦', RightTeeVector: 'â¥', rightthreetimes: 'â', RightTriangle: 'â³', RightTriangleBar: 'â§', RightTriangleEqual: 'âµ', RightUpDownVector: 'â¥', RightUpTeeVector: 'â¥', RightUpVector: 'â¾', RightUpVectorBar: 'â¥', RightVector: 'â', RightVectorBar: 'â¥', ring: 'Ë', risingdotseq: 'â', rlarr: 'â', rlhar: 'â', rlm: 'â', rmoust: 'â±', rmoustache: 'â±', rnmid: 'â«®', roang: 'â­', roarr: 'â¾', robrk: 'â§', ropar: 'â¦', ropf: 'ð£', Ropf: 'â', roplus: 'â¨®', rotimes: 'â¨µ', RoundImplies: 'â¥°', rpar: ')', rpargt: 'â¦', rppolint: 'â¨', rrarr: 'â', Rrightarrow: 'â', rsaquo: 'âº', rscr: 'ð', Rscr: 'â', rsh: 'â±', Rsh: 'â±', rsqb: ']', rsquo: 'â', rsquor: 'â', rthree: 'â', rtimes: 'â', rtri: 'â¹', rtrie: 'âµ', rtrif: 'â¸', rtriltri: 'â§', RuleDelayed: 'â§´', ruluhar: 'â¥¨', rx: 'â', sacute: 'Å', Sacute: 'Å', sbquo: 'â', sc: 'â»', Sc: 'âª¼', scap: 'âª¸', scaron: 'Å¡', Scaron: 'Å ', sccue: 'â½', sce: 'âª°', scE: 'âª´', scedil: 'Å', Scedil: 'Å', scirc: 'Å', Scirc: 'Å', scnap: 'âªº', scnE: 'âª¶', scnsim: 'â©', scpolint: 'â¨', scsim: 'â¿', scy: 'Ñ', Scy: 'Ð¡', sdot: 'â', sdotb: 'â¡', sdote: 'â©¦', searhk: 'â¤¥', searr: 'â', seArr: 'â', searrow: 'â', sect: 'Â§', semi: ';', seswar: 'â¤©', setminus: 'â', setmn: 'â', sext: 'â¶', sfr: 'ð°', Sfr: 'ð', sfrown: 'â¢', sharp: 'â¯', shchcy: 'Ñ', SHCHcy: 'Ð©', shcy: 'Ñ', SHcy: 'Ð¨', ShortDownArrow: 'â', ShortLeftArrow: 'â', shortmid: 'â£', shortparallel: 'â¥', ShortRightArrow: 'â', ShortUpArrow: 'â', shy: 'Â­', sigma: 'Ï', Sigma: 'Î£', sigmaf: 'Ï', sigmav: 'Ï', sim: 'â¼', simdot: 'â©ª', sime: 'â', simeq: 'â', simg: 'âª', simgE: 'âª ', siml: 'âª', simlE: 'âª', simne: 'â', simplus: 'â¨¤', simrarr: 'â¥²', slarr: 'â', SmallCircle: 'â', smallsetminus: 'â', smashp: 'â¨³', smeparsl: 'â§¤', smid: 'â£', smile: 'â£', smt: 'âªª', smte: 'âª¬', smtes: 'âª¬ï¸', softcy: 'Ñ', SOFTcy: 'Ð¬', sol: '/', solb: 'â§', solbar: 'â¿', sopf: 'ð¤', Sopf: 'ð', spades: 'â ', spadesuit: 'â ', spar: 'â¥', sqcap: 'â', sqcaps: 'âï¸', sqcup: 'â', sqcups: 'âï¸', Sqrt: 'â', sqsub: 'â', sqsube: 'â', sqsubset: 'â', sqsubseteq: 'â', sqsup: 'â', sqsupe: 'â', sqsupset: 'â', sqsupseteq: 'â', squ: 'â¡', square: 'â¡', Square: 'â¡', SquareIntersection: 'â', SquareSubset: 'â', SquareSubsetEqual: 'â', SquareSuperset: 'â', SquareSupersetEqual: 'â', SquareUnion: 'â', squarf: 'âª', squf: 'âª', srarr: 'â', sscr: 'ð', Sscr: 'ð®', ssetmn: 'â', ssmile: 'â£', sstarf: 'â', star: 'â', Star: 'â', starf: 'â', straightepsilon: 'Ïµ', straightphi: 'Ï', strns: 'Â¯', sub: 'â', Sub: 'â', subdot: 'âª½', sube: 'â', subE: 'â«', subedot: 'â«', submult: 'â«', subne: 'â', subnE: 'â«', subplus: 'âª¿', subrarr: 'â¥¹', subset: 'â', Subset: 'â', subseteq: 'â', subseteqq: 'â«', SubsetEqual: 'â', subsetneq: 'â', subsetneqq: 'â«', subsim: 'â«', subsub: 'â«', subsup: 'â«', succ: 'â»', succapprox: 'âª¸', succcurlyeq: 'â½', Succeeds: 'â»', SucceedsEqual: 'âª°', SucceedsSlantEqual: 'â½', SucceedsTilde: 'â¿', succeq: 'âª°', succnapprox: 'âªº', succneqq: 'âª¶', succnsim: 'â©', succsim: 'â¿', SuchThat: 'â', sum: 'â', Sum: 'â', sung: 'âª', sup: 'â', Sup: 'â', sup1: 'Â¹', sup2: 'Â²', sup3: 'Â³', supdot: 'âª¾', supdsub: 'â«', supe: 'â', supE: 'â«', supedot: 'â«', Superset: 'â', SupersetEqual: 'â', suphsol: 'â', suphsub: 'â«', suplarr: 'â¥»', supmult: 'â«', supne: 'â', supnE: 'â«', supplus: 'â«', supset: 'â', Supset: 'â', supseteq: 'â', supseteqq: 'â«', supsetneq: 'â', supsetneqq: 'â«', supsim: 'â«', supsub: 'â«', supsup: 'â«', swarhk: 'â¤¦', swarr: 'â', swArr: 'â', swarrow: 'â', swnwar: 'â¤ª', szlig: 'Ã', Tab: '\t', target: 'â', tau: 'Ï', Tau: 'Î¤', tbrk: 'â´', tcaron: 'Å¥', Tcaron: 'Å¤', tcedil: 'Å£', Tcedil: 'Å¢', tcy: 'Ñ', Tcy: 'Ð¢', tdot: 'â', telrec: 'â', tfr: 'ð±', Tfr: 'ð', there4: 'â´', therefore: 'â´', Therefore: 'â´', theta: 'Î¸', Theta: 'Î', thetasym: 'Ï', thetav: 'Ï', thickapprox: 'â', thicksim: 'â¼', ThickSpace: 'ââ', thinsp: 'â', ThinSpace: 'â', thkap: 'â', thksim: 'â¼', thorn: 'Ã¾', THORN: 'Ã', tilde: 'Ë', Tilde: 'â¼', TildeEqual: 'â', TildeFullEqual: 'â', TildeTilde: 'â', times: 'Ã', timesb: 'â ', timesbar: 'â¨±', timesd: 'â¨°', tint: 'â­', toea: 'â¤¨', top: 'â¤', topbot: 'â¶', topcir: 'â«±', topf: 'ð¥', Topf: 'ð', topfork: 'â«', tosa: 'â¤©', tprime: 'â´', trade: 'â¢', TRADE: 'â¢', triangle: 'âµ', triangledown: 'â¿', triangleleft: 'â', trianglelefteq: 'â´', triangleq: 'â', triangleright: 'â¹', trianglerighteq: 'âµ', tridot: 'â¬', trie: 'â', triminus: 'â¨º', TripleDot: 'â', triplus: 'â¨¹', trisb: 'â§', tritime: 'â¨»', trpezium: 'â¢', tscr: 'ð', Tscr: 'ð¯', tscy: 'Ñ', TScy: 'Ð¦', tshcy: 'Ñ', TSHcy: 'Ð', tstrok: 'Å§', Tstrok: 'Å¦', twixt: 'â¬', twoheadleftarrow: 'â', twoheadrightarrow: 'â ', uacute: 'Ãº', Uacute: 'Ã', uarr: 'â', uArr: 'â', Uarr: 'â', Uarrocir: 'â¥', ubrcy: 'Ñ', Ubrcy: 'Ð', ubreve: 'Å­', Ubreve: 'Å¬', ucirc: 'Ã»', Ucirc: 'Ã', ucy: 'Ñ', Ucy: 'Ð£', udarr: 'â', udblac: 'Å±', Udblac: 'Å°', udhar: 'â¥®', ufisht: 'â¥¾', ufr: 'ð²', Ufr: 'ð', ugrave: 'Ã¹', Ugrave: 'Ã', uHar: 'â¥£', uharl: 'â¿', uharr: 'â¾', uhblk: 'â', ulcorn: 'â', ulcorner: 'â', ulcrop: 'â', ultri: 'â¸', umacr: 'Å«', Umacr: 'Åª', uml: 'Â¨', UnderBar: '_', UnderBrace: 'â', UnderBracket: 'âµ', UnderParenthesis: 'â', Union: 'â', UnionPlus: 'â', uogon: 'Å³', Uogon: 'Å²', uopf: 'ð¦', Uopf: 'ð', uparrow: 'â', Uparrow: 'â', UpArrow: 'â', UpArrowBar: 'â¤', UpArrowDownArrow: 'â', updownarrow: 'â', Updownarrow: 'â', UpDownArrow: 'â', UpEquilibrium: 'â¥®', upharpoonleft: 'â¿', upharpoonright: 'â¾', uplus: 'â', UpperLeftArrow: 'â', UpperRightArrow: 'â', upsi: 'Ï', Upsi: 'Ï', upsih: 'Ï', upsilon: 'Ï', Upsilon: 'Î¥', UpTee: 'â¥', UpTeeArrow: 'â¥', upuparrows: 'â', urcorn: 'â', urcorner: 'â', urcrop: 'â', uring: 'Å¯', Uring: 'Å®', urtri: 'â¹', uscr: 'ð', Uscr: 'ð°', utdot: 'â°', utilde: 'Å©', Utilde: 'Å¨', utri: 'âµ', utrif: 'â´', uuarr: 'â', uuml: 'Ã¼', Uuml: 'Ã', uwangle: 'â¦§', vangrt: 'â¦', varepsilon: 'Ïµ', varkappa: 'Ï°', varnothing: 'â', varphi: 'Ï', varpi: 'Ï', varpropto: 'â', varr: 'â', vArr: 'â', varrho: 'Ï±', varsigma: 'Ï', varsubsetneq: 'âï¸', varsubsetneqq: 'â«ï¸', varsupsetneq: 'âï¸', varsupsetneqq: 'â«ï¸', vartheta: 'Ï', vartriangleleft: 'â²', vartriangleright: 'â³', vBar: 'â«¨', Vbar: 'â««', vBarv: 'â«©', vcy: 'Ð²', Vcy: 'Ð', vdash: 'â¢', vDash: 'â¨', Vdash: 'â©', VDash: 'â«', Vdashl: 'â«¦', vee: 'â¨', Vee: 'â', veebar: 'â»', veeeq: 'â', vellip: 'â®', verbar: '|', Verbar: 'â', vert: '|', Vert: 'â', VerticalBar: 'â£', VerticalLine: '|', VerticalSeparator: 'â', VerticalTilde: 'â', VeryThinSpace: 'â', vfr: 'ð³', Vfr: 'ð', vltri: 'â²', vnsub: 'ââ', vnsup: 'ââ', vopf: 'ð§', Vopf: 'ð', vprop: 'â', vrtri: 'â³', vscr: 'ð', Vscr: 'ð±', vsubne: 'âï¸', vsubnE: 'â«ï¸', vsupne: 'âï¸', vsupnE: 'â«ï¸', Vvdash: 'âª', vzigzag: 'â¦', wcirc: 'Åµ', Wcirc: 'Å´', wedbar: 'â©', wedge: 'â§', Wedge: 'â', wedgeq: 'â', weierp: 'â', wfr: 'ð´', Wfr: 'ð', wopf: 'ð¨', Wopf: 'ð', wp: 'â', wr: 'â', wreath: 'â', wscr: 'ð', Wscr: 'ð²', xcap: 'â', xcirc: 'â¯', xcup: 'â', xdtri: 'â½', xfr: 'ðµ', Xfr: 'ð', xharr: 'â·', xhArr: 'âº', xi: 'Î¾', Xi: 'Î', xlarr: 'âµ', xlArr: 'â¸', xmap: 'â¼', xnis: 'â»', xodot: 'â¨', xopf: 'ð©', Xopf: 'ð', xoplus: 'â¨', xotime: 'â¨', xrarr: 'â¶', xrArr: 'â¹', xscr: 'ð', Xscr: 'ð³', xsqcup: 'â¨', xuplus: 'â¨', xutri: 'â³', xvee: 'â', xwedge: 'â', yacute: 'Ã½', Yacute: 'Ã', yacy: 'Ñ', YAcy: 'Ð¯', ycirc: 'Å·', Ycirc: 'Å¶', ycy: 'Ñ', Ycy: 'Ð«', yen: 'Â¥', yfr: 'ð¶', Yfr: 'ð', yicy: 'Ñ', YIcy: 'Ð', yopf: 'ðª', Yopf: 'ð', yscr: 'ð', Yscr: 'ð´', yucy: 'Ñ', YUcy: 'Ð®', yuml: 'Ã¿', Yuml: 'Å¸', zacute: 'Åº', Zacute: 'Å¹', zcaron: 'Å¾', Zcaron: 'Å½', zcy: 'Ð·', Zcy: 'Ð', zdot: 'Å¼', Zdot: 'Å»', zeetrf: 'â¨', ZeroWidthSpace: 'â', zeta: 'Î¶', Zeta: 'Î', zfr: 'ð·', Zfr: 'â¨', zhcy: 'Ð¶', ZHcy: 'Ð', zigrarr: 'â', zopf: 'ð«', Zopf: 'â¤', zscr: 'ð', Zscr: 'ðµ', zwj: 'â', zwnj: 'â' }; const E = { aacute: 'Ã¡', Aacute: 'Ã', acirc: 'Ã¢', Acirc: 'Ã', acute: 'Â´', aelig: 'Ã¦', AElig: 'Ã', agrave: 'Ã ', Agrave: 'Ã', amp: '&', AMP: '&', aring: 'Ã¥', Aring: 'Ã', atilde: 'Ã£', Atilde: 'Ã', auml: 'Ã¤', Auml: 'Ã', brvbar: 'Â¦', ccedil: 'Ã§', Ccedil: 'Ã', cedil: 'Â¸', cent: 'Â¢', copy: 'Â©', COPY: 'Â©', curren: 'Â¤', deg: 'Â°', divide: 'Ã·', eacute: 'Ã©', Eacute: 'Ã', ecirc: 'Ãª', Ecirc: 'Ã', egrave: 'Ã¨', Egrave: 'Ã', eth: 'Ã°', ETH: 'Ã', euml: 'Ã«', Euml: 'Ã', frac12: 'Â½', frac14: 'Â¼', frac34: 'Â¾', gt: '>', GT: '>', iacute: 'Ã­', Iacute: 'Ã', icirc: 'Ã®', Icirc: 'Ã', iexcl: 'Â¡', igrave: 'Ã¬', Igrave: 'Ã', iquest: 'Â¿', iuml: 'Ã¯', Iuml: 'Ã', laquo: 'Â«', lt: '<', LT: '<', macr: 'Â¯', micro: 'Âµ', middot: 'Â·', nbsp: 'Â ', not: 'Â¬', ntilde: 'Ã±', Ntilde: 'Ã', oacute: 'Ã³', Oacute: 'Ã', ocirc: 'Ã´', Ocirc: 'Ã', ograve: 'Ã²', Ograve: 'Ã', ordf: 'Âª', ordm: 'Âº', oslash: 'Ã¸', Oslash: 'Ã', otilde: 'Ãµ', Otilde: 'Ã', ouml: 'Ã¶', Ouml: 'Ã', para: 'Â¶', plusmn: 'Â±', pound: 'Â£', quot: '"', QUOT: '"', raquo: 'Â»', reg: 'Â®', REG: 'Â®', sect: 'Â§', shy: 'Â­', sup1: 'Â¹', sup2: 'Â²', sup3: 'Â³', szlig: 'Ã', thorn: 'Ã¾', THORN: 'Ã', times: 'Ã', uacute: 'Ãº', Uacute: 'Ã', ucirc: 'Ã»', Ucirc: 'Ã', ugrave: 'Ã¹', Ugrave: 'Ã', uml: 'Â¨', uuml: 'Ã¼', Uuml: 'Ã', yacute: 'Ã½', Yacute: 'Ã', yen: 'Â¥', yuml: 'Ã¿' }; var T = { 0: 'ï¿½', 128: 'â¬', 130: 'â', 131: 'Æ', 132: 'â', 133: 'â¦', 134: 'â ', 135: 'â¡', 136: 'Ë', 137: 'â°', 138: 'Å ', 139: 'â¹', 140: 'Å', 142: 'Å½', 145: 'â', 146: 'â', 147: 'â', 148: 'â', 149: 'â¢', 150: 'â', 151: 'â', 152: 'Ë', 153: 'â¢', 154: 'Å¡', 155: 'âº', 156: 'Å', 158: 'Å¾', 159: 'Å¸' }; var A = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65e3, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]; var _ = String.fromCharCode; var S = {}.hasOwnProperty; var x = function (e) { throw Error('Parse error: ' + e) }; var n = function e (t, h) { const p = (h = u(h, e.options)).strict; return p && o.test(t) && x('malformed character reference'), t.replace(a, function (e, t, r, n, i, o, a, s, u) { let c, l, f; return t ? w[f = t] : r ? (f = r, (n = n) && h.isAttributeValue ? (p && n == '=' && x('`&` did not start a character reference'), e) : (p && x('named character reference was not terminated by a semicolon'), E[f] + (n || ''))) : i ? (l = i, c = o, p && !c && x('character reference was not terminated by a semicolon'), l = parseInt(l, 10), d(l, p)) : a ? (a = a, c = s, p && !c && x('character reference was not terminated by a semicolon'), l = parseInt(a, 16), d(l, p)) : (p && x('named character reference was not terminated by a semicolon'), e) }) }; n.options = { isAttributeValue: !(f.options = { allowUnsafeSymbols: !1, encodeEverything: !1, strict: !1, useNamedReferences: !1, decimal: !1 }), strict: !1 }; const R = { version: '1.2.0', encode: f, decode: n, escape: function (e) { return e.replace(v, function (e) { return i[e] }) }, unescape: n }; if (t && !t.nodeType) { if (r) { r.exports = R } else { for (const N in R) { s(R, N) && (t[N] = R[N]) } } } else { e.he = R } }(O)) }); const uh = d.f; var Vl = function (s) { return function (e) { for (var t, r = c(e), n = ft(r), i = n.length, o = 0, a = []; o < i;) { t = n[o++], I && !uh.call(r, t) || a.push(s ? [t, r[t]] : r[t]) } return a } }; const ch = { entries: Vl(!0), values: Vl(!1) }.values; ue({ target: 'Object', stat: !0 }, { values: function (e) { return ch(e) } }); function lh (e, t) { tr.emitWarning ? tr.emitWarning(e, t) : Jt(function () { console.warn(t + ': ' + e) }) } function fh (e) { (e = String(e)) && !fh.cache[e] && (fh.cache[e] = !0, lh(e, 'DeprecationWarning')) } const hh = Vu.format; fh.cache = {}; const ph = { FATAL: 'ERR_MOCHA_FATAL', INVALID_ARG_TYPE: 'ERR_MOCHA_INVALID_ARG_TYPE', INVALID_ARG_VALUE: 'ERR_MOCHA_INVALID_ARG_VALUE', INVALID_EXCEPTION: 'ERR_MOCHA_INVALID_EXCEPTION', INVALID_INTERFACE: 'ERR_MOCHA_INVALID_INTERFACE', INVALID_REPORTER: 'ERR_MOCHA_INVALID_REPORTER', MULTIPLE_DONE: 'ERR_MOCHA_MULTIPLE_DONE', NO_FILES_MATCH_PATTERN: 'ERR_MOCHA_NO_FILES_MATCH_PATTERN', UNSUPPORTED: 'ERR_MOCHA_UNSUPPORTED', INSTANCE_ALREADY_RUNNING: 'ERR_MOCHA_INSTANCE_ALREADY_RUNNING', INSTANCE_ALREADY_DISPOSED: 'ERR_MOCHA_INSTANCE_ALREADY_DISPOSED', FORBIDDEN_EXCLUSIVITY: 'ERR_MOCHA_FORBIDDEN_EXCLUSIVITY', INVALID_PLUGIN_IMPLEMENTATION: 'ERR_MOCHA_INVALID_PLUGIN_IMPLEMENTATION', INVALID_PLUGIN_DEFINITION: 'ERR_MOCHA_INVALID_PLUGIN_DEFINITION', TIMEOUT: 'ERR_MOCHA_TIMEOUT' }; const dh = new Set(Object.values(ph)); function gh (e, t) { e = new TypeError(e); return e.code = ph.INVALID_REPORTER, e.reporter = t, e } function yh (e, t) { e = new Error(e); return e.code = ph.INVALID_INTERFACE, e.interface = t, e } function mh (e, t, r) { e = new TypeError(e); return e.code = ph.INVALID_ARG_TYPE, e.argument = t, e.expected = r, e.actual = kn(t), e } function vh (e, t, r) { switch (t) { case 'reporter':return gh(e, r); case 'interface':return yh(e, r); default:throw new Error('unknown pluginType "' + t + '"') } } const bh = { constants: ph, createFatalError: function (e, t) { return (e = new Error(e)).code = ph.FATAL, e.valueType = kn(t), e.value = t, e }, createForbiddenExclusivityError: function (e) { return (e = new Error(e.isWorker ? '`.only` is not supported in parallel mode' : '`.only` forbidden by --forbid-only')).code = ph.FORBIDDEN_EXCLUSIVITY, e }, createInvalidArgumentTypeError: mh, createInvalidArgumentValueError: function (e, t, r, n) { return (e = new TypeError(e)).code = ph.INVALID_ARG_VALUE, e.argument = t, e.value = r, e.reason = void 0 !== n ? n : 'is invalid', e }, createInvalidExceptionError: function (e, t) { return (e = new Error(e)).code = ph.INVALID_EXCEPTION, e.valueType = kn(t), e.value = t, e }, createInvalidInterfaceError: yh, createInvalidLegacyPluginError: vh, createInvalidPluginDefinitionError: function (e, t) { return (e = new Error(e)).code = ph.INVALID_PLUGIN_DEFINITION, e.pluginDef = t, e }, createInvalidPluginError: function () { return fh('Use createInvalidLegacyPluginError() instead'), vh.apply(void 0, arguments) }, createInvalidPluginImplementationError: function (e) { const t = (r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).pluginDef; var r = r.pluginImpl; return (e = new Error(e)).code = ph.INVALID_PLUGIN_IMPLEMENTATION, e.pluginDef = t, e.pluginImpl = r, e }, createInvalidReporterError: gh, createMissingArgumentError: mh, createMochaInstanceAlreadyDisposedError: function (e, t, r) { return (e = new Error(e)).code = ph.INSTANCE_ALREADY_DISPOSED, e.cleanReferencesAfterRun = t, e.instance = r, e }, createMochaInstanceAlreadyRunningError: function (e, t) { return (e = new Error(e)).code = ph.INSTANCE_ALREADY_RUNNING, e.instance = t, e }, createMultipleDoneError: function (t, e) { let r; try { r = hh('<%s>', t.fullTitle()), t.parent.root && (r += ' (of root suite)') } catch (e) { r = hh('<%s> (of unknown suite)', t.title) } let n = hh('done() called multiple times in %s %s', t.type || 'unknown runnable', r); return t.file && (n += hh(' of file %s', t.file)), e && (n += hh('; in addition, done() received error: %s', e)), (n = new Error(n)).code = ph.MULTIPLE_DONE, n.valueType = kn(e), n.value = e, n }, createNoFilesMatchPatternError: function (e, t) { return (e = new Error(e)).code = ph.NO_FILES_MATCH_PATTERN, e.pattern = t, e }, createTimeoutError: function (e, t, r) { return (e = new Error(e)).code = ph.TIMEOUT, e.timeout = t, e.file = r, e }, createUnsupportedError: function (e) { return (e = new Error(e)).code = ph.UNSUPPORTED, e }, deprecate: fh, isMochaError: function (e) { return Boolean(e && kn(e) === 'object' && dh.has(e.code)) }, warn: function (e) { e && lh(e) } }; const wh = t(Object.freeze({ __proto__: null, default: {} })); const Eh = e(function (e, a) { const t = ah.nanoid; const r = '__mocha_id__'; function s (e, t) { switch (t) { case 'function':return '[Function]'; case 'object':return '{}'; case 'array':return '[]'; default:return e.toString() } }a.inherits = Vu.inherits, a.escape = function (e) { return sh.encode(String(e), { useNamedReferences: !1 }) }, a.isString = function (e) { return typeof e === 'string' }, a.slug = function (e) { return e.toLowerCase().replace(/\s+/g, '-').replace(/[^-\w]/g, '').replace(/-{2,}/g, '-') }, a.clean = function (e) { var t = (e = e.replace(/\r\n?|[\n\u2028\u2029]/g, '\n').replace(/^\uFEFF/, '').replace(/^function(?:\s*|\s+[^(]*)\([^)]*\)\s*\{((?:.|\n)*?)\s*\}$|^\([^)]*\)\s*=>\s*(?:\{((?:.|\n)*?)\s*\}|((?:.|\n)*))$/, '$1$2$3')).match(/^\n?( *)/)[1].length; const r = e.match(/^\n?(\t*)/)[1].length; var t = new RegExp('^\n?' + (r ? '\t' : ' ') + '{' + (r || t) + '}', 'gm'); return (e = e.replace(t, '')).trim() }; const l = a.canonicalType = function (e) { return void 0 === e ? 'undefined' : e === null ? 'null' : Xs(e) ? 'buffer' : Object.prototype.toString.call(e).replace(/^\[.+\s(.+?)]$/, '$1').toLowerCase() }; function f (e, r, n) { if (void 0 === r) { return c(e) } let t; let i = r * (n = n || 1); let o = Array.isArray(e) ? '[' : '{'; const a = Array.isArray(e) ? ']' : '}'; let s = (typeof e.length === 'number' ? e : Object.keys(e)).length; function u (e, t) { return new Array(t).join(e) } function c (e) { switch (l(e)) { case 'null':case 'undefined':e = '[' + e + ']'; break; case 'array':case 'object':e = f(e, r, n + 1); break; case 'boolean':case 'regexp':case 'symbol':case 'number':e = e === 0 && 1 / e == -1 / 0 ? '-0' : e.toString(); break; case 'bigint':e = e.toString() + 'n'; break; case 'date':e = '[Date: ' + (isNaN(e.getTime()) ? e.toString() : e.toISOString()) + ']'; break; case 'buffer':var t = e.toJSON(); e = '[Buffer: ' + f(t = t.data && t.type ? t.data : t, 2, n + 1) + ']'; break; default:e = e === '[Function]' || e === '[Circular]' ? e : JSON.stringify(e) } return e } for (t in e) { Object.prototype.hasOwnProperty.call(e, t) && (--s, o += '\n ' + u(' ', i) + (Array.isArray(e) ? '' : '"' + t + '": ') + c(e[t]) + (s ? ',' : '')) } return o + (o.length !== 1 ? '\n' + u(' ', --i) + a : a) }a.type = function (e) { if (e === null) { return 'null' } const t = new Set(['undefined', 'boolean', 'number', 'string', 'bigint', 'symbol']); const r = kn(e); return r === 'function' || t.has(r) ? r : e instanceof String ? 'string' : e instanceof Error ? 'error' : Array.isArray(e) ? 'array' : r }, a.stringify = function (e) { let t; let r = l(e); if (!~['object', 'array', 'function'].indexOf(r)) { if (r === 'buffer') { const n = xs.prototype.toJSON.call(e); return f(n.data && n.type ? n.data : n, 2).replace(/,(\n|$)/g, '$1') } if (r !== 'string' || kn(e) !== 'object') { return f(e) } e = e.split('').reduce(function (e, t, r) { return e[r] = t, e }, {}), r = 'object' } for (t in e) { if (Object.prototype.hasOwnProperty.call(e, t)) { return f(a.canonicalize(e, null, r), 2).replace(/,(\n|$)/g, '$1') } } return s(e, r) }, a.canonicalize = function (t, r, e) { let n, i; function o (e, t) { r.push(e), t(), r.pop() } if (e = e || l(t), (r = r || []).indexOf(t) !== -1) { return '[Circular]' } switch (e) { case 'undefined':case 'buffer':case 'null':n = t; break; case 'array':o(t, function () { n = t.map(function (e) { return a.canonicalize(e, r) }) }); break; case 'function':for (i in t) { n = {}; break } if (!n) { n = s(t, e); break } case 'object':n = n || {}, o(t, function () { Object.keys(t).sort().forEach(function (e) { n[e] = a.canonicalize(t[e], r) }) }); break; case 'date':case 'number':case 'regexp':case 'boolean':case 'symbol':n = t; break; default:n = t + '' } return n }, a.stackTraceFilter = function () { let n; const i = typeof document === 'undefined' ? { node: !0 } : { browser: !0 }; let o = Hf.sep; return i.node ? n = a.cwd() + o : (n = (typeof location === 'undefined' ? window.location : location).href.replace(/\/[^/]*$/, '/'), o = '/'), function (e) { return (e = (e = e.split('\n')).reduce(function (e, t) { return ~(r = t).indexOf('node_modules' + o + 'mocha' + o) || ~r.indexOf(o + 'mocha.js') || ~r.indexOf(o + 'mocha.min.js') || i.node && (~(r = t).indexOf('(timers.js:') || ~r.indexOf('(events.js:') || ~r.indexOf('(node.js:') || ~r.indexOf('(module.js:') || ~r.indexOf('GeneratorFunctionPrototype.next (native)')) || (/:\d+:\d+\)?$/.test(t) && (t = t.replace('(' + n, '(')), e.push(t)), e; let r }, [])).join('\n') } }, a.isPromise = function (e) { return kn(e) === 'object' && e !== null && typeof e.then === 'function' }, a.clamp = function (e, t) { return Math.min(Math.max(e, t[0]), t[1]) }, a.sQuote = function (e) { return "'" + e + "'" }, a.dQuote = function (e) { return '"' + e + '"' }, a.noop = function () {}, a.createMap = function (e) { return Object.assign.apply(null, [Object.create(null)].concat(Array.prototype.slice.call(arguments))) }, a.defineConstants = function (e) { if (l(e) !== 'object' || !Object.keys(e).length) { throw new TypeError('Invalid argument; expected a non-empty object') } return Object.freeze(a.createMap(e)) }, a.supportsEsModules = function (e) { if (!a.isBrowser() && tr.versions && tr.versions.node) { var t = tr.versions.node.split('.'); const r = +t[0]; var t = +t[1]; return e ? r >= 10 : r >= 13 || r == 12 && t >= 11 } }, a.cwd = function () { return tr.cwd() }, a.isBrowser = function () { return Boolean(!0) }, a.lookupFiles = function () { if (a.isBrowser()) { throw bh.createUnsupportedError('lookupFiles() is only supported in Node.js!') } return bh.deprecate('`lookupFiles()` in module `mocha/lib/utils` has moved to module `mocha/lib/cli` and will be removed in the next major revision of Mocha'), wh.lookupFiles.apply(wh, arguments) }, a.castArray = function (e) { return void 0 === e ? [] : e === null ? [null] : kn(e) !== 'object' || typeof e[Symbol.iterator] !== 'function' && void 0 === e.length ? [e] : Array.from(e) }, a.constants = a.defineConstants({ MOCHA_ID_PROP_NAME: r }), a.uniqueID = function () { return t() }, a.assignNewMochaID = function (e) { const t = a.uniqueID(); return Object.defineProperty(e, r, { get: function () { return t } }), e }, a.getMochaID = function (e) { return e && kn(e) === 'object' ? e[r] : void 0 } }); ut('Map', function (t) { return function (e) { return t(this, arguments.length ? e : void 0) } }, i); const Th = function (e) { this.message = e }; function Ah (e, t) { t = t || {}; const r = kn(e); if (r === 'string' && e.length > 0) { return (function (e) { if ((e = String(e)).length > 100) { return } const t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e); if (!t) { return } e = parseFloat(t[1]); switch ((t[2] || 'ms').toLowerCase()) { case 'years':case 'year':case 'yrs':case 'yr':case 'y':return 315576e5 * e; case 'weeks':case 'week':case 'w':return 6048e5 * e; case 'days':case 'day':case 'd':return e * Sh; case 'hours':case 'hour':case 'hrs':case 'hr':case 'h':return e * _h; case 'minutes':case 'minute':case 'mins':case 'min':case 'm':return 6e4 * e; case 'seconds':case 'second':case 'secs':case 'sec':case 's':return 1e3 * e; case 'milliseconds':case 'millisecond':case 'msecs':case 'msec':case 'ms':return e; default: } }(e)) } if (r === 'number' && isFinite(e)) { return (t.long ? function (e) { const t = Math.abs(e); if (Sh <= t) { return xh(e, t, Sh, 'day') } if (_h <= t) { return xh(e, t, _h, 'hour') } if (t >= 6e4) { return xh(e, t, 6e4, 'minute') } if (t >= 1e3) { return xh(e, t, 1e3, 'second') } return e + ' ms' } : function (e) { const t = Math.abs(e); if (Sh <= t) { return Math.round(e / Sh) + 'd' } if (_h <= t) { return Math.round(e / _h) + 'h' } if (t >= 6e4) { return Math.round(e / 6e4) + 'm' } if (t >= 1e3) { return Math.round(e / 1e3) + 's' } return e + 'ms' })(e) } throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(e)) } var _h = 36e5; var Sh = 864e5; function xh (e, t, r, n) { t = 1.5 * r <= t; return Math.round(e / r) + ' ' + n + (t ? 's' : '') } const Rh = function (t) { function c (e) { let s; let t = null; function u () { for (var n, e, t, i, r = arguments.length, o = new Array(r), a = 0; a < r; a++) { o[a] = arguments[a] }u.enabled && (n = u, t = (e = Number(new Date())) - (s || e), n.diff = t, n.prev = s, n.curr = e, s = e, o[0] = c.coerce(o[0]), typeof o[0] !== 'string' && o.unshift('%O'), o[i = 0] = o[0].replace(/%([a-zA-Z%])/g, function (e, t) { if (e === '%%') { return '%' } i++; const r = c.formatters[t]; return typeof r === 'function' && (t = o[i], e = r.call(n, t), o.splice(i, 1), i--), e }), c.formatArgs.call(n, o), (n.log || c.log).apply(n, o)) } return u.namespace = e, u.useColors = c.useColors(), u.color = c.selectColor(e), u.extend = r, u.destroy = c.destroy, Object.defineProperty(u, 'enabled', { enumerable: !0, configurable: !1, get: function () { return t === null ? c.enabled(e) : t }, set: function (e) { t = e } }), typeof c.init === 'function' && c.init(u), u } function r (e, t) { e = c(this.namespace + (void 0 === t ? ':' : t) + e); return e.log = this.log, e } function n (e) { return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, '*') } return ((c.debug = c).default = c).coerce = function (e) { if (e instanceof Error) { return e.stack || e.message } return e }, c.disable = function () { const e = [].concat(Mn(c.names.map(n)), Mn(c.skips.map(n).map(function (e) { return '-' + e }))).join(','); return c.enable(''), e }, c.enable = function (e) { let t; c.save(e), c.names = [], c.skips = []; const r = (typeof e === 'string' ? e : '').split(/[\s,]+/); const n = r.length; for (t = 0; t < n; t++) { r[t] && ((e = r[t].replace(/\*/g, '.*?'))[0] === '-' ? c.skips.push(new RegExp('^' + e.substr(1) + '$')) : c.names.push(new RegExp('^' + e + '$'))) } }, c.enabled = function (e) { if (e[e.length - 1] === '*') { return !0 } let t, r; for (t = 0, r = c.skips.length; t < r; t++) { if (c.skips[t].test(e)) { return !1 } } for (t = 0, r = c.names.length; t < r; t++) { if (c.names[t].test(e)) { return !0 } } return !1 }, c.humanize = Ah, c.destroy = function () { console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.') }, Object.keys(t).forEach(function (e) { c[e] = t[e] }), c.names = [], c.skips = [], c.formatters = {}, c.selectColor = function (e) { for (var t = 0, r = 0; r < e.length; r++) { t = (t << 5) - t + e.charCodeAt(r), t |= 0 } return c.colors[Math.abs(t) % c.colors.length] }, c.enable(c.load()), c }; const Nh = e(function (i, t) { let e; t.formatArgs = function (e) { if (e[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + e[0] + (this.useColors ? '%c ' : ' ') + '+' + i.exports.humanize(this.diff), !this.useColors) { return } const t = 'color: ' + this.color; e.splice(1, 0, t, 'color: inherit'); let r = 0; let n = 0; e[0].replace(/%[a-zA-Z%]/g, function (e) { e !== '%%' && (r++, e === '%c' && (n = r)) }), e.splice(n, 0, t) }, t.save = function (e) { try { e ? t.storage.setItem('debug', e) : t.storage.removeItem('debug') } catch (e) {} }, t.load = function () { let e; try { e = t.storage.getItem('debug') } catch (e) {}!e && void 0 !== tr && 'env' in tr && (e = tr.env.DEBUG); return e }, t.useColors = function () { if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) { return !0 } if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) { return !1 } return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/) }, t.storage = (function () { try { return localStorage } catch (e) {} }()), t.destroy = (e = !1, function () { e || (e = !0, console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.')) }), t.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'], t.log = console.debug || console.log || function () {}, i.exports = Rh(t), i.exports.formatters.j = function (e) { try { return JSON.stringify(e) } catch (e) { return '[UnexpectedJSONParseError]: ' + e.message } } }); var Vl = pr.EventEmitter; const Dh = Nh('mocha:runnable'); const Lh = bh.createInvalidExceptionError; const kh = bh.createMultipleDoneError; const Oh = bh.createTimeoutError; const Ch = O.Date; const Ih = O.setTimeout; const Ph = O.clearTimeout; const qh = Object.prototype.toString; const Uh = Fh; function Fh (e, t) { this.title = e, this.fn = t, this.body = (t || '').toString(), this.async = t && t.length, this.sync = !this.async, this._timeout = 2e3, this._slow = 75, this._retries = -1, Eh.assignNewMochaID(this), Object.defineProperty(this, 'id', { get: function () { return Eh.getMochaID(this) } }), this.reset() }Eh.inherits(Fh, Vl), Fh.prototype.reset = function () { this.timedOut = !1, this._currentRetry = 0, this.pending = !1, delete this.state, delete this.err }, Fh.prototype.timeout = function (e) { if (!arguments.length) { return this._timeout } typeof e === 'string' && (e = Wf(e)); const t = [0, Math.pow(2, 31) - 1]; return e = Eh.clamp(e, t), this._timeout = e === t[0] || e === t[1] ? 0 : e, Dh('timeout %d', this._timeout), this.timer && this.resetTimeout(), this }, Fh.prototype.slow = function (e) { return arguments.length && void 0 !== e ? (typeof e === 'string' && (e = Wf(e)), Dh('slow %d', e), this._slow = e, this) : this._slow }, Fh.prototype.skip = function () { throw this.pending = !0, new Th('sync skip; aborting execution') }, Fh.prototype.isPending = function () { return this.pending || this.parent && this.parent.isPending() }, Fh.prototype.isFailed = function () { return !this.isPending() && this.state === Bh.STATE_FAILED }, Fh.prototype.isPassed = function () { return !this.isPending() && this.state === Bh.STATE_PASSED }, Fh.prototype.retries = function (e) { if (!arguments.length) { return this._retries } this._retries = e }, Fh.prototype.currentRetry = function (e) { if (!arguments.length) { return this._currentRetry } this._currentRetry = e }, Fh.prototype.fullTitle = function () { return this.titlePath().join(' ') }, Fh.prototype.titlePath = function () { return this.parent.titlePath().concat([this.title]) }, Fh.prototype.clearTimeout = function () { Ph(this.timer) }, Fh.prototype.resetTimeout = function () { const e = this; const t = this.timeout(); t !== 0 && (this.clearTimeout(), this.timer = Ih(function () { e.timeout() !== 0 && (e.callback(e._timeoutError(t)), e.timedOut = !0) }, t)) }, Fh.prototype.globals = function (e) { if (!arguments.length) { return this._allowedGlobals } this._allowedGlobals = e }, Fh.prototype.run = function (n) { let i; let e; let t; const o = this; const a = new Ch(); const r = this.ctx; let s = !1; if (this.isPending()) { return n() } function u (e) { let t; const r = o.timeout(); if (!o.timedOut) { if (i) { return t = e, void (s || (s = !0, o.emit('error', kh(o, t)))) } o.clearTimeout(), o.duration = new Ch() - a, i = !0, !e && o.duration > r && r > 0 && (e = o._timeoutError(r)), n(e) } } if (r && r.runnable && r.runnable(this), this.callback = u, this.fn && typeof this.fn.call !== 'function') { u(new TypeError('A runnable must be passed a function as its second argument.')) } else if (this.async) { this.resetTimeout(), this.skip = function () { throw this.pending = !0, u(), new Th('async skip; aborting execution') }; try { e = this.fn, t = e.call(r, function (e) { return e instanceof Error || qh.call(e) === '[object Error]' ? u(e) : e ? Object.prototype.toString.call(e) === '[object Object]' ? u(new Error('done() invoked with non-Error: ' + JSON.stringify(e))) : u(new Error('done() invoked with non-Error: ' + e)) : t && Eh.isPromise(t) ? u(new Error('Resolution method is overspecified. Specify a callback *or* return a Promise; not both.')) : void u() }) } catch (e) { if (s = !0, e instanceof Th) { return } if (this.allowUncaught) { throw e } u(Fh.toValueOrError(e)) } } else { try { !(function (e) { e = e.call(r); if (e && typeof e.then === 'function') { o.resetTimeout(), e.then(function () { return u(), null }, function (e) { u(e || new Error('Promise rejected with no or falsy reason')) }) } else { if (o.asyncOnly) { return u(new Error('--async-only option in use without declaring `done()` or returning a promise')) } u() } }(this.fn)) } catch (e) { if (s = !0, e instanceof Th) { return u() } if (this.allowUncaught) { throw e } u(Fh.toValueOrError(e)) } } }, Fh.prototype._timeoutError = function (e) { let t = 'Timeout of '.concat(e, 'ms exceeded. For async tests and hooks, ensure "done()" is called; if returning a Promise, ensure it resolves.'); return this.file && (t += ' (' + this.file + ')'), Oh(t, e, this.file) }; var Bh = Eh.defineConstants({ STATE_FAILED: 'failed', STATE_PASSED: 'passed', STATE_PENDING: 'pending' }); Fh.toValueOrError = function (e) { return e || Lh('Runnable failed with falsy or undefined exception. Please throw an Error instead.', e) }, Fh.constants = Bh; const jh = We.some; var ut = Te('some'); var i = Y('some'); ue({ target: 'Array', proto: !0, forced: !ut || !i }, { some: function (e, t) { return jh(this, e, arguments.length > 1 ? t : void 0) } }); var Vl = Eh.inherits; const Mh = Eh.constants.MOCHA_ID_PROP_NAME; const Vh = Gh; function Gh (e, t) { Uh.call(this, e, t), this.type = 'hook' }Vl(Gh, Uh), Gh.prototype.reset = function () { Uh.prototype.reset.call(this), delete this._error }, Gh.prototype.error = function (e) { if (!arguments.length) { return e = this._error, this._error = null, e } this._error = e }, Gh.prototype.serialize = function () { return In({ $$isPending: this.isPending(), $$titlePath: this.titlePath(), ctx: this.ctx && this.ctx.currentTest ? { currentTest: In({ title: this.ctx.currentTest.title }, Mh, this.ctx.currentTest.id) } : {}, parent: In({}, Mh, this.parent.id), title: this.title, type: this.type }, Mh, this.id) }; const Hh = e(function (e, t) { const r = pr.EventEmitter; const i = Eh.assignNewMochaID; const n = Eh.clamp; const o = Eh.constants; const a = Eh.createMap; const s = Eh.defineConstants; const u = Eh.getMochaID; const c = Eh.inherits; const l = Eh.isString; const f = Nh('mocha:suite'); const h = o.MOCHA_ID_PROP_NAME; function p (e, t, r) { if (!l(e)) { throw bh.createInvalidArgumentTypeError('Suite argument "title" must be a string. Received type "' + kn(e) + '"', 'title', 'string') } function n () {} this.title = e, n.prototype = t, this.ctx = new n(), this.suites = [], this.tests = [], this.root = !0 === r, this.pending = !1, this._retries = -1, this._beforeEach = [], this._beforeAll = [], this._afterEach = [], this._afterAll = [], this._timeout = 2e3, this._slow = 75, this._bail = !1, this._onlyTests = [], this._onlySuites = [], i(this), Object.defineProperty(this, 'id', { get: function () { return u(this) } }), this.reset(), this.on('newListener', function (e) { g[e] && bh.deprecate('Event "' + e + '" is deprecated.  Please let the Mocha team know about your use case: https://git.io/v6Lwm') }) }(e.exports = p).create = function (e, t) { const r = new p(t, e.ctx); return r.parent = e, t = r.fullTitle(), e.addSuite(r), r }, c(p, r), p.prototype.reset = function () { function e (e) { e.reset() } this.delayed = !1, this.suites.forEach(e), this.tests.forEach(e), this._beforeEach.forEach(e), this._afterEach.forEach(e), this._beforeAll.forEach(e), this._afterAll.forEach(e) }, p.prototype.clone = function () { const e = new p(this.title); return f('clone'), e.ctx = this.ctx, e.root = this.root, e.timeout(this.timeout()), e.retries(this.retries()), e.slow(this.slow()), e.bail(this.bail()), e }, p.prototype.timeout = function (e) { if (!arguments.length) { return this._timeout } typeof e === 'string' && (e = Wf(e)); const t = Math.pow(2, 31) - 1; return e = n(e, [0, t]), f('timeout %d', e), this._timeout = parseInt(e, 10), this }, p.prototype.retries = function (e) { return arguments.length ? (f('retries %d', e), this._retries = parseInt(e, 10) || 0, this) : this._retries }, p.prototype.slow = function (e) { return arguments.length ? (typeof e === 'string' && (e = Wf(e)), f('slow %d', e), this._slow = e, this) : this._slow }, p.prototype.bail = function (e) { return arguments.length ? (f('bail %s', e), this._bail = e, this) : this._bail }, p.prototype.isPending = function () { return this.pending || this.parent && this.parent.isPending() }, p.prototype._createHook = function (e, t) { t = new Vh(e, t); return t.parent = this, t.timeout(this.timeout()), t.retries(this.retries()), t.slow(this.slow()), t.ctx = this.ctx, t.file = this.file, t }, p.prototype.beforeAll = function (e, t) { if (this.isPending()) { return this } typeof e === 'function' && (e = (t = e).name), e = '"before all" hook' + (e ? ': ' + e : ''); t = this._createHook(e, t); return this._beforeAll.push(t), this.emit(d.EVENT_SUITE_ADD_HOOK_BEFORE_ALL, t), this }, p.prototype.afterAll = function (e, t) { if (this.isPending()) { return this } typeof e === 'function' && (e = (t = e).name), e = '"after all" hook' + (e ? ': ' + e : ''); t = this._createHook(e, t); return this._afterAll.push(t), this.emit(d.EVENT_SUITE_ADD_HOOK_AFTER_ALL, t), this }, p.prototype.beforeEach = function (e, t) { if (this.isPending()) { return this } typeof e === 'function' && (e = (t = e).name), e = '"before each" hook' + (e ? ': ' + e : ''); t = this._createHook(e, t); return this._beforeEach.push(t), this.emit(d.EVENT_SUITE_ADD_HOOK_BEFORE_EACH, t), this }, p.prototype.afterEach = function (e, t) { if (this.isPending()) { return this } typeof e === 'function' && (e = (t = e).name), e = '"after each" hook' + (e ? ': ' + e : ''); t = this._createHook(e, t); return this._afterEach.push(t), this.emit(d.EVENT_SUITE_ADD_HOOK_AFTER_EACH, t), this }, p.prototype.addSuite = function (e) { return e.parent = this, e.root = !1, e.timeout(this.timeout()), e.retries(this.retries()), e.slow(this.slow()), e.bail(this.bail()), this.suites.push(e), this.emit(d.EVENT_SUITE_ADD_SUITE, e), this }, p.prototype.addTest = function (e) { return e.parent = this, e.timeout(this.timeout()), e.retries(this.retries()), e.slow(this.slow()), e.ctx = this.ctx, this.tests.push(e), this.emit(d.EVENT_SUITE_ADD_TEST, e), this }, p.prototype.fullTitle = function () { return this.titlePath().join(' ') }, p.prototype.titlePath = function () { let e = []; return this.parent && (e = e.concat(this.parent.titlePath())), this.root || e.push(this.title), e }, p.prototype.total = function () { return this.suites.reduce(function (e, t) { return e + t.total() }, 0) + this.tests.length }, p.prototype.eachTest = function (t) { return this.tests.forEach(t), this.suites.forEach(function (e) { e.eachTest(t) }), this }, p.prototype.run = function () { this.root && this.emit(d.EVENT_ROOT_SUITE_RUN) }, p.prototype.hasOnly = function () { return this._onlyTests.length > 0 || this._onlySuites.length > 0 || this.suites.some(function (e) { return e.hasOnly() }) }, p.prototype.filterOnly = function () { let t; return this._onlyTests.length ? (this.tests = this._onlyTests, this.suites = []) : (this.tests = [], this._onlySuites.forEach(function (e) { e.hasOnly() && e.filterOnly() }), t = this._onlySuites, this.suites = this.suites.filter(function (e) { return t.indexOf(e) !== -1 || e.filterOnly() })), this.tests.length > 0 || this.suites.length > 0 }, p.prototype.appendOnlySuite = function (e) { this._onlySuites.push(e) }, p.prototype.markOnly = function () { this.parent && this.parent.appendOnlySuite(this) }, p.prototype.appendOnlyTest = function (e) { this._onlyTests.push(e) }, p.prototype.getHooks = function (e) { return this['_' + e] }, p.prototype.dispose = function () { this.suites.forEach(function (e) { e.dispose() }), this.cleanReferences() }, p.prototype.cleanReferences = function () { function e (e) { for (let t = 0; t < e.length; t++) { delete e[t].fn } }Array.isArray(this._beforeAll) && e(this._beforeAll), Array.isArray(this._beforeEach) && e(this._beforeEach), Array.isArray(this._afterAll) && e(this._afterAll), Array.isArray(this._afterEach) && e(this._afterEach); for (let t = 0; t < this.tests.length; t++) { delete this.tests[t].fn } }, p.prototype.serialize = function () { return { _bail: this._bail, $$fullTitle: this.fullTitle(), $$isPending: this.isPending(), root: this.root, title: this.title, id: this.id, parent: this.parent ? In({}, h, this.parent.id) : null } }; var d = s({ EVENT_FILE_POST_REQUIRE: 'post-require', EVENT_FILE_PRE_REQUIRE: 'pre-require', EVENT_FILE_REQUIRE: 'require', EVENT_ROOT_SUITE_RUN: 'run', HOOK_TYPE_AFTER_ALL: 'afterAll', HOOK_TYPE_AFTER_EACH: 'afterEach', HOOK_TYPE_BEFORE_ALL: 'beforeAll', HOOK_TYPE_BEFORE_EACH: 'beforeEach', EVENT_SUITE_ADD_HOOK_AFTER_ALL: 'afterAll', EVENT_SUITE_ADD_HOOK_AFTER_EACH: 'afterEach', EVENT_SUITE_ADD_HOOK_BEFORE_ALL: 'beforeAll', EVENT_SUITE_ADD_HOOK_BEFORE_EACH: 'beforeEach', EVENT_SUITE_ADD_SUITE: 'suite', EVENT_SUITE_ADD_TEST: 'test' }); var g = Object.keys(d).filter(function (e) { return e.substring(0, 15) === 'EVENT_SUITE_ADD' }).reduce(function (e, t) { return e[d[t]] = !0, e }, a()); p.constants = d }); const zh = pr.EventEmitter; const Yh = Nh('mocha:runner'); const Wh = Hh.constants.HOOK_TYPE_BEFORE_EACH; const $h = Hh.constants.HOOK_TYPE_AFTER_EACH; const Jh = Hh.constants.HOOK_TYPE_AFTER_ALL; const Kh = Hh.constants.HOOK_TYPE_BEFORE_ALL; const Qh = Hh.constants.EVENT_ROOT_SUITE_RUN; const Zh = Uh.constants.STATE_FAILED; const Xh = Uh.constants.STATE_PASSED; const ep = Uh.constants.STATE_PENDING; const tp = Eh.dQuote; const rp = Eh.sQuote; const np = Eh.stackTraceFilter(); const ip = Eh.stringify; const op = bh.createInvalidExceptionError; const ap = bh.createUnsupportedError; const sp = bh.createFatalError; const up = bh.isMochaError; const cp = bh.constants; const lp = ['setTimeout', 'clearTimeout', 'setInterval', 'clearInterval', 'XMLHttpRequest', 'Date', 'setImmediate', 'clearImmediate']; const fp = Eh.defineConstants({ EVENT_HOOK_BEGIN: 'hook', EVENT_HOOK_END: 'hook end', EVENT_RUN_BEGIN: 'start', EVENT_DELAY_BEGIN: 'waiting', EVENT_DELAY_END: 'ready', EVENT_RUN_END: 'end', EVENT_SUITE_BEGIN: 'suite', EVENT_SUITE_END: 'suite end', EVENT_TEST_BEGIN: 'test', EVENT_TEST_END: 'test end', EVENT_TEST_FAIL: 'fail', EVENT_TEST_PASS: 'pass', EVENT_TEST_PENDING: 'pending', EVENT_TEST_RETRY: 'retry', STATE_IDLE: 'idle', STATE_RUNNING: 'running', STATE_STOPPED: 'stopped' }); const hp = (function () { !(function (e, t) { if (typeof t !== 'function' && t !== null) { throw new TypeError('Super expression must either be null or a function') } e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && Fn(e, t) }(o, zh)); const i = jn(o); function o (e, t) { let r; !(function (e, t) { if (!(e instanceof t)) { throw new TypeError('Cannot call a class as a function') } }(this, o)), r = i.call(this), void 0 === t && (t = {}), typeof t === 'boolean' ? (r._delay = t, t = {}) : r._delay = t.delay; const n = Bn(r); return r._globals = [], r._abort = !1, r.suite = e, r._opts = t, r.state = fp.STATE_IDLE, r.total = e.total(), r.failures = 0, r._eventListeners = new Map(), r.on(fp.EVENT_TEST_END, function (e) { let t; e.type === 'test' && e.retriedTest() && e.parent && ((t = e.parent.tests && e.parent.tests.indexOf(e.retriedTest())) > -1 && (e.parent.tests[t] = e)), n.checkGlobals(e) }), r.on(fp.EVENT_HOOK_END, function (e) { n.checkGlobals(e) }), r._defaultGrep = /.*/, r.grep(r._defaultGrep), r.globals(r.globalProps()), r.uncaught = r._uncaught.bind(Bn(r)), r.unhandled = function (e, t) { if (up(e)) { Yh('trapped unhandled rejection coming out of Mocha; forwarding to uncaught handler:', e), r.uncaught(e) } else { Yh('trapped unhandled rejection from (probably) user code; re-emitting on process'), r._removeEventListener(tr, 'unhandledRejection', r.unhandled); try { tr.emit('unhandledRejection', e, t) } finally { r._addEventListener(tr, 'unhandledRejection', r.unhandled) } } }, r } return o }()); function pp (e) { return e instanceof Error || e && typeof e.message === 'string' } function dp (e) { return new Error('the '.concat(Eh.canonicalType(e), ' ').concat(ip(e), ' was thrown, throw an Error :)')) }hp.immediately = O.setImmediate || Jt, hp.prototype._addEventListener = function (e, t, r) { let n, i; Yh('_addEventListener(): adding for event %s; %d current listeners', t, e.listenerCount(t)), this._eventListeners.has(e) && this._eventListeners.get(e).has(t) && this._eventListeners.get(e).get(t).has(r) ? Yh('warning: tried to attach duplicate event listener for %s', t) : (e.on(t, r), (i = (n = this._eventListeners.has(e) ? this._eventListeners.get(e) : new Map()).has(t) ? n.get(t) : new Set()).add(r), n.set(t, i), this._eventListeners.set(e, n)) }, hp.prototype._removeEventListener = function (e, t, r) { let n, i; e.removeListener(t, r), this._eventListeners.has(e) ? ((n = this._eventListeners.get(e)).has(t) && ((i = n.get(t)).delete(r), i.size || n.delete(t)), n.size || this._eventListeners.delete(e)) : Yh('trying to remove listener for untracked object %s', e) }, hp.prototype.dispose = function () { this.removeAllListeners(), this._eventListeners.forEach(function (e, r) { e.forEach(function (e, t) { e.forEach(function (e) { r.removeListener(t, e) }) }) }), this._eventListeners.clear() }, hp.prototype.grep = function (e, t) { return Yh('grep(): setting to %s', e), this._grep = e, this._invert = t, this.total = this.grepTotal(this.suite), this }, hp.prototype.grepTotal = function (e) { const t = this; let r = 0; return e.eachTest(function (e) { e = t._grep.test(e.fullTitle()); t._invert && (e = !e), e && r++ }), r }, hp.prototype.globalProps = function () { for (var e = Object.keys(O), t = 0; t < lp.length; ++t) { ~e.indexOf(lp[t]) || e.push(lp[t]) } return e }, hp.prototype.globals = function (e) { return arguments.length ? (Yh('globals(): setting to %O', e), this._globals = this._globals.concat(e), this) : this._globals }, hp.prototype.checkGlobals = function (e) { let t, r, n; this.checkLeaks && (t = this._globals, n = this.globalProps(), e && (t = t.concat(e._allowedGlobals || [])), this.prevGlobalsLength !== n.length && (this.prevGlobalsLength = n.length, r = t, n = n.filter(function (t) { return !/^\d+/.test(t) && ((!O.navigator || !/^getInterface/.test(t)) && ((!O.navigator || !/^\d+/.test(t)) && (!/^mocha-/.test(t) && !(r.filter(function (e) { return ~e.indexOf('*') ? t.indexOf(e.split('*')[0]) === 0 : t === e }).length || O.navigator && t === 'onerror')))) }), this._globals = this._globals.concat(n), n.length && (n = new Error(Vu.format('global leak(s) detected: %s', n.map(rp).join(', '))), this.fail(e, n)))) }, hp.prototype.fail = function (e, t, r) { if (r = !0 === r, !e.isPending() || r) { if (this.state === fp.STATE_STOPPED) { if (t.code === cp.MULTIPLE_DONE) { throw t } throw sp('Test failed after root suite execution completed!', t) }++this.failures, Yh('total number of failures: %d', this.failures), e.state = Zh, pp(t) || (t = dp(t)); try { t.stack = this.fullStackTrace || !t.stack ? t.stack : np(t.stack) } catch (e) {} this.emit(fp.EVENT_TEST_FAIL, e, t) } }, hp.prototype.hook = function (a, s) { const u = this.suite; let c = u.getHooks(a); const l = this; hp.immediately(function () { !(function r (n) { const i = c[n]; if (!i) { return s() } function o (e) { let t; e.originalTitle = e.originalTitle || e.title, e.ctx && e.ctx.currentTest ? e.title = e.originalTitle + ' for ' + tp(e.ctx.currentTest.title) : (t = e.parent.title || (e.parent.root ? '{root}' : ''), e.title = e.originalTitle + ' in ' + tp(t)) }(l.currentRunnable = i).ctx.currentTest = a === Kh ? i.parent.tests[0] : a === Jh ? i.parent.tests[i.parent.tests.length - 1] : l.test, o(i), i.allowUncaught = l.allowUncaught, l.emit(fp.EVENT_HOOK_BEGIN, i), i.listeners('error').length || l._addEventListener(i, 'error', function (e) { l.fail(i, e) }), i.run(function (e) { let t = i.error(); if (t && l.fail(l.test, t), i.pending) { if (a === $h) { l.test && (l.test.pending = !0) } else { if (a === Wh) { return l.test && (l.test.pending = !0), l.emit(fp.EVENT_HOOK_END, i), i.pending = !1, s(new Error('abort hookDown')) } if (a !== Kh) { return i.pending = !1, t = ap('`this.skip` forbidden'), l.fail(i, t), s(t) } u.tests.forEach(function (e) { e.pending = !0 }), u.suites.forEach(function (e) { e.pending = !0 }), c = [] } } else if (e) { return l.fail(i, e), s(e) } l.emit(fp.EVENT_HOOK_END, i), delete i.ctx.currentTest, o(i), r(++n) }) }(0)) }) }, hp.prototype.hooks = function (t, n, i) { const o = this; const a = this.suite; !(function r (e) { if (!(o.suite = e)) { return o.suite = a, i() } o.hook(t, function (e) { if (e) { const t = o.suite; return o.suite = a, i(e, t) }r(n.pop()) }) }(n.pop())) }, hp.prototype.hookUp = function (e, t) { const r = [this.suite].concat(this.parents()).reverse(); this.hooks(e, r, t) }, hp.prototype.hookDown = function (e, t) { const r = [this.suite].concat(this.parents()); this.hooks(e, r, t) }, hp.prototype.parents = function () { for (var e = this.suite, t = []; e.parent;) { e = e.parent, t.push(e) } return t }, hp.prototype.runTest = function (t) { const r = this; const n = this.test; if (n) { if (this.asyncOnly && (n.asyncOnly = !0), this._addEventListener(n, 'error', function (e) { r.fail(n, e) }), this.allowUncaught) { return n.allowUncaught = !0, n.run(t) } try { n.run(t) } catch (e) { t(e) } } }, hp.prototype.runTests = function (r, i) { let n; const o = this; let a = r.tests.slice(); function s (e, r, t) { const n = o.suite; o.suite = t ? r.parent : r, o.suite ? o.hookUp($h, function (e, t) { return o.suite = n, e ? s(0, t, !0) : void i(r) }) : (o.suite = n, i(r)) } function u (e, t) { if (o.failures && r._bail && (a = []), o._abort) { return i() } if (e) { return s(0, t, !0) } if (!(n = a.shift())) { return i() } t = o._grep.test(n.fullTitle()); if (o._invert && (t = !t), t) { if (n.isPending()) { return o.forbidPending ? o.fail(n, new Error('Pending test forbidden'), !0) : (n.state = ep, o.emit(fp.EVENT_TEST_PENDING, n)), o.emit(fp.EVENT_TEST_END, n), u() } o.emit(fp.EVENT_TEST_BEGIN, o.test = n), o.hookDown(Wh, function (e, t) { if (n.isPending()) { o.forbidPending ? o.fail(n, new Error('Pending test forbidden'), !0) : (n.state = ep, o.emit(fp.EVENT_TEST_PENDING, n)), o.emit(fp.EVENT_TEST_END, n); const r = o.suite; return o.suite = t || o.suite, o.hookUp($h, function (e, t) { o.suite = r, u(e, t) }) } if (e) { return s(0, t, !1) } o.currentRunnable = o.test, o.runTest(function (e) { if ((n = o.test).pending) { return o.forbidPending ? o.fail(n, new Error('Pending test forbidden'), !0) : (n.state = ep, o.emit(fp.EVENT_TEST_PENDING, n)), o.emit(fp.EVENT_TEST_END, n), o.hookUp($h, u) } if (e) { const t = n.currentRetry(); if (t < n.retries()) { const r = n.clone(); return r.currentRetry(t + 1), a.unshift(r), o.emit(fp.EVENT_TEST_RETRY, n, e), o.hookUp($h, u) } return o.fail(n, e), o.emit(fp.EVENT_TEST_END, n), o.hookUp($h, u) }n.state = Xh, o.emit(fp.EVENT_TEST_PASS, n), o.emit(fp.EVENT_TEST_END, n), o.hookUp($h, u) }) }) } else { o._grep !== o._defaultGrep ? hp.immediately(u) : u() } } this.next = u, this.hookErr = s, u() }, hp.prototype.runSuite = function (r, t) { let n = 0; const i = this; const e = this.grepTotal(r); if (Yh('runSuite(): running %s', r.fullTitle()), !e || i.failures && r._bail) { return Yh('runSuite(): bailing'), t() } function o (e) { if (e) { return e === r ? a() : a(e) } if (i._abort) { return a() } const t = r.suites[n++]; if (!t) { return a() } i._grep !== i._defaultGrep ? hp.immediately(function () { i.runSuite(t, o) }) : i.runSuite(t, o) } function a (e) { i.suite = r, i.nextSuite = o, delete i.test, i.hook(Jh, function () { i.emit(fp.EVENT_SUITE_END, r), t(e) }) } this.emit(fp.EVENT_SUITE_BEGIN, this.suite = r), this.nextSuite = o, this.hook(Kh, function (e) { return e ? a() : void i.runTests(r, o) }) }, hp.prototype._uncaught = function (e) { if (!(this instanceof hp)) { throw sp('Runner#uncaught() called with invalid context', this) } if (!(e instanceof Th)) { if (this.allowUncaught && !Eh.isBrowser()) { throw Yh('uncaught(): bubbling exception due to --allow-uncaught'), e } if (this.state === fp.STATE_STOPPED) { throw Yh('uncaught(): throwing after run has completed!'), e } e ? Yh('uncaught(): got truthy exception %O', e) : (Yh('uncaught(): undefined/falsy exception'), e = op('Caught falsy/undefined exception which would otherwise be uncaught. No stack trace found; try a debugger', e)), pp(e) || (e = dp(e), Yh('uncaught(): converted "error" %o to Error', e)), e.uncaught = !0; let t = this.currentRunnable; return t ? (t.clearTimeout(), t.isFailed() ? void Yh('uncaught(): Runnable has already failed') : t.isPending() ? (Yh('uncaught(): pending Runnable wound up failing!'), void this.fail(t, e, !0)) : t.isPassed() ? (Yh('uncaught(): Runnable has already passed; bailing gracefully'), this.fail(t, e), void this.abort()) : (Yh('uncaught(): forcing Runnable to complete with Error'), t.callback(e))) : (t = new Uh('Uncaught error outside test suite'), Yh('uncaught(): no current Runnable; created a phony one'), t.parent = this.suite, void (this.state === fp.STATE_RUNNING ? (Yh('uncaught(): failing gracefully'), this.fail(t, e)) : (Yh('uncaught(): test run has not yet started; unrecoverable'), this.emit(fp.EVENT_RUN_BEGIN), this.fail(t, e), this.emit(fp.EVENT_RUN_END)))) }Yh('uncaught(): caught a Pending') }, hp.prototype.run = function (e) { const t = this; var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = this.suite; var r = r.options || {}; Yh('run(): got options: %O', r), e = e || function () {}; function i () { Yh('run(): root suite completed; emitting %s', fp.EVENT_RUN_END), t.emit(fp.EVENT_RUN_END) }r = function () { return Yh('run(): starting'), n.hasOnly() && (n.filterOnly(), Yh('run(): filtered exclusive Runnables')), t.state = fp.STATE_RUNNING, t._delay && (t.emit(fp.EVENT_DELAY_END), Yh('run(): "delay" ended')), Yh('run(): emitting %s', fp.EVENT_RUN_BEGIN), t.emit(fp.EVENT_RUN_BEGIN), Yh('run(): emitted %s', fp.EVENT_RUN_BEGIN), void t.runSuite(n, i) }; return this._opts.cleanReferencesAfterRun && this.on(fp.EVENT_SUITE_END, function (e) { e.cleanReferences() }), this.on(fp.EVENT_RUN_END, function () { this.state = fp.STATE_STOPPED, Yh('run(): emitted %s', fp.EVENT_RUN_END), e(this.failures) }), this._removeEventListener(tr, 'uncaughtException', this.uncaught), this._removeEventListener(tr, 'unhandledRejection', this.unhandled), this._addEventListener(tr, 'uncaughtException', this.uncaught), this._addEventListener(tr, 'unhandledRejection', this.unhandled), this._delay ? (this.emit(fp.EVENT_DELAY_BEGIN, n), n.once(Qh, r), Yh('run(): waiting for green light due to --delay')) : hp.immediately(r), this }, hp.prototype.linkPartialObjects = function (e) { return this }, hp.prototype.runAsync = (function () { const e = Cn(regeneratorRuntime.mark(function e () { let t; const r = this; const n = arguments; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:return t = n.length > 0 && void 0 !== n[0] ? n[0] : {}, e.abrupt('return', new Promise(function (e) { r.run(e, t) })); case 2:case 'end':return e.stop() } } }, e) })); return function () { return e.apply(this, arguments) } }()), hp.prototype.abort = function () { return Yh('abort(): aborting'), this._abort = !0, this }, hp.prototype.isParallelMode = function () { return !1 }, hp.prototype.workerReporter = function () { throw ap('workerReporter() not supported in serial mode') }, hp.constants = fp; const gp = hp; const yp = e(function (e, f) { var t = gp.constants; const n = t.EVENT_TEST_PASS; const i = t.EVENT_TEST_FAIL; var t = Eh.isBrowser(); f = e.exports = y; const r = t || tr.stdout.isTTY && tr.stderr.isTTY; var e = console.log; f.useColors = !t && (wh.stdout || void 0 !== tr.env.MOCHA_COLORS), f.inlineDiffs = !1, f.colors = { pass: 90, fail: 31, 'bright pass': 92, 'bright fail': 91, 'bright yellow': 93, pending: 36, suite: 0, 'error title': 0, 'error message': 31, 'error stack': 90, checkmark: 32, fast: 90, medium: 33, slow: 31, green: 32, light: 90, 'diff gutter': 90, 'diff added': 32, 'diff removed': 31, 'diff added inline': '30;42', 'diff removed inline': '30;41' }, f.symbols = { ok: 'â', err: 'â', dot: 'â¤', comma: ',', bang: '!' }, tr.platform === 'win32' && (f.symbols.ok = 'â', f.symbols.err = 'Ã', f.symbols.dot = '.'); const h = f.color = function (e, t) { return f.useColors ? '[' + f.colors[e] + 'm' + t + '[0m' : String(t) }; f.window = { width: 75 }, r && (f.window.width = t ? ('innerHeight' in O ? [O.innerHeight, O.innerWidth] : [640, 480])[1] : tr.stdout.getWindowSize(1)[0]), f.cursor = { hide: function () { r && tr.stdout.write('[?25l') }, show: function () { r && tr.stdout.write('[?25h') }, deleteLine: function () { r && tr.stdout.write('[2K') }, beginningOfLine: function () { r && tr.stdout.write('[0G') }, CR: function () { r ? (f.cursor.deleteLine(), f.cursor.beginningOfLine()) : tr.stdout.write('\r') } }; const p = f.showDiff = function (e) { return e && !1 !== e.showDiff && (t = e.actual, r = e.expected, a.call(t) === a.call(r)) && void 0 !== e.expected; let t, r }; function d (e) { Eh.isString(e.actual) && Eh.isString(e.expected) || (e.actual = Eh.stringify(e.actual), e.expected = Eh.stringify(e.expected)) } const g = f.generateDiff = function (e, t) { try { return (f.inlineDiffs ? function (e, t) { e = (function (e, t) { return $f.diffWordsWithSpace(e, t).map(function (e) { return e.added ? o('diff added inline', e.value) : e.removed ? o('diff removed inline', e.value) : e.value }).join('') }(e, t)), t = e.split('\n'); { let n; t.length > 4 && (n = String(t.length).length, e = t.map(function (e, t) { return r = ++t, t = n, r = String(r), Array(t - r.length + 1).join(' ') + r + ' | ' + e; let r }).join('\n')) } return e = (e = '\n' + h('diff removed inline', 'actual') + ' ' + h('diff added inline', 'expected') + '\n\n' + e + '\n').replace(/^/gm, '      ') } : function (e, t) { const r = '      '; t = $f.createPatch('string', e, t).split('\n').splice(5); return '\n      ' + o('diff added', '+ expected') + ' ' + o('diff removed', '- actual') + '\n\n' + t.map(function (e) { return e[0] === '+' ? r + o('diff added', e) : e[0] === '-' ? r + o('diff removed', e) : e.match(/@@/) ? '--' : e.match(/\\ No newline/) ? null : r + e }).filter(function (e) { return e != null }).join('\n') })(e, t) } catch (e) { return '\n      ' + h('diff added', '+ expected') + ' ' + h('diff removed', '- actual:  failed to generate Mocha diff') + '\n' } }; function y (e, t) { const r = this.failures = []; if (!e) { throw new TypeError('Missing runner argument') } this.options = t || {}, this.runner = e, this.stats = e.stats, e.on(n, function (e) { e.duration > e.slow() ? e.speed = 'slow' : e.duration > e.slow() / 2 ? e.speed = 'medium' : e.speed = 'fast' }), e.on(i, function (e, t) { p(t) && d(t), e.err && t instanceof Error ? e.err.multiple = (e.err.multiple || []).concat(t) : e.err = t, r.push(e) }) } function o (t, e) { return e.split('\n').map(function (e) { return h(t, e) }).join('\n') }f.list = function (e) { let c, l; y.consoleLog(), e.forEach(function (e, t) { let r; let n = h('error title', '  %s) %s:\n') + h('error message', '     %s') + h('error stack', '\n%s\n'); const i = e.err && e.err.multiple ? (l !== e && (c = [(l = e).err].concat(e.err.multiple)), c.shift()) : e.err; let o = i.message && typeof i.message.toString === 'function' ? i.message + '' : typeof i.inspect === 'function' ? i.inspect() + '' : ''; let a = i.stack || o; let s = o ? a.indexOf(o) : -1; s === -1 ? r = o : (s += o.length, r = a.slice(0, s), a = a.slice(s + 1)), i.uncaught && (r = 'Uncaught ' + r), !f.hideDiff && p(i) && (d(i), n = h('error title', '  %s) %s:\n%s') + h('error stack', '\n%s\n'), o = o.match(/^([^:]+): expected/), r = '\n      ' + h('error message', o ? o[1] : r), r += g(i.actual, i.expected)), a = a.replace(/^/gm, '  '); let u = ''; e.titlePath().forEach(function (e, t) { t !== 0 && (u += '\n     '); for (let r = 0; r < t; r++) { u += '  ' }u += e }), y.consoleLog(n, t + 1, u, r, a) }) }, y.prototype.epilogue = function () { let e; const t = this.stats; y.consoleLog(), e = h('bright pass', ' ') + h('green', ' %d passing') + h('light', ' (%s)'), y.consoleLog(e, t.passes || 0, Wf(t.duration)), t.pending && (e = h('pending', ' ') + h('pending', ' %d pending'), y.consoleLog(e, t.pending)), t.failures && (e = h('fail', '  %d failing'), y.consoleLog(e, t.failures), y.list(this.failures), y.consoleLog()), y.consoleLog() }; var a = Object.prototype.toString; y.consoleLog = e, y.abstract = !0 }); const mp = e(function (e, t) { const r = Eh.inherits; const n = gp.constants; const o = n.EVENT_TEST_PASS; const a = n.EVENT_TEST_FAIL; const s = n.EVENT_RUN_BEGIN; const u = n.EVENT_TEST_PENDING; const c = n.EVENT_RUN_END; function i (e, t) { yp.call(this, e, t); const r = this; const n = 0.75 * yp.window.width | 0; let i = -1; e.on(s, function () { tr.stdout.write('\n') }), e.on(u, function () { ++i % n == 0 && tr.stdout.write('\n  '), tr.stdout.write(yp.color('pending', yp.symbols.comma)) }), e.on(o, function (e) { ++i % n == 0 && tr.stdout.write('\n  '), e.speed === 'slow' ? tr.stdout.write(yp.color('bright yellow', yp.symbols.dot)) : tr.stdout.write(yp.color(e.speed, yp.symbols.dot)) }), e.on(a, function () { ++i % n == 0 && tr.stdout.write('\n  '), tr.stdout.write(yp.color('fail', yp.symbols.bang)) }), e.once(c, function () { tr.stdout.write('\n'), r.epilogue() }) }r(e.exports = i, yp), i.description = 'dot matrix representation' }); const vp = e(function (e, t) { const r = gp.constants; const i = r.EVENT_TEST_PASS; const o = r.EVENT_TEST_FAIL; const a = r.EVENT_SUITE_BEGIN; const s = r.EVENT_SUITE_END; function n (e, t) { yp.call(this, e, t); let r = 2; function n () { return Array(r).join('  ') }e.on(a, function (e) { e.root || (++r, yp.consoleLog('%s<section class="suite">', n()), ++r, yp.consoleLog('%s<h1>%s</h1>', n(), Eh.escape(e.title)), yp.consoleLog('%s<dl>', n())) }), e.on(s, function (e) { e.root || (yp.consoleLog('%s</dl>', n()), --r, yp.consoleLog('%s</section>', n()), --r) }), e.on(i, function (e) { yp.consoleLog('%s  <dt>%s</dt>', n(), Eh.escape(e.title)), yp.consoleLog('%s  <dt>%s</dt>', n(), Eh.escape(e.file)); e = Eh.escape(Eh.clean(e.body)); yp.consoleLog('%s  <dd><pre><code>%s</code></pre></dd>', n(), e) }), e.on(o, function (e, t) { yp.consoleLog('%s  <dt class="error">%s</dt>', n(), Eh.escape(e.title)), yp.consoleLog('%s  <dt class="error">%s</dt>', n(), Eh.escape(e.file)); e = Eh.escape(Eh.clean(e.body)); yp.consoleLog('%s  <dd class="error"><pre><code>%s</code></pre></dd>', n(), e), yp.consoleLog('%s  <dd class="error">%s</dd>', n(), Eh.escape(t)) }) }(e.exports = n).description = 'HTML documentation' }); const bp = e(function (e, t) { var r = gp.constants; const o = r.EVENT_TEST_PASS; const a = r.EVENT_TEST_FAIL; const s = r.EVENT_RUN_BEGIN; const u = r.EVENT_RUN_END; const c = r.EVENT_TEST_PENDING; const l = r.EVENT_TEST_END; var r = Eh.inherits; const n = Vu.format; function i (e, t) { yp.call(this, e, t); const r = this; let n = 1; let i = '12'; t && t.reporterOptions && t.reporterOptions.tapVersion && (i = t.reporterOptions.tapVersion.toString()), this._producer = (function (e) { const t = { 12: new d(), 13: new g() }[e]; if (t) { return t } throw new Error('invalid or unsupported TAP version: ' + JSON.stringify(e)) }(i)), e.once(s, function () { r._producer.writeVersion() }), e.on(l, function () { ++n }), e.on(c, function (e) { r._producer.writePending(n, e) }), e.on(o, function (e) { r._producer.writePass(n, e) }), e.on(a, function (e, t) { r._producer.writeFail(n, e, t) }), e.once(u, function () { r._producer.writeEpilogue(e.stats) }) } function f (e) { return e.fullTitle().replace(/#/g, '') } function h () { const e = Array.from(arguments); e[0] += '\n', tr.stdout.write(n.apply(null, e)) } function p () {} function d () { this.writeFail = function (e, t, r) { p.prototype.writeFail.call(this, e, t, r), r.message && h(r.message.replace(/^/gm, '  ')), r.stack && h(r.stack.replace(/^/gm, '  ')) } } function g () { function n (e) { return Array(e + 1).join('  ') } this.writeVersion = function () { h('TAP version 13') }, this.writeFail = function (e, t, r) { p.prototype.writeFail.call(this, e, t, r), r.message == null && r.stack == null || (h(n(1) + '---'), r.message && (h(n(2) + 'message: |-'), h(r.message.replace(/^/gm, n(3)))), r.stack && (h(n(2) + 'stack: |-'), h(r.stack.replace(/^/gm, n(3)))), h(n(1) + '...')) } }r(e.exports = i, yp), p.prototype.writeVersion = function () {}, p.prototype.writePlan = function (e) { h('%d..%d', 1, e) }, p.prototype.writePass = function (e, t) { h('ok %d %s', e, f(t)) }, p.prototype.writePending = function (e, t) { h('ok %d %s # SKIP -', e, f(t)) }, p.prototype.writeFail = function (e, t, r) { h('not ok %d %s', e, f(t)) }, p.prototype.writeEpilogue = function (e) { h('# tests ' + (e.passes + e.failures)), h('# pass ' + e.passes), h('# fail ' + e.failures), this.writePlan(e.passes + e.failures + e.pending) }, r(d, p), r(g, p), i.description = 'TAP-compatible output' }); const wp = e(function (e, t) { const r = gp.constants; const s = r.EVENT_TEST_PASS; const u = r.EVENT_TEST_FAIL; const c = r.EVENT_TEST_END; const l = r.EVENT_RUN_END; const f = r.EVENT_TEST_PENDING; function n (t, e) { yp.call(this, t, e); const r = this; const n = []; const i = []; const o = []; const a = []; t.on(c, function (e) { n.push(e) }), t.on(s, function (e) { a.push(e) }), t.on(u, function (e) { o.push(e) }), t.on(f, function (e) { i.push(e) }), t.once(l, function () { const e = { stats: r.stats, tests: n.map(h), pending: i.map(h), failures: o.map(h), passes: a.map(h) }; t.testResults = e, tr.stdout.write(JSON.stringify(e, null, 2)) }) } function h (e) { let t; let r; let n; let i = e.err || {}; return i instanceof Error && (t = i, r = {}, Object.getOwnPropertyNames(t).forEach(function (e) { r[e] = t[e] }, t), i = r), { title: e.title, fullTitle: e.fullTitle(), file: e.file, duration: e.duration, currentRetry: e.currentRetry(), speed: e.speed, err: (i = i, n = [], JSON.parse(JSON.stringify(i, function (e, t) { if (kn(t) === 'object' && t !== null) { if (n.indexOf(t) !== -1) { return '' + t } n.push(t) } return t }))) } }(e.exports = n).description = 'single JSON object' }); const Ep = ''.repeat || function (e) { let t = String(f(this)); let r = ''; let n = ne(e); if (n < 0 || n == 1 / 0) { throw RangeError('Wrong number of repetitions') } for (;n > 0; (n >>>= 1) && (t += t)) { 1 & n && (r += t) } return r }; const Tp = 1.0.toFixed; const Ap = Math.floor; var _p = function (e, t, r) { return t === 0 ? r : t % 2 == 1 ? _p(e, t - 1, r * e) : _p(e * e, t / 2, r) }; var Te = Tp && (8e-5.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || (0xde0b6b3a7640080).toFixed(0) !== '1000000000000000128') || !y(function () { Tp.call({}) }); ue({ target: 'Number', proto: !0, forced: Te }, { toFixed: function (e) { function t (e, t) { for (let r = -1, n = t; ++r < 6;) { n += e * a[r], a[r] = n % 1e7, n = Ap(n / 1e7) } } function r (e) { for (let t = 6, r = 0; --t >= 0;) { r += a[t], a[t] = Ap(r / e), r = r % e * 1e7 } } let n; let i = (function (e) { if (typeof e !== 'number' && l(e) != 'Number') { throw TypeError('Incorrect invocation') } return +e }(this)); const o = ne(e); var a = [0, 0, 0, 0, 0, 0]; let s = ''; let u = '0'; let c = function () { for (var e, t = 6, r = ''; --t >= 0;) { r === '' && t !== 0 && a[t] === 0 || (e = String(a[t]), r = r === '' ? e : r + Ep.call('0', 7 - e.length) + e) } return r }; if (o < 0 || o > 20) { throw RangeError('Incorrect fraction digits') } if (i != i) { return 'NaN' } if (i <= -1e21 || i >= 1e21) { return String(i) } if (i < 0 && (s = '-', i = -i), i > 1e-21) { if (i = (e = (function (e) { for (var t = 0, r = e; r >= 4096;) { t += 12, r /= 4096 } for (;r >= 2;) { t += 1, r /= 2 } return t }(i * _p(2, 69, 1))) - 69) < 0 ? i * _p(2, -e, 1) : i / _p(2, e, 1), i *= 4503599627370496, (e = 52 - e) > 0) { for (t(0, i), n = o; n >= 7;) { t(1e7, 0), n -= 7 } for (t(_p(10, n, 1), 0), n = e - 1; n >= 23;) { r(1 << 23), n -= 23 }r(1 << n), t(1, 1), r(2), u = c() } else { t(0, i), t(1 << -e, 0), u = c() + Ep.call('0', o) } } return u = o > 0 ? s + ((c = u.length) <= o ? '0.' + Ep.call('0', o - c) + u : u.slice(0, c - o) + '.' + u.slice(c - o)) : s + u } }); const Sp = xp; function xp () { this.percent = 0, this.size(0), this.fontSize(11), this.font('helvetica, arial, sans-serif') }xp.prototype.size = function (e) { return this._size = e, this }, xp.prototype.text = function (e) { return this._text = e, this }, xp.prototype.fontSize = function (e) { return this._fontSize = e, this }, xp.prototype.font = function (e) { return this._font = e, this }, xp.prototype.update = function (e) { return this.percent = e, this }, xp.prototype.draw = function (e) { try { let t = Math.min(this.percent, 100); const r = this._size; let n = r / 2; const i = n; const o = n; const a = n - 1; const s = this._fontSize; e.font = s + 'px ' + this._font; n = 2 * Math.PI * (t / 100); e.clearRect(0, 0, r, r), e.strokeStyle = '#9f9f9f', e.beginPath(), e.arc(i, o, a, 0, n, !1), e.stroke(), e.strokeStyle = '#eee', e.beginPath(), e.arc(i, o, a - 1, 0, n, !0), e.stroke(); n = this._text || (0 | t) + '%', t = e.measureText(n).width; e.fillText(n, i - t / 2 + 1, o + s / 2 - 1) } catch (e) {} return this }; const Rp = e(function (e, t) { const r = gp.constants; const v = r.EVENT_TEST_PASS; const b = r.EVENT_TEST_FAIL; const w = r.EVENT_SUITE_BEGIN; const E = r.EVENT_SUITE_END; const T = r.EVENT_TEST_PENDING; const A = Eh.escape; const _ = O.Date; e.exports = n; const S = '<ul id="mocha-stats"><li class="progress"><canvas width="40" height="40"></canvas></li><li class="passes"><a href="javascript:void(0);">passes:</a> <em>0</em></li><li class="failures"><a href="javascript:void(0);">failures:</a> <em>0</em></li><li class="duration">duration: <em>0</em>s</li></ul>'; const x = '&#x2023;'; function n (t, e) { yp.call(this, t, e); let r; let n; const i = this; const o = this.stats; const a = R(S); let s = a.getElementsByTagName('li'); const u = s[1].getElementsByTagName('em')[0]; const c = s[1].getElementsByTagName('a')[0]; const l = s[2].getElementsByTagName('em')[0]; const f = s[2].getElementsByTagName('a')[0]; const h = s[3].getElementsByTagName('em')[0]; const p = a.getElementsByTagName('canvas')[0]; const d = R('<ul id="mocha-report"></ul>'); const g = [d]; var e = document.getElementById('mocha'); function y (e) { g[0] && g[0].appendChild(e) } function m () { let e = o.tests / t.total * 100 | 0; r && r.update(e).draw(n); e = new _() - o.start; L(u, o.passes), L(l, o.failures), L(h, (e / 1e3).toFixed(2)) }p.getContext && (s = window.devicePixelRatio || 1, p.style.width = p.width, p.style.height = p.height, p.width *= s, p.height *= s, (n = p.getContext('2d')).scale(s, s), r = new Sp()), e ? (k(c, 'click', function (e) { e.preventDefault(), D(); e = /pass/.test(d.className) ? '' : ' pass'; d.className = d.className.replace(/fail|pass/g, '') + e, d.className.trim() && N('test pass') }), k(f, 'click', function (e) { e.preventDefault(), D(); e = /fail/.test(d.className) ? '' : ' fail'; d.className = d.className.replace(/fail|pass/g, '') + e, d.className.trim() && N('test fail') }), e.appendChild(a), e.appendChild(d), r && r.size(40), t.on(w, function (e) { e.root || (e = R('<li class="suite"><h1><a href="%s">%s</a></h1></li>', i.suiteURL(e), A(e.title)), g[0].appendChild(e), g.unshift(document.createElement('ul')), e.appendChild(g[0])) }), t.on(E, function (e) { e.root ? m() : g.shift() }), t.on(v, function (e) { var t = i.testURL(e); var t = R('<li class="test pass %e"><h2>%e<span class="duration">%ems</span> <a href="%s" class="replay">' + x + '</a></h2></li>', e.speed, e.title, e.duration, t); i.addCodeToggle(t, e.body), y(t), m() }), t.on(b, function (e) { let t; const r = R('<li class="test fail"><h2>%e <a href="%e" class="replay">' + x + '</a></h2></li>', e.title, i.testURL(e)); let n = e.err.toString(); n === '[object Error]' && (n = e.err.message), e.err.stack ? t = (t = e.err.stack.indexOf(e.err.message)) === -1 ? e.err.stack : e.err.stack.substr(e.err.message.length + t) : e.err.sourceURL && void 0 !== e.err.line && (t = '\n(' + e.err.sourceURL + ':' + e.err.line + ')'), t = t || '', e.err.htmlMessage && t ? r.appendChild(R('<div class="html-error">%s\n<pre class="error">%e</pre></div>', e.err.htmlMessage, t)) : e.err.htmlMessage ? r.appendChild(R('<div class="html-error">%s</div>', e.err.htmlMessage)) : r.appendChild(R('<pre class="error">%e%e</pre>', n, t)), i.addCodeToggle(r, e.body), y(r), m() }), t.on(T, function (e) { y(R('<li class="test pass pending"><h2>%e</h2></li>', e.title)), m() })) : document.body.appendChild(R('<div id="mocha-error">%s</div>', '#mocha div missing, add it to your document')) } function i (e) { var t = (t = window.location.search) && t.replace(/[?&]grep=[^&\s]*/g, '').replace(/^&/, '?'); return window.location.pathname + (t ? t + '&' : '?') + 'grep=' + encodeURIComponent(Uf(e)) } function R (e) { const r = arguments; const t = document.createElement('div'); let n = 1; return t.innerHTML = e.replace(/%([se])/g, function (e, t) { switch (t) { case 's':return String(r[n++]); case 'e':return A(r[n++]) } }), t.firstChild } function N (e) { for (let t = document.getElementsByClassName('suite'), r = 0; r < t.length; r++) { t[r].getElementsByClassName(e).length || (t[r].className += ' hidden') } } function D () { for (let e = document.getElementsByClassName('suite hidden'); e.length > 0;) { e[0].className = e[0].className.replace('suite hidden', 'suite') } } function L (e, t) { e.textContent ? e.textContent = t : e.innerText = t } function k (e, t, r) { e.addEventListener ? e.addEventListener(t, r, !1) : e.attachEvent('on' + t, r) }n.prototype.suiteURL = function (e) { return i(e.fullTitle()) }, n.prototype.testURL = function (e) { return i(e.fullTitle()) }, n.prototype.addCodeToggle = function (e, t) { k(e.getElementsByTagName('h2')[0], 'click', function () { r.style.display = r.style.display === 'none' ? 'block' : 'none' }); var r = R('<pre><code>%e</code></pre>', Eh.clean(t)); e.appendChild(r), r.style.display = 'none' }, n.browserOnly = !0 }); const Np = e(function (e, t) { const r = Eh.inherits; const n = gp.constants; const i = n.EVENT_RUN_BEGIN; const o = n.EVENT_RUN_END; const a = n.EVENT_TEST_BEGIN; const s = n.EVENT_TEST_FAIL; const u = n.EVENT_TEST_PASS; const c = n.EVENT_TEST_PENDING; const l = yp.color; const f = yp.cursor; function h (e, t) { yp.call(this, e, t); let r = 0; e.on(i, function () { yp.consoleLog() }), e.on(a, function (e) { tr.stdout.write(l('pass', '    ' + e.fullTitle() + ': ')) }), e.on(c, function (e) { const t = l('checkmark', '  -') + l('pending', ' %s'); yp.consoleLog(t, e.fullTitle()) }), e.on(u, function (e) { const t = l('checkmark', '  ' + yp.symbols.ok) + l('pass', ' %s: ') + l(e.speed, '%dms'); f.CR(), yp.consoleLog(t, e.fullTitle(), e.duration) }), e.on(s, function (e) { f.CR(), yp.consoleLog(l('fail', '  %d) %s'), ++r, e.fullTitle()) }), e.once(o, this.epilogue.bind(this)) }r(e.exports = h, yp), h.description = 'like "spec" reporter but flat' }); const Dp = e(function (e, t) { const r = Eh.inherits; const n = gp.constants; const i = n.EVENT_RUN_END; const o = n.EVENT_RUN_BEGIN; function a (e, t) { yp.call(this, e, t), e.on(o, function () { tr.stdout.write('[2J'), tr.stdout.write('[1;3H') }), e.once(i, this.epilogue.bind(this)) }r(e.exports = a, yp), a.description = 'essentially just a summary' }); const Lp = e(function (e, t) { var r = gp.constants; const o = r.EVENT_RUN_BEGIN; const a = r.EVENT_RUN_END; const s = r.EVENT_SUITE_BEGIN; const u = r.EVENT_SUITE_END; const c = r.EVENT_TEST_FAIL; const l = r.EVENT_TEST_PASS; const f = r.EVENT_TEST_PENDING; var r = Eh.inherits; const h = yp.color; function n (e, t) { yp.call(this, e, t); let r = 0; let n = 0; function i () { return Array(r).join('  ') }e.on(o, function () { yp.consoleLog() }), e.on(s, function (e) { ++r, yp.consoleLog(h('suite', '%s%s'), i(), e.title) }), e.on(u, function () { --r === 1 && yp.consoleLog() }), e.on(f, function (e) { const t = i() + h('pending', '  - %s'); yp.consoleLog(t, e.title) }), e.on(l, function (e) { let t; e.speed === 'fast' ? (t = i() + h('checkmark', '  ' + yp.symbols.ok) + h('pass', ' %s'), yp.consoleLog(t, e.title)) : (t = i() + h('checkmark', '  ' + yp.symbols.ok) + h('pass', ' %s') + h(e.speed, ' (%dms)'), yp.consoleLog(t, e.title, e.duration)) }), e.on(c, function (e) { yp.consoleLog(i() + h('fail', '  %d) %s'), ++n, e.title) }), e.once(a, this.epilogue.bind(this)) }r(e.exports = n, yp), n.description = 'hierarchical & verbose [default]' }); const kp = e(function (e, t) { const r = gp.constants; const n = Eh.inherits; const i = r.EVENT_RUN_BEGIN; const o = r.EVENT_TEST_PENDING; const a = r.EVENT_TEST_PASS; const s = r.EVENT_RUN_END; const u = r.EVENT_TEST_FAIL; function c (e, t) { yp.call(this, e, t); const r = this; var t = 0.75 * yp.window.width | 0; this.nyanCatWidth = 11; this.colorIndex = 0, this.numberOfLines = 4, this.rainbowColors = r.generateColors(), this.scoreboardWidth = 5, this.tick = 0, this.trajectories = [[], [], [], []], this.trajectoryWidthMax = t - 11, e.on(i, function () { yp.cursor.hide(), r.draw() }), e.on(o, function () { r.draw() }), e.on(a, function () { r.draw() }), e.on(u, function () { r.draw() }), e.once(s, function () { yp.cursor.show(); for (let e = 0; e < r.numberOfLines; e++) { l('\n') }r.epilogue() }) } function l (e) { tr.stdout.write(e) }n(e.exports = c, yp), c.prototype.draw = function () { this.appendRainbow(), this.drawScoreboard(), this.drawRainbow(), this.drawNyanCat(), this.tick = !this.tick }, c.prototype.drawScoreboard = function () { const e = this.stats; function t (e, t) { l(' '), l(yp.color(e, t)), l('\n') }t('green', e.passes), t('fail', e.failures), t('pending', e.pending), l('\n'), this.cursorUp(this.numberOfLines) }, c.prototype.appendRainbow = function () { for (let e = this.tick ? '_' : '-', t = this.rainbowify(e), r = 0; r < this.numberOfLines; r++) { const n = this.trajectories[r]; n.length >= this.trajectoryWidthMax && n.shift(), n.push(t) } }, c.prototype.drawRainbow = function () { const t = this; this.trajectories.forEach(function (e) { l('[' + t.scoreboardWidth + 'C'), l(e.join('')), l('\n') }), this.cursorUp(this.numberOfLines) }, c.prototype.drawNyanCat = function () { let e; const t = '[' + (this.scoreboardWidth + this.trajectories[0].length) + 'C'; l(t), l('_,------,'), l('\n'), l(t), l('_|' + (this.tick ? '  ' : '   ') + '/\\_/\\ '), l('\n'), l(t), e = this.tick ? '_' : '__', l((this.tick ? '~' : '^') + '|' + e + this.face() + ' '), l('\n'), l(t), l((this.tick ? ' ' : '  ') + '""  "" '), l('\n'), this.cursorUp(this.numberOfLines) }, c.prototype.face = function () { const e = this.stats; return e.failures ? '( x .x)' : e.pending ? '( o .o)' : e.passes ? '( ^ .^)' : '( - .-)' }, c.prototype.cursorUp = function (e) { l('[' + e + 'A') }, c.prototype.cursorDown = function (e) { l('[' + e + 'B') }, c.prototype.generateColors = function () { for (var e = [], t = 0; t < 42; t++) { var r = Math.floor(Math.PI / 3); const n = t * (1 / 6); const i = Math.floor(3 * Math.sin(n) + 3); const o = Math.floor(3 * Math.sin(n + 2 * r) + 3); var r = Math.floor(3 * Math.sin(n + 4 * r) + 3); e.push(36 * i + 6 * o + r + 16) } return e }, c.prototype.rainbowify = function (e) { if (!yp.useColors) { return e } const t = this.rainbowColors[this.colorIndex % this.rainbowColors.length]; return this.colorIndex += 1, '[38;5;' + t + 'm' + e + '[0m' }, c.description = '"nyan cat"' }); const Op = {}; const Cp = e(function (e, t) { const a = bh.createUnsupportedError; var r = gp.constants; const s = r.EVENT_TEST_PASS; const u = r.EVENT_TEST_FAIL; const c = r.EVENT_RUN_END; const l = r.EVENT_TEST_PENDING; const i = Uh.constants.STATE_FAILED; var r = Eh.inherits; const f = Eh.escape; const h = O.Date; function n (e, t) { yp.call(this, e, t); let r; const n = this.stats; const i = []; const o = this; if (t && t.reporterOptions) { if (t.reporterOptions.output) { if (!Op.createWriteStream) { throw a('file output not supported in browser') } Op.mkdirSync(Hf.dirname(t.reporterOptions.output), { recursive: !0 }), o.fileStream = Op.createWriteStream(t.reporterOptions.output) }r = t.reporterOptions.suiteName }r = r || 'Mocha Tests', e.on(l, function (e) { i.push(e) }), e.on(s, function (e) { i.push(e) }), e.on(u, function (e) { i.push(e) }), e.once(c, function () { o.write(p('testsuite', { name: r, tests: n.tests, failures: 0, errors: n.failures, skipped: n.tests - n.failures - n.passes, timestamp: (new h()).toUTCString(), time: n.duration / 1e3 || 0 }, !1)), i.forEach(function (e) { o.test(e) }), o.write('</testsuite>') }) } function p (e, t, r, n) { let i; const o = r ? '/>' : '>'; const a = []; for (i in t) { Object.prototype.hasOwnProperty.call(t, i) && a.push(i + '="' + f(t[i]) + '"') } return r = '<' + e + (a.length ? ' ' + a.join(' ') : '') + o, n && (r += n + '</' + e + o), r }r(e.exports = n, yp), n.prototype.done = function (e, t) { this.fileStream ? this.fileStream.end(function () { t(e) }) : t(e) }, n.prototype.write = function (e) { this.fileStream ? this.fileStream.write(e + '\n') : kn(tr) === 'object' && tr.stdout ? tr.stdout.write(e + '\n') : yp.consoleLog(e) }, n.prototype.test = function (e) { yp.useColors = !1; let t; let r; const n = { classname: e.parent.fullTitle(), name: e.title, time: e.duration / 1e3 || 0 }; e.state === i ? (t = e.err, r = !yp.hideDiff && yp.showDiff(t) ? '\n' + yp.generateDiff(t.actual, t.expected) : '', this.write(p('testcase', n, !1, p('failure', {}, !1, f(t.message) + f(r) + '\n' + f(t.stack))))) : e.isPending() ? this.write(p('testcase', n, !1, p('skipped', {}, !0))) : this.write(p('testcase', n, !0)) }, n.description = 'XUnit-compatible XML output' }); const Ip = e(function (e, t) { const r = gp.constants; const o = r.EVENT_RUN_END; const a = r.EVENT_SUITE_BEGIN; const s = r.EVENT_SUITE_END; const u = r.EVENT_TEST_PASS; function n (e, t) { yp.call(this, e, t); let r = 0; let n = ''; function i (e) { return (function e (t, r) { ++r; let n; let i; let o = ''; for (i in t) { i !== 'suite' && (i !== '$' && (n = ' - [' + i.substring(1) + ']', n += '(#' + Eh.slug(t[i].suite.fullTitle()) + ')\n', o += Array(r).join('  ') + n), o += e(t[i], r)) } return o }((function t (e, r) { const n = r; const i = '$' + e.title; return r = r[i] = r[i] || { suite: e }, e.suites.forEach(function (e) { t(e, r) }), n }(e, {})), 0)) }i(e.suite), e.on(a, function (e) { ++r; const t = Eh.slug(e.fullTitle()); n += '<a name="' + t + '"></a>\n', n += (e = e.title, Array(r).join('#') + ' ' + e + '\n') }), e.on(s, function () { --r }), e.on(u, function (e) { const t = Eh.clean(e.body); n += e.title + '.\n', n += '\n```js\n', n += t + '\n', n += '```\n\n' }), e.once(o, function () { tr.stdout.write('# TOC\n'), tr.stdout.write(i(e.suite)), tr.stdout.write(n) }) }(e.exports = n).description = 'GitHub Flavored Markdown' }); const Pp = e(function (e, t) { var r = gp.constants; const u = r.EVENT_RUN_BEGIN; const c = r.EVENT_TEST_END; const l = r.EVENT_RUN_END; var r = Eh.inherits; const f = yp.color; const h = yp.cursor; function n (e, r) { yp.call(this, e, r); const t = this; const n = 0.5 * yp.window.width | 0; const i = e.total; let o = 0; let a = -1; const s = (r = r || {}).reporterOptions || {}; r.open = s.open || '[', r.complete = s.complete || 'â¬', r.incomplete = s.incomplete || yp.symbols.dot, r.close = s.close || ']', r.verbose = s.verbose || !1, e.on(u, function () { tr.stdout.write('\n'), h.hide() }), e.on(c, function () { const e = n * (++o / i) | 0; const t = n - e; e === a && !r.verbose || (a = e, h.CR(), tr.stdout.write('[J'), tr.stdout.write(f('progress', '  ' + r.open)), tr.stdout.write(Array(e).join(r.complete)), tr.stdout.write(Array(t).join(r.incomplete)), tr.stdout.write(f('progress', r.close)), r.verbose && tr.stdout.write(f('progress', ' ' + o + ' of ' + i))) }), e.once(l, function () { h.show(), tr.stdout.write('\n'), t.epilogue() }) }e.exports = n, yp.colors.progress = 90, r(n, yp), n.description = 'a progress bar' }); const qp = e(function (e, t) { const r = Eh.inherits; const n = gp.constants; const l = n.EVENT_RUN_BEGIN; const f = n.EVENT_RUN_END; const h = n.EVENT_TEST_END; const p = Uh.constants.STATE_FAILED; const d = yp.cursor; const g = yp.color; function i (e, t) { yp.call(this, e, t); const r = this; const n = 0.75 * yp.window.width | 0; const i = tr.stdout; let o = g('plane', 'â'); let a = -1; let s = 0; let u = 0; function c () { const e = Array(n).join('-'); return '  ' + g('runway', e) }e.on(l, function () { i.write('\n\n\n  '), d.hide() }), e.on(h, function (e) { const t = a === -1 ? n * ++s / ++u | 0 : a; e.state === p && (o = g('plane crash', 'â'), a = t), i.write('[' + (n + 1) + 'D[2A'), i.write(c()), i.write('\n  '), i.write(g('runway', Array(t).join('â'))), i.write(o), i.write(g('runway', Array(n - t).join('â') + '\n')), i.write(c()), i.write('[0m') }), e.once(f, function () { d.show(), tr.stdout.write('\n'), r.epilogue() }), tr.once('SIGINT', function () { d.show(), Jt(function () { tr.kill(tr.pid, 'SIGINT') }) }) }e.exports = i, yp.colors.plane = 0, yp.colors['plane crash'] = 31, yp.colors.runway = 90, r(i, yp), i.description = 'Unicode landing strip' }); const Up = e(function (e, t) { const r = gp.constants; const i = r.EVENT_TEST_PASS; const o = r.EVENT_TEST_FAIL; const a = r.EVENT_RUN_BEGIN; const s = r.EVENT_RUN_END; function n (e, t) { yp.call(this, e, t); const r = this; const n = e.total; e.once(a, function () { u(['start', { total: n }]) }), e.on(i, function (e) { u(['pass', c(e)]) }), e.on(o, function (e, t) { (e = c(e)).err = t.message, e.stack = t.stack || null, u(['fail', e]) }), e.once(s, function () { u(['end', r.stats]) }) } function u (e) { tr.stdout.write(JSON.stringify(e) + '\n') } function c (e) { return { title: e.title, fullTitle: e.fullTitle(), file: e.file, duration: e.duration, currentRetry: e.currentRetry(), speed: e.speed } }(e.exports = n).description = 'newline delimited JSON events' }); const Fp = e(function (e, t) { t.Base = t.base = yp, t.Dot = t.dot = mp, t.Doc = t.doc = vp, t.TAP = t.tap = bp, t.JSON = t.json = wp, t.HTML = t.html = Rp, t.List = t.list = Np, t.Min = t.min = Dp, t.Spec = t.spec = Lp, t.Nyan = t.nyan = kp, t.XUnit = t.xunit = Cp, t.Markdown = t.markdown = Ip, t.Progress = t.progress = Pp, t.Landing = t.landing = qp, t.JSONStream = t['json-stream'] = Up }); var Y = 'https://mochajs.org/'; var ut = 'https://ibin.co/4QuRuGjXvl36.png'; var i = { name: 'mocha', version: '8.3.0', homepage: Y, notifyLogo: ut }; const Bp = t(Object.freeze({ __proto__: null, name: 'mocha', version: '8.3.0', homepage: Y, notifyLogo: ut, default: i })); const jp = O.Date; const Mp = O.setTimeout; const Vp = gp.constants.EVENT_RUN_END; const Gp = Eh.isBrowser; function Hp (e) { if (e) { return Promise.resolve() } e = 'not permitted by user (' + (!1 === e ? 'blocked' : 'unacknowledged') + ')'; return Promise.reject(new Error(e)) } function zp (e) { console.error('notification error:', e.message) } const Yp = function () { const e = 'Notification' in window; const t = typeof Promise === 'function'; return Gp() && e && t }; const Wp = function (e) { const t = { granted: function () { return Promise.resolve(!0) }, denied: function () { return Promise.resolve(!1) }, default: function () { return Notification.requestPermission().then(function (e) { return e === 'granted' }) } }[Notification.permission](); e.once(Vp, function () { Promise.race([t, Promise.resolve(void 0)]).then(Hp).then(function () { !(function (e) { let t; let r; const n = e.stats; const i = 'â'; const o = 'â'; var e = Bp.notifyLogo; r = n.failures ? (r = n.failures + ' of ' + n.tests + ' tests failed', t = i + ' ' + r, 'Failed') : (r = n.passes + ' tests passed in ' + n.duration + 'ms', t = o + ' ' + r, 'Passed'); e = { badge: e, body: t, dir: 'ltr', icon: e, lang: 'en-US', name: 'mocha', requireInteraction: !1, timestamp: jp.now() }, e = new Notification(r, e); Mp(e.close.bind(e), 4e3) }(e)) }).catch(zp) }) }; var Vl = ['js', 'cjs', 'mjs']; var Te = { diff: !0, extension: Vl, package: './package.json', reporter: 'spec', slow: 75, timeout: 2e3, ui: 'bdd', 'watch-ignore': ['node_modules', '.git'] }; var Y = Object.freeze({ __proto__: null, diff: !0, extension: Vl, reporter: 'spec', slow: 75, timeout: 2e3, ui: 'bdd', default: Te }); var ut = gp.constants; const $p = ut.EVENT_TEST_PASS; const Jp = ut.EVENT_TEST_FAIL; const Kp = ut.EVENT_SUITE_BEGIN; const Qp = ut.EVENT_RUN_BEGIN; const Zp = ut.EVENT_TEST_PENDING; const Xp = ut.EVENT_RUN_END; const ed = ut.EVENT_TEST_END; const td = O.Date; const rd = function (e) { const t = { suites: 0, tests: 0, passes: 0, pending: 0, failures: 0 }; if (!e) { throw new TypeError('Missing runner argument') } e.stats = t, e.once(Qp, function () { t.start = new td() }), e.on(Kp, function (e) { e.root || t.suites++ }), e.on($p, function () { t.passes++ }), e.on(Jp, function () { t.failures++ }), e.on(Zp, function () { t.pending++ }), e.on(ed, function () { t.tests++ }), e.once(Xp, function () { t.end = new td(), t.duration = t.end - t.start }) }; const nd = bh.createInvalidArgumentTypeError; const id = Eh.isString; const od = Eh.constants.MOCHA_ID_PROP_NAME; const ad = sd; function sd (e, t) { if (!id(e)) { throw nd('Test argument "title" should be a string. Received type "' + kn(e) + '"', 'title', 'string') } this.type = 'test', Uh.call(this, e, t), this.reset() }Eh.inherits(sd, Uh), sd.prototype.reset = function () { Uh.prototype.reset.call(this), this.pending = !this.fn, delete this.state }, sd.prototype.retriedTest = function (e) { if (!arguments.length) { return this._retriedTest } this._retriedTest = e }, sd.prototype.markOnly = function () { this.parent.appendOnlyTest(this) }, sd.prototype.clone = function () { const e = new sd(this.title, this.fn); return e.timeout(this.timeout()), e.slow(this.slow()), e.retries(this.retries()), e.currentRetry(this.currentRetry()), e.retriedTest(this.retriedTest() || this), e.globals(this.globals()), e.parent = this.parent, e.file = this.file, e.ctx = this.ctx, e }, sd.prototype.serialize = function () { return In({ $$currentRetry: this._currentRetry, $$fullTitle: this.fullTitle(), $$isPending: this.pending, $$retriedTest: this._retriedTest || null, $$slow: this._slow, $$titlePath: this.titlePath(), body: this.body, duration: this.duration, err: this.err, parent: In({ $$fullTitle: this.parent.fullTitle() }, od, this.parent.id), speed: this.speed, state: this.state, title: this.title, type: this.type, file: this.file }, od, this.id) }; function ud (n, t, i) { return { runWithSuite: function (e) { return function () { e.run() } }, before: function (e, t) { n[0].beforeAll(e, t) }, after: function (e, t) { n[0].afterAll(e, t) }, beforeEach: function (e, t) { n[0].beforeEach(e, t) }, afterEach: function (e, t) { n[0].afterEach(e, t) }, suite: { only: function (e) { if (i.options.forbidOnly) { throw fd(i) } return e.isOnly = !0, this.create(e) }, skip: function (e) { return e.pending = !0, this.create(e) }, create: function (e) { let t; const r = Hh.create(n[0], e.title); if (r.pending = Boolean(e.pending), r.file = e.file, n.unshift(r), e.isOnly && r.markOnly(), r.pending && i.options.forbidPending && (t = r, !i.options.grep || i.options.grep && i.options.grep.test(t.fullTitle()) && !i.options.invert)) { throw ld('Pending test forbidden') } if (typeof e.fn === 'function') { e.fn.call(r), n.shift() } else { if (void 0 === e.fn && !r.pending) { throw cd('Suite "' + r.fullTitle() + '" was defined but no callback was supplied. Supply a callback or explicitly skip the suite.', 'callback', 'function') } !e.fn && r.pending && n.shift() } return r } }, test: { only: function (e, t) { if (e.options.forbidOnly) { throw fd(e) } return t.markOnly(), t }, skip: function (e) { t.test(e) }, retries: function (e) { t.retries(e) } } } } var cd = bh.createMissingArgumentError; var ld = bh.createUnsupportedError; var fd = bh.createForbiddenExclusivityError; const hd = Hh.constants.EVENT_FILE_PRE_REQUIRE; var i = function (e) { const a = [e]; e.on(hd, function (r, n, i) { const o = ud(a, r, i); r.before = o.before, r.after = o.after, r.beforeEach = o.beforeEach, r.afterEach = o.afterEach, r.run = i.options.delay && o.runWithSuite(e), r.describe = r.context = function (e, t) { return o.suite.create({ title: e, file: n, fn: t }) }, r.xdescribe = r.xcontext = r.describe.skip = function (e, t) { return o.suite.skip({ title: e, file: n, fn: t }) }, r.describe.only = function (e, t) { return o.suite.only({ title: e, file: n, fn: t }) }, r.it = r.specify = function (e, t) { const r = a[0]; r.isPending() && (t = null); t = new ad(e, t); return t.file = n, r.addTest(t), t }, r.it.only = function (e, t) { return o.test.only(i, r.it(e, t)) }, r.xit = r.xspecify = r.it.skip = function (e) { return r.it(e) }, r.it.retries = function (e) { r.retries(e) } }) }; i.description = 'BDD or RSpec style [default]'; const pd = Hh.constants.EVENT_FILE_PRE_REQUIRE; var Vl = function (e) { const a = [e]; e.on(pd, function (r, n, i) { const o = ud(a, r, i); r.setup = o.beforeEach, r.teardown = o.afterEach, r.suiteSetup = o.before, r.suiteTeardown = o.after, r.run = i.options.delay && o.runWithSuite(e), r.suite = function (e, t) { return o.suite.create({ title: e, file: n, fn: t }) }, r.suite.skip = function (e, t) { return o.suite.skip({ title: e, file: n, fn: t }) }, r.suite.only = function (e, t) { return o.suite.only({ title: e, file: n, fn: t }) }, r.test = function (e, t) { const r = a[0]; r.isPending() && (t = null); t = new ad(e, t); return t.file = n, r.addTest(t), t }, r.test.only = function (e, t) { return o.test.only(i, r.test(e, t)) }, r.test.skip = o.test.skip, r.test.retries = o.test.retries }) }; Vl.description = 'traditional "suite"/"test" instead of BDD\'s "describe"/"it"'; const dd = Hh.constants.EVENT_FILE_PRE_REQUIRE; var Te = function (e) { const a = [e]; e.on(dd, function (r, n, i) { const o = ud(a, r, i); r.before = o.before, r.after = o.after, r.beforeEach = o.beforeEach, r.afterEach = o.afterEach, r.run = i.options.delay && o.runWithSuite(e), r.suite = function (e) { return a.length > 1 && a.shift(), o.suite.create({ title: e, file: n, fn: !1 }) }, r.suite.only = function (e) { return a.length > 1 && a.shift(), o.suite.only({ title: e, file: n, fn: !1 }) }, r.test = function (e, t) { t = new ad(e, t); return t.file = n, a[0].addTest(t), t }, r.test.only = function (e, t) { return o.test.only(i, r.test(e, t)) }, r.test.skip = o.test.skip, r.test.retries = o.test.retries }) }; Te.description = 'QUnit style'; ut = function (e) { const a = [e]; e.on(Hh.constants.EVENT_FILE_REQUIRE, function e (t, r) { for (const n in t) { if (typeof t[n] === 'function') { const i = t[n]; switch (n) { case 'before':a[0].beforeAll(i); break; case 'after':a[0].afterAll(i); break; case 'beforeEach':a[0].beforeEach(i); break; case 'afterEach':a[0].afterEach(i); break; default:var o = new ad(n, i); o.file = r, a[0].addTest(o) } } else { o = Hh.create(a[0], n), a.unshift(o), e(t[n], r), a.shift() } } }) }; ut.description = 'Node.js module ("exports") style'; const gd = { bdd: i, tdd: Vl, qunit: Te, exports: ut }; const yd = md; function md () {}md.prototype.runnable = function (e) { return arguments.length ? (this.test = this._runnable = e, this) : this._runnable }, md.prototype.timeout = function (e) { return arguments.length ? (this.runnable().timeout(e), this) : this.runnable().timeout() }, md.prototype.slow = function (e) { return arguments.length ? (this.runnable().slow(e), this) : this.runnable().slow() }, md.prototype.skip = function () { this.runnable().skip() }, md.prototype.retries = function (e) { return arguments.length ? (this.runnable().retries(e), this) : this.runnable().retries() }; const vd = t(Y); const bd = e(function (e, a) { const t = Eh.supportsEsModules(!0) ? wh : void 0; const i = bh.warn; const o = bh.createInvalidReporterError; const r = bh.createInvalidInterfaceError; const n = bh.createMochaInstanceAlreadyDisposedError; const s = bh.createMochaInstanceAlreadyRunningError; const u = bh.createUnsupportedError; let c = Hh.constants; const l = c.EVENT_FILE_PRE_REQUIRE; const f = c.EVENT_FILE_POST_REQUIRE; const h = c.EVENT_FILE_REQUIRE; const p = Eh.sQuote; const d = Nh('mocha:mocha'); a = e.exports = y; const g = Eh.defineConstants({ INIT: 'init', RUNNING: 'running', REFERENCES_CLEANED: 'referencesCleaned', DISPOSED: 'disposed' }); function y () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; var t = qn(qn({}, vd), t); this.files = [], this.options = t, this.suite = new a.Suite('', new a.Context(), !0), this._cleanReferencesAfterRun = !0, this._state = g.INIT, this.grep(t.grep).fgrep(t.fgrep).ui(t.ui).reporter(t.reporter, t.reporterOption || t.reporterOptions).slow(t.slow).global(t.global), void 0 !== t.timeout && this.timeout(!1 === t.timeout ? 0 : t.timeout), 'retries' in t && this.retries(t.retries), ['allowUncaught', 'asyncOnly', 'bail', 'checkLeaks', 'color', 'delay', 'diff', 'forbidOnly', 'forbidPending', 'fullTrace', 'growl', 'inlineDiffs', 'invert'].forEach(function (e) { t[e] && this[e]() }, this), t.rootHooks && this.rootHooks(t.rootHooks), this._runnerClass = a.Runner, this._lazyLoadFiles = !1, this.isWorker = Boolean(t.isWorker), this.globalSetup(t.globalSetup).globalTeardown(t.globalTeardown).enableGlobalSetup(t.enableGlobalSetup).enableGlobalTeardown(t.enableGlobalTeardown), t.parallel && (void 0 === t.jobs || t.jobs > 1) && (d('attempting to enable parallel mode'), this.parallelMode(!0)) }Eh.isBrowser() || void 0 === e.paths || (c = Eh.cwd(), e.paths.push(c, Hf.join(c, 'node_modules'))), a.utils = Eh, a.interfaces = gd, a.reporters = Fp, a.Runnable = Uh, a.Context = yd, a.Runner = gp, a.Suite = Hh, a.Hook = Vh, a.Test = ad, y.prototype.bail = function (e) { return this.suite.bail(!1 !== e), this }, y.prototype.addFile = function (e) { return this.files.push(e), this }, y.prototype.reporter = function (r, e) { if (typeof r === 'function') { this._reporter = r } else { let n; if (Fp[r = r || 'spec'] && (n = Fp[r]), !n) { try { n = m() } catch (t) { if (t.code === 'MODULE_NOT_FOUND') { try { n = m(Hf.resolve(Eh.cwd(), r)) } catch (e) { e.code === 'MODULE_NOT_FOUND' ? i(p(r) + ' reporter not found') : i(p(r) + ' reporter blew up with error:\n' + t.stack) } } else { i(p(r) + ' reporter blew up with error:\n' + t.stack) } } } if (!n) { throw o('invalid reporter ' + p(r), r) } this._reporter = n } return this.options.reporterOption = e, this.options.reporterOptions = e, this }, y.prototype.ui = function (t) { let e; if (typeof t === 'function') { e = t } else if (t = t || 'bdd', !(e = a.interfaces[t])) { try { e = m() } catch (e) { throw r('invalid interface ' + p(t), t) } } return e(this.suite), this.suite.on(l, function (e) { a.afterEach = e.afterEach || e.teardown, a.after = e.after || e.suiteTeardown, a.beforeEach = e.beforeEach || e.setup, a.before = e.before || e.suiteSetup, a.describe = e.describe || e.suite, a.it = e.it || e.test, a.xit = e.xit || e.test && e.test.skip, a.setup = e.setup || e.beforeEach, a.suiteSetup = e.suiteSetup || e.before, a.suiteTeardown = e.suiteTeardown || e.after, a.suite = e.suite || e.describe, a.teardown = e.teardown || e.afterEach, a.test = e.test || e.it, a.run = e.run }), this }, y.prototype.loadFiles = function (e) { const t = this; const r = this.suite; this.files.forEach(function (e) { e = Hf.resolve(e), r.emit(l, O, e, t), r.emit(h, m(), e, t), r.emit(f, O, e, t) }), e && e() }, y.prototype.loadFilesAsync = function () { const r = this; const n = this.suite; return this.lazyLoadFiles(!0), t ? t.loadFilesAsync(this.files, function (e) { n.emit(l, O, e, r) }, function (e, t) { n.emit(h, t, e, r), n.emit(f, O, e, r) }) : new Promise(function (e) { r.loadFiles(e) }) }, y.unloadFile = function (e) { if (Eh.isBrowser()) { throw u('unloadFile() is only suported in a Node.js environment') } return wh.unloadFile(e) }, y.prototype.unloadFiles = function () { if (this._state === g.DISPOSED) { throw n('Mocha instance is already disposed, it cannot be used again.', this._cleanReferencesAfterRun, this) } return this.files.forEach(function (e) { y.unloadFile(e) }), this._state = g.INIT, this }, y.prototype.fgrep = function (e) { return e ? this.grep(new RegExp(Uf(e))) : this }, y.prototype.grep = function (e) { let t; return Eh.isString(e) ? (t = e.match(/^\/(.*)\/(g|i|)$|.*/), this.options.grep = new RegExp(t[1] || t[0], t[2])) : this.options.grep = e, this }, y.prototype.invert = function () { return this.options.invert = !0, this }, y.prototype.checkLeaks = function (e) { return this.options.checkLeaks = !1 !== e, this }, y.prototype.cleanReferencesAfterRun = function (e) { return this._cleanReferencesAfterRun = !1 !== e, this }, y.prototype.dispose = function () { if (this._state === g.RUNNING) { throw s('Cannot dispose while the mocha instance is still running tests.') } this.unloadFiles(), this._previousRunner && this._previousRunner.dispose(), this.suite.dispose(), this._state = g.DISPOSED }, y.prototype.fullTrace = function (e) { return this.options.fullTrace = !1 !== e, this }, y.prototype.growl = function () { let e; return this.options.growl = this.isGrowlCapable(), this.options.growl || (e = Eh.isBrowser() ? 'notification support not available in this browser...' : 'notification support prerequisites not installed...', console.error(e + ' cannot enable!')), this }, y.prototype.isGrowlCapable = Yp, y.prototype._growl = Wp, y.prototype.globals = y.prototype.global = function (e) { return this.options.global = (this.options.global || []).concat(e).filter(Boolean).filter(function (e, t, r) { return r.indexOf(e) === t }), this }, y.prototype.color = function (e) { return this.options.color = !1 !== e, this }, y.prototype.inlineDiffs = function (e) { return this.options.inlineDiffs = !1 !== e, this }, y.prototype.diff = function (e) { return this.options.diff = !1 !== e, this }, y.prototype.timeout = function (e) { return this.suite.timeout(e), this }, y.prototype.retries = function (e) { return this.suite.retries(e), this }, y.prototype.slow = function (e) { return this.suite.slow(e), this }, y.prototype.asyncOnly = function (e) { return this.options.asyncOnly = !1 !== e, this }, y.prototype.noHighlighting = function () { return this.options.noHighlighting = !0, this }, y.prototype.allowUncaught = function (e) { return this.options.allowUncaught = !1 !== e, this }, y.prototype.delay = function () { return this.options.delay = !0, this }, y.prototype.forbidOnly = function (e) { return this.options.forbidOnly = !1 !== e, this }, y.prototype.forbidPending = function (e) { return this.options.forbidPending = !1 !== e, this }, y.prototype._guardRunningStateTransition = function () { if (this._state === g.RUNNING) { throw s('Mocha instance is currently running tests, cannot start a next test run until this one is done', this) } if (this._state === g.DISPOSED || this._state === g.REFERENCES_CLEANED) { throw n('Mocha instance is already disposed, cannot start a new test run. Please create a new mocha instance. Be sure to set disable `cleanReferencesAfterRun` when you want to reuse the same mocha instance for multiple test runs.', this._cleanReferencesAfterRun, this) } }, Object.defineProperty(y.prototype, 'version', { value: Bp.version, configurable: !1, enumerable: !0, writable: !1 }), y.prototype.run = function (t) { const i = this; this._guardRunningStateTransition(), this._state = g.RUNNING, this._previousRunner && (this._previousRunner.dispose(), this.suite.reset()), this.files.length && !this._lazyLoadFiles && this.loadFiles(); const e = this.suite; const o = this.options; o.files = this.files; const r = new this._runnerClass(e, { delay: o.delay, cleanReferencesAfterRun: this._cleanReferencesAfterRun }); rd(r); const n = new this._reporter(r, o); r.checkLeaks = !0 === o.checkLeaks, r.fullStackTrace = o.fullTrace, r.asyncOnly = o.asyncOnly, r.allowUncaught = o.allowUncaught, r.forbidOnly = o.forbidOnly, r.forbidPending = o.forbidPending, o.grep && r.grep(o.grep, o.invert), o.global && r.globals(o.global), o.growl && this._growl(r), void 0 !== o.color && (a.reporters.Base.useColors = o.color), a.reporters.Base.inlineDiffs = o.inlineDiffs, a.reporters.Base.hideDiff = !o.diff; return (function () { const e = Cn(regeneratorRuntime.mark(function e (t) { let r, n; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (i.options.enableGlobalSetup && i.hasGlobalSetupFixtures()) { return e.next = 3, i.runGlobalSetup(t) } e.next = 6; break; case 3:e.t0 = e.sent, e.next = 7; break; case 6:e.t0 = {}; case 7:return r = e.t0, e.next = 10, t.runAsync({ files: i.files, options: o }); case 10:if (n = e.sent, i.options.enableGlobalTeardown && i.hasGlobalTeardownFixtures()) { return e.next = 14, i.runGlobalTeardown(t, { context: r }) } e.next = 14; break; case 14:return e.abrupt('return', n); case 15:case 'end':return e.stop() } } }, e) })); return function () { return e.apply(this, arguments) } }())(r).then(function (e) { i._previousRunner = r, i._state = i._cleanReferencesAfterRun ? g.REFERENCES_CLEANED : g.INIT, t = t || Eh.noop, typeof n.done === 'function' ? n.done(e, t) : t(e) }), r }, y.prototype.rootHooks = function (e) { const t = this; var r = arguments.length > 0 && void 0 !== e ? e : {}; var n = r.beforeAll; var i = void 0 === n ? [] : n; var e = r.beforeEach; var n = void 0 === e ? [] : e; var e = r.afterAll; var e = void 0 === e ? [] : e; var r = r.afterEach; var r = void 0 === r ? [] : r; var i = Eh.castArray(i); var n = Eh.castArray(n); var e = Eh.castArray(e); var r = Eh.castArray(r); return i.forEach(function (e) { t.suite.beforeAll(e) }), n.forEach(function (e) { t.suite.beforeEach(e) }), e.forEach(function (e) { t.suite.afterAll(e) }), r.forEach(function (e) { t.suite.afterEach(e) }), this }, y.prototype.parallelMode = function (e) { e = !(arguments.length > 0 && void 0 !== e) || e; if (Eh.isBrowser()) { throw u('parallel mode is only supported in Node.js') } e = Boolean(e); if (e === this.options.parallel && this._lazyLoadFiles && this._runnerClass !== a.Runner) { return this } if (this._state !== g.INIT) { throw u('cannot change parallel mode after having called run()') } return this.options.parallel = e, this._runnerClass = e ? wh : a.Runner, this.lazyLoadFiles(this._lazyLoadFiles || e) }, y.prototype.lazyLoadFiles = function (e) { return this._lazyLoadFiles = !0 === e, d('set lazy load to %s', e), this }, y.prototype.globalSetup = function (e) { e = arguments.length > 0 && void 0 !== e ? e : [], e = Eh.castArray(e); return this.options.globalSetup = e, d('configured %d global setup functions', e.length), this }, y.prototype.globalTeardown = function (e) { e = arguments.length > 0 && void 0 !== e ? e : [], e = Eh.castArray(e); return this.options.globalTeardown = e, d('configured %d global teardown functions', e.length), this }, y.prototype.runGlobalSetup = (function () { const e = Cn(regeneratorRuntime.mark(function e () { let t; let r; const n = arguments; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (t = n.length > 0 && void 0 !== n[0] ? n[0] : {}, (r = this.options.globalSetup) && r.length) { return d('run(): global setup starting'), e.next = 6, this._runGlobalFixtures(r, t) } e.next = 7; break; case 6:d('run(): global setup complete'); case 7:return e.abrupt('return', t); case 8:case 'end':return e.stop() } } }, e, this) })); return function () { return e.apply(this, arguments) } }()), y.prototype.runGlobalTeardown = (function () { const e = Cn(regeneratorRuntime.mark(function e () { let t; let r; const n = arguments; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:if (t = n.length > 0 && void 0 !== n[0] ? n[0] : {}, (r = this.options.globalTeardown) && r.length) { return d('run(): global teardown starting'), e.next = 6, this._runGlobalFixtures(r, t) } e.next = 6; break; case 6:return d('run(): global teardown complete'), e.abrupt('return', t); case 8:case 'end':return e.stop() } } }, e, this) })); return function () { return e.apply(this, arguments) } }()), y.prototype._runGlobalFixtures = (function () { const e = Cn(regeneratorRuntime.mark(function e () { let t; let r; let n; let i; let o; let a; const s = arguments; return regeneratorRuntime.wrap(function (e) { for (;;) { switch (e.prev = e.next) { case 0:o = s.length > 0 && void 0 !== s[0] ? s[0] : [], t = s.length > 1 && void 0 !== s[1] ? s[1] : {}, n = !(r = !0), e.prev = 4, o = (function (e) { let t; if (typeof Symbol !== 'undefined') { if (Symbol.asyncIterator && (t = e[Symbol.asyncIterator]) != null) { return t.call(e) } if (Symbol.iterator && (t = e[Symbol.iterator]) != null) { return t.call(e) } } throw new TypeError('Object is not async iterable') }(o)); case 6:return e.next = 8, o.next(); case 8:return a = e.sent, r = a.done, e.next = 12, a.value; case 12:if (a = e.sent, r) { e.next = 20; break } return a = a, e.next = 17, a.call(t); case 17:r = !0, e.next = 6; break; case 20:e.next = 26; break; case 22:e.prev = 22, e.t0 = e.catch(4), n = !0, i = e.t0; case 26:if (e.prev = 26, e.prev = 27, r || o.return == null) { e.next = 31; break } return e.next = 31, o.return(); case 31:if (e.prev = 31, n) { throw i } e.next = 34; break; case 34:return e.finish(31); case 35:return e.finish(26); case 36:return e.abrupt('return', t); case 37:case 'end':return e.stop() } } }, e, null, [[4, 22, 26, 36], [27,, 31, 35]]) })); return function () { return e.apply(this, arguments) } }()), y.prototype.enableGlobalSetup = function (e) { e = !(arguments.length > 0 && void 0 !== e) || e; return this.options.enableGlobalSetup = Boolean(e), this }, y.prototype.enableGlobalTeardown = function (e) { e = !(arguments.length > 0 && void 0 !== e) || e; return this.options.enableGlobalTeardown = Boolean(e), this }, y.prototype.hasGlobalSetupFixtures = function () { return Boolean(this.options.globalSetup.length) }, y.prototype.hasGlobalTeardownFixtures = function () { return Boolean(this.options.globalTeardown.length) } }); tr.stdout = dt({ label: !1 }); const wd = new bd({ reporter: 'html' }); const Ed = O.Date; const Td = O.setTimeout; const Ad = []; const _d = O.onerror; tr.removeListener = function (e, t) { e === 'uncaughtException' && (O.onerror = _d || function () {}, (t = Ad.indexOf(t)) !== -1 && Ad.splice(t, 1)) }, tr.listenerCount = function (e) { return e === 'uncaughtException' ? Ad.length : 0 }, tr.on = function (e, n) { e === 'uncaughtException' && (O.onerror = function (e, t, r) { return n(new Error(e + ' (' + t + ':' + r + ')')), !wd.options.allowUncaught }, Ad.push(n)) }, tr.listeners = function (e) { return e === 'uncaughtException' ? Ad : [] }, wd.suite.removeAllListeners('pre-require'); let Sd; const xd = []; function Rd () { for (let e = (new Ed()).getTime(); xd.length && (new Ed()).getTime() - e < 100;) { xd.shift()() }Sd = xd.length ? Td(Rd, 0) : null } return bd.Runner.immediately = function (e) { xd.push(e), Sd = Sd || Td(Rd, 0) }, wd.throwError = function (t) { throw Ad.forEach(function (e) { e(t) }), t }, wd.ui = function (e) { return bd.prototype.ui.call(this, e), this.suite.emit('pre-require', O, null, this), this }, wd.setup = function (t) { typeof t === 'string' && (t = { ui: t }), !0 === t.delay && this.delay(); const r = this; return Object.keys(t).filter(function (e) { return e !== 'delay' }).forEach(function (e) { Object.prototype.hasOwnProperty.call(t, e) && r[e](t[e]) }), this }, wd.run = function (r) { const n = wd.options; wd.globals('location'); const e = (O.location.search || '').replace('?', '').split('&').reduce(function (e, t) { var r = t.indexOf('='); const n = t.slice(0, r); var r = t.slice(++r); return e[n] = decodeURIComponent(r.replace(/\+/g, '%20')), e }, {}); return e.grep && wd.grep(e.grep), e.fgrep && wd.fgrep(e.fgrep), e.invert && wd.invert(), bd.prototype.run.call(wd, function (e) { const t = O.document; t && t.getElementById('mocha') && !0 !== n.noHighlighting && (function (e) { for (let t = document.getElementById('mocha').getElementsByTagName(e), r = 0, n = t.length; r < n; ++r) { t[r].innerHTML = t[r].innerHTML.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\/\/(.*)/gm, '<span class="comment">//$1</span>').replace(/('.*?')/gm, '<span class="string">$1</span>').replace(/(\d+\.\d+)/gm, '<span class="number">$1</span>').replace(/(\d+)/gm, '<span class="number">$1</span>').replace(/\bnew[ \t]+(\w+)/gm, '<span class="keyword">new</span> <span class="init">$1</span>').replace(/\b(function|new|throw|return|var|if|else)\b/gm, '<span class="keyword">$1</span>') } }('code')), r && r(e) }) }, bd.process = tr, O.Mocha = bd, O.mocha = wd, Object.assign(wd, O) }))
